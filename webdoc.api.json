{
	"version": "1.0.0",
	"metadata": {
		"linker": "(unsigned)",
		"siteDomain": "https://webdoc-labs.github.io",
		"siteRoot": "example-documentation"
	},
	"root": {
		"id": "root-k7hlfvuRI7TCWHbsTpX73",
		"name": "",
		"type": "RootDoc",
		"members": [
			{
				"id": "QwyBgAIZYn8SzcgGxUPLx",
				"name": "PIXI",
				"brief": "",
				"type": "NSDoc",
				"params": [],
				"returns": [],
				"extends": [],
				"implements": [],
				"members": [
					{
						"id": "Jryta6_Hnyu8IiJv-U5KW",
						"name": "utils",
						"brief": "",
						"defaultValue": "false",
						"scope": "static",
						"type": "NSDoc",
						"params": [],
						"returns": [],
						"extends": [],
						"implements": [],
						"members": [
							{
								"id": "EsONZj1JAJMyk-OSf9I9d",
								"name": "skipHello",
								"brief": "<p>Skips the hello message of renderers that are created after this is run.</p>",
								"deprecated": true,
								"type": "FunctionDoc",
								"params": [],
								"returns": [
									{
										"dataType": {
											"tokens": [
												{
													"value": "void",
													"kind": "canonical"
												}
											],
											"template": "void"
										}
									}
								],
								"extends": [],
								"implements": []
							}
						]
					},
					{
						"id": "Ewxcu5Bz-iPLCmeByD5dF",
						"name": "TilingSprite",
						"brief": "",
						"deprecated": "since 5.0.0",
						"scope": "static",
						"see": [
							"PIXI.TilingSprite"
						],
						"type": "ClassDoc",
						"params": [],
						"returns": [],
						"extends": [],
						"implements": [],
						"members": [
							{
								"id": "8D7cFdbRuotYkaKWSWy5e",
								"name": "constructor",
								"brief": "",
								"access": "public",
								"scope": "instance",
								"type": "MethodDoc",
								"params": [],
								"returns": []
							}
						]
					},
					{
						"id": "BH4vHZFul3aEuQ6LzFpk8",
						"name": "AbstractRenderer",
						"brief": "",
						"type": "ClassDoc",
						"params": [],
						"returns": [],
						"extends": [],
						"implements": [],
						"members": [
							{
								"id": "xUZMnbVFzOuP1yqq9nk3r",
								"name": "backgroundColor",
								"brief": "<p>The background color to fill if not transparent</p>",
								"scope": "instance",
								"type": "PropertyDoc",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "-yDnufvY3TgSk-YSGd5wT",
								"name": "constructor",
								"brief": "",
								"access": "public",
								"scope": "instance",
								"type": "MethodDoc",
								"params": [],
								"returns": []
							}
						]
					},
					{
						"id": "MGYRF3NF98VKY2IzMhCsk",
						"name": "ObjectRenderer",
						"brief": "<p>Base for a common object renderer that can be used as a system renderer plugin.</p>",
						"type": "ClassDoc",
						"params": [],
						"returns": [],
						"extends": [
							"PIXI.System"
						],
						"implements": [],
						"members": [
							{
								"id": "T2wJHnGiOUcMMiH2l18Gh",
								"name": "renderer",
								"brief": "<p>The renderer this manager works for.</p>",
								"scope": "instance",
								"type": "PropertyDoc",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "pK_-CfG_KfWguhrLUIIq_",
								"name": "constructor",
								"brief": "",
								"scope": "instance",
								"type": "MethodDoc",
								"params": [
									{
										"identifier": "renderer",
										"optional": false,
										"description": "<p>The renderer this manager works for.</p>",
										"dataType": {
											"tokens": [
												{
													"value": "PIXI.Renderer",
													"kind": "canonical"
												},
												{
													"value": "PIXI.Renderer",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									}
								],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "vk375cVlCUOWH_Ej79SbD",
								"name": "destroy",
								"brief": "",
								"scope": "instance",
								"type": "MethodDoc",
								"description": "<p>Generic destruction method that frees all resources. This\nshould be called by subclasses.</p>",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "MmP7_xhXN505YR_dcvQhb",
								"name": "flush",
								"brief": "",
								"scope": "instance",
								"type": "MethodDoc",
								"description": "<p>Stub method that should be used to empty the current\nbatch by rendering objects now.</p>",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "MlpgIsIHRVpicuHpfaIc7",
								"name": "render",
								"brief": "",
								"scope": "instance",
								"type": "MethodDoc",
								"description": "<p>Keeps the object to render. It doesn't have to be\nrendered immediately.</p>",
								"params": [
									{
										"identifier": "object",
										"optional": false,
										"description": "<p>The object to render.</p>",
										"dataType": {
											"tokens": [
												{
													"value": "PIXI.DisplayObject",
													"kind": "canonical"
												},
												{
													"value": "PIXI.DisplayObject",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									}
								],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "OkU86eekc8NQrG_v_tFUg",
								"name": "start",
								"brief": "",
								"scope": "instance",
								"type": "MethodDoc",
								"description": "<p>Stub method that initializes any state required before\nrendering starts. It is different from the <code>prerender</code>\ns...",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "wIBUa6zZPbxzyaEZvD6C4",
								"name": "stop",
								"brief": "",
								"scope": "instance",
								"type": "MethodDoc",
								"description": "<p>Stops the renderer. It should free up any state and\nbecome dormant.</p>",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							}
						]
					},
					{
						"id": "fzNOMAvhxIv3hGaKRPWDq",
						"name": "System",
						"brief": "<p>System is a base class used for extending systems used by the {@link PIXI.AbstractRenderer}.</p>",
						"see": [
							"PIXI.Renderer#addSystem"
						],
						"type": "ClassDoc",
						"description": "<p>Search more here: {@link https://www.google.com/}</p>",
						"params": [],
						"returns": [],
						"extends": [],
						"implements": [],
						"members": [
							{
								"id": "rmHbNcukNmZ16IR6G30d4",
								"name": "renderer",
								"brief": "<p>The renderer this manager works for.</p>",
								"scope": "instance",
								"type": "PropertyDoc",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "acOMdKlhjaDrOlAMCp01I",
								"name": "constructor",
								"brief": "",
								"scope": "instance",
								"type": "MethodDoc",
								"params": [
									{
										"identifier": "renderer",
										"optional": false,
										"description": "<p>The renderer this manager works for.</p>",
										"dataType": {
											"tokens": [
												{
													"value": "PIXI.Renderer",
													"kind": "canonical"
												},
												{
													"value": "PIXI.Renderer",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									}
								],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "r5S79UCcBuVAg8inn87Ia",
								"name": "destroy",
								"brief": "<p>Generic destroy methods to be overridden by the subclass</p>",
								"scope": "instance",
								"type": "MethodDoc",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							}
						]
					},
					{
						"id": "IhsayeUF0ncj0VfkdqZV6",
						"name": "AbstractBatchRenderer",
						"brief": "<p>Renderer dedicated to drawing and batching sprites.</p>",
						"access": "protected",
						"readonly": true,
						"type": "ClassDoc",
						"description": "<p>This is the default batch renderer. It buffers objects\nwith texture-based geometries and renders them in\nbatches. It uploa...",
						"params": [],
						"returns": [],
						"extends": [
							"PIXI.ObjectRenderer"
						],
						"implements": [],
						"members": [
							{
								"id": "TCvO7aUid71lz9SJ7H1WY",
								"name": "_drawCallPool",
								"brief": "",
								"scope": "static",
								"type": "PropertyDoc",
								"description": "<p>Pool of <code>BatchDrawCall</code> objects that <code>flush</code> used\nto create &quot;batches&quot; of the objects being...",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "5Tv93MlKqHnopZ2MiDqxy",
								"name": "_textureArrayPool",
								"brief": "",
								"scope": "static",
								"type": "PropertyDoc",
								"description": "<p>Pool of <code>BatchDrawCall</code> objects that <code>flush</code> used\nto create &quot;batches&quot; of the objects being...",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "d7QdI91nECSBBt5RwdZOi",
								"name": "bufferSize",
								"brief": "",
								"scope": "instance",
								"type": "PropertyDoc",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "1f5n0vqocpJCE7RMxfzsM",
								"name": "MAX_TEXTURES",
								"brief": "",
								"defaultValue": "1",
								"readonly": true,
								"scope": "instance",
								"see": [
									"PIXI.AbstractBatchRenderer#contextChange"
								],
								"type": "PropertyDoc",
								"description": "<p>Maximum number of textures that can be uploaded to\nthe GPU under the current context. It is initialized\nproperly in <code>...",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "H0V4UvKGwFWW6DkuKrCAD",
								"name": "renderer",
								"brief": "<p>The renderer this manager works for.</p>",
								"scope": "instance",
								"type": "PropertyDoc",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "aBIl_7iWbpzbu8ab-6cP0",
								"name": "size",
								"brief": "",
								"defaultValue": "settings.SPRITE_BATCH_SIZE * 4",
								"scope": "instance",
								"type": "PropertyDoc",
								"description": "<p>The number of bufferable objects before a flush\noccurs automatically.</p>",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "MtWQwmqbxi9w3pgXSYKKF",
								"name": "state",
								"brief": "<p>The WebGL state in which this renderer will work.</p>",
								"readonly": true,
								"scope": "instance",
								"type": "PropertyDoc",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "ykk7mkaqkabgAmIpAt6sQ",
								"name": "vertexSize",
								"brief": "",
								"defaultValue": "undefined",
								"readonly": true,
								"scope": "instance",
								"type": "PropertyDoc",
								"description": "<p>Size of data being buffered per vertex in the\nattribute buffers (in floats). By default, the\nbatch-renderer plugin uses 6:...",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "qiD7H0_31IZ2-vTlZUULl",
								"name": "_shader",
								"brief": "<p>This shader is generated by <code>this.shaderGenerator</code>.</p>",
								"access": "protected",
								"defaultValue": "undefined",
								"scope": "instance",
								"type": "PropertyDoc",
								"description": "<p>It is generated specifically to handle the required\nnumber of textures being batched together.</p>",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "N-JGl5NucHYArW5FAhx7Y",
								"name": "geometryClass",
								"brief": "",
								"access": "protected",
								"defaultValue": "PIXI.BatchGeometry",
								"scope": "instance",
								"type": "PropertyDoc",
								"description": "<p>The class that represents the geometry of objects\nthat are going to be batched with this.</p>",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "Q14FQbC4oS3X1d_yI9_-p",
								"name": "shaderGenerator",
								"brief": "",
								"access": "protected",
								"defaultValue": "undefined",
								"scope": "instance",
								"type": "PropertyDoc",
								"description": "<p>This is used to generate a shader that can\ncolor each vertex based on a <code>aTextureId</code>\nattribute that points to a...",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "6Y-YeG7JXp7MSPsO7m_9g",
								"name": "_aBuffers",
								"brief": "",
								"access": "private",
								"scope": "instance",
								"see": [
									"PIXI.AbstractBatchRenderer#getAttributeBuffer"
								],
								"type": "PropertyDoc",
								"description": "<p>Pool of <code>ViewableBuffer</code> objects that are sorted in\norder of increasing size. The flush method uses\nthe buffer ...",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "wNYsjUk9CjvLbWOD_uund",
								"name": "_bufferedElements",
								"brief": "<p>Buffer of objects that are yet to be rendered.</p>",
								"access": "private",
								"scope": "instance",
								"type": "PropertyDoc",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "rUeuZs9Ah0Sw1bHdjCXNJ",
								"name": "_bufferedTextures",
								"brief": "",
								"access": "private",
								"scope": "instance",
								"type": "PropertyDoc",
								"description": "<p>Data for texture batch builder, helps to save a bit of CPU on a pass</p>",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "uJ0SWnK3jL4Wv36vLSaCN",
								"name": "_bufferSize",
								"brief": "",
								"access": "private",
								"defaultValue": "0",
								"scope": "instance",
								"type": "PropertyDoc",
								"description": "<p>Number of elements that are buffered and are\nwaiting to be flushed.</p>",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "8oL_DGzwXym1UKTVk9vN_",
								"name": "_flushId",
								"brief": "",
								"access": "private",
								"defaultValue": "0",
								"scope": "instance",
								"type": "PropertyDoc",
								"description": "<p>A flush may occur multiple times in a single\nframe. On iOS devices or when\n<code>settings.CAN_UPLOAD_SAME_BUFFER</code> is...",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "itLseNkErKwkZTv8DSQen",
								"name": "_iBuffers",
								"brief": "",
								"access": "private",
								"scope": "instance",
								"see": [
									"PIXI.AbstractBatchRenderer#getIndexBuffer"
								],
								"type": "PropertyDoc",
								"description": "<p>Pool of <code>Uint16Array</code> objects that are sorted in\norder of increasing size. The flush method uses\nthe buffer wit...",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "KfcbQVzwL0iB8Cr6GoOF2",
								"name": "_indexCount",
								"brief": "",
								"access": "private",
								"defaultValue": "0",
								"scope": "instance",
								"type": "PropertyDoc",
								"description": "<p>Total count of all indices used by the currently\nbuffered objects.</p>",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "MhUa2c19sIxPNruEdI8Ly",
								"name": "_packedGeometries",
								"brief": "",
								"access": "private",
								"scope": "instance",
								"see": [
									"PIXI.AbstractBatchRenderer.contextChange"
								],
								"type": "PropertyDoc",
								"description": "<p>Pool of <code>this.geometryClass</code> geometry objects\nthat store buffers. They are used to pass data\nto the shader on e...",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "FCZnmGbPe4SwW7OiVrNMu",
								"name": "_packedGeometryPoolSize",
								"brief": "",
								"access": "private",
								"defaultValue": "2",
								"scope": "instance",
								"type": "PropertyDoc",
								"description": "<p>Size of <code>this._packedGeometries</code>. It can be expanded\nif more than <code>this._packedGeometryPoolSize</code> flu...",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "Do-DnK3-LRj79E4kkok0m",
								"name": "_vertexCount",
								"brief": "",
								"access": "private",
								"defaultValue": "0",
								"scope": "instance",
								"type": "PropertyDoc",
								"description": "<p>Total count of all vertices used by the currently\nbuffered objects.</p>",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "5YqMeCUcl6hpS4q4X6or_",
								"name": "bindAndClearTexArray",
								"brief": "<p>Bind textures for current rendering</p>",
								"scope": "instance",
								"type": "MethodDoc",
								"params": [
									{
										"identifier": "texArray",
										"optional": false,
										"dataType": {
											"tokens": [
												{
													"value": "PIXI.BatchTextureArray",
													"kind": "canonical"
												},
												{
													"value": "PIXI.BatchTextureArray",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									}
								],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "pHWOfiAxVUFWakREFt5j6",
								"name": "buildDrawCalls",
								"brief": "<p>Populating drawcalls for rendering</p>",
								"scope": "instance",
								"type": "MethodDoc",
								"params": [
									{
										"identifier": "texArray",
										"optional": false,
										"dataType": {
											"tokens": [
												{
													"value": "PIXI.BatchTextureArray",
													"kind": "canonical"
												},
												{
													"value": "PIXI.BatchTextureArray",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									},
									{
										"identifier": "start",
										"optional": false,
										"dataType": {
											"tokens": [
												{
													"value": "number",
													"kind": "canonical"
												},
												{
													"value": "number",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									},
									{
										"identifier": "finish",
										"optional": false,
										"dataType": {
											"tokens": [
												{
													"value": "number",
													"kind": "canonical"
												},
												{
													"value": "number",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									}
								],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "JQHiiRZF9ySz8TKA9hMmY",
								"name": "constructor",
								"brief": "",
								"scope": "instance",
								"type": "MethodDoc",
								"description": "<p>This will hook onto the renderer's <code>contextChange</code>\nand <code>prerender</code> signals.</p>",
								"params": [
									{
										"identifier": "renderer",
										"optional": false,
										"description": "<p>The renderer this works for.</p>",
										"dataType": {
											"tokens": [
												{
													"value": "PIXI.Renderer",
													"kind": "canonical"
												},
												{
													"value": "PIXI.Renderer",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									}
								],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "4t3Ybnx5mUVnlVg1LDWax",
								"name": "contextChange",
								"brief": "<p>Handles the <code>contextChange</code> signal.</p>",
								"scope": "instance",
								"type": "MethodDoc",
								"description": "<p>It calculates <code>this.MAX_TEXTURES</code> and allocating the\npacked-geometry object pool.</p>",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "rOFjnaFdQb81RXrAkG88H",
								"name": "destroy",
								"brief": "<p>Destroys this <code>AbstractBatchRenderer</code>. It cannot be used again.</p>",
								"scope": "instance",
								"type": "MethodDoc",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "i4s0dmKxT3gdz2RJ0VFBh",
								"name": "flush",
								"brief": "<p>Renders the content <em>now</em> and empties the current batch.</p>",
								"scope": "instance",
								"type": "MethodDoc",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "rOXKU9QKNOpT4lZRmzm0X",
								"name": "initFlushBuffers",
								"brief": "<p>Makes sure that static and dynamic flush pooled objects have correct dimensions</p>",
								"scope": "instance",
								"type": "MethodDoc",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "8xKUwyYswzbkroTY8mshD",
								"name": "onPrerender",
								"brief": "<p>Handles the <code>prerender</code> signal.</p>",
								"scope": "instance",
								"type": "MethodDoc",
								"description": "<p>It ensures that flushes start from the first geometry\nobject again.</p>",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "vPdNUmbjkXxjV2620IH9i",
								"name": "packInterleavedGeometry",
								"brief": "",
								"scope": "instance",
								"type": "MethodDoc",
								"description": "<p>Takes the four batching parameters of <code>element</code>, interleaves\nand pushes them into the batching attribute/index ...",
								"params": [
									{
										"identifier": "element",
										"optional": false,
										"description": "<p>element being rendered</p>",
										"dataType": {
											"tokens": [
												{
													"value": "PIXI.Sprite",
													"kind": "canonical"
												},
												{
													"value": "PIXI.Sprite",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									},
									{
										"identifier": "attributeBuffer",
										"optional": false,
										"description": "<p>attribute buffer.</p>",
										"dataType": {
											"tokens": [
												{
													"value": "PIXI.ViewableBuffer",
													"kind": "canonical"
												},
												{
													"value": "PIXI.ViewableBuffer",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									},
									{
										"identifier": "indexBuffer",
										"optional": false,
										"description": "<p>index buffer</p>",
										"dataType": {
											"tokens": [
												{
													"value": "Uint16Array",
													"kind": "canonical"
												},
												{
													"value": "Uint16Array",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									},
									{
										"identifier": "aIndex",
										"optional": false,
										"description": "<p>number of floats already in the attribute buffer</p>",
										"dataType": {
											"tokens": [
												{
													"value": "number",
													"kind": "canonical"
												},
												{
													"value": "number",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									},
									{
										"identifier": "iIndex",
										"optional": false,
										"description": "<p>number of indices already in <code>indexBuffer</code></p>",
										"dataType": {
											"tokens": [
												{
													"value": "number",
													"kind": "canonical"
												},
												{
													"value": "number",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									}
								],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "f7M5W_BkIvAPvaVXAUQKU",
								"name": "render",
								"brief": "",
								"scope": "instance",
								"type": "MethodDoc",
								"description": "<p>Buffers the &quot;batchable&quot; object. It need not be rendered\nimmediately.</p>",
								"params": [
									{
										"identifier": "element",
										"optional": false,
										"description": "<p>the element to render when\nusing this renderer</p>",
										"dataType": {
											"tokens": [
												{
													"value": "PIXI.DisplayObject",
													"kind": "canonical"
												},
												{
													"value": "PIXI.DisplayObject",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									}
								],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "1lceUTmCSMcFQjPjxNNHP",
								"name": "start",
								"brief": "<p>Starts a new sprite batch.</p>",
								"scope": "instance",
								"type": "MethodDoc",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "rlJ1c9LXB1IitPBs3w5Wl",
								"name": "stop",
								"brief": "<p>Stops and flushes the current batch.</p>",
								"scope": "instance",
								"type": "MethodDoc",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "QQqvFbZrHmZ95ZyTyJlhP",
								"name": "getAttributeBuffer",
								"brief": "",
								"access": "private",
								"scope": "instance",
								"type": "MethodDoc",
								"description": "<p>Fetches an attribute buffer from <code>this._aBuffers</code> that\ncan hold atleast <code>size</code> floats.</p>",
								"params": [
									{
										"identifier": "size",
										"optional": false,
										"description": "<p>minimum capacity required</p>",
										"dataType": {
											"tokens": [
												{
													"value": "number",
													"kind": "canonical"
												},
												{
													"value": "number",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									}
								],
								"returns": [
									{
										"description": "<ul>\n<li>buffer than can hold atleast <code>size</code> floats</li>\n</ul>",
										"dataType": {
											"tokens": [
												{
													"value": "ViewableBuffer",
													"kind": "canonical"
												},
												{
													"value": "ViewableBuffer",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									}
								],
								"extends": [],
								"implements": []
							},
							{
								"id": "t2yOcE0sVdLIeaUILfNy3",
								"name": "getIndexBuffer",
								"brief": "",
								"access": "private",
								"scope": "instance",
								"type": "MethodDoc",
								"description": "<p>Fetches an index buffer from <code>this._iBuffers</code> that can\nhas atleast <code>size</code> capacity.</p>",
								"params": [
									{
										"identifier": "size",
										"optional": false,
										"description": "<p>minimum required capacity</p>",
										"dataType": {
											"tokens": [
												{
													"value": "number",
													"kind": "canonical"
												},
												{
													"value": "number",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									}
								],
								"returns": [
									{
										"description": "<ul>\n<li>buffer that can fit <code>size</code>\nindices.</li>\n</ul>",
										"dataType": {
											"tokens": [
												{
													"value": "Uint16Array",
													"kind": "canonical"
												},
												{
													"value": "Uint16Array",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									}
								],
								"extends": [],
								"implements": []
							}
						]
					},
					{
						"id": "CjxcdKwXPxEPAbobitkGf",
						"name": "TRANSFORM_MODE",
						"brief": "<p>Constants that specify the transform type.</p>",
						"deprecated": "since 5.0.0",
						"scope": "static",
						"type": "EnumDoc",
						"params": [],
						"returns": [],
						"extends": [],
						"implements": [],
						"members": [
							{
								"id": "d5jiiS2051cy-9vbd4hL8",
								"name": "DYNAMIC",
								"brief": "",
								"access": "public",
								"scope": "static",
								"type": "PropertyDoc"
							},
							{
								"id": "KWPPryHfkr6b67IvsBYm8",
								"name": "STATIC",
								"brief": "",
								"access": "public",
								"scope": "static",
								"type": "PropertyDoc"
							}
						]
					},
					{
						"id": "al9DIh4zO3_ylCCWnCtiN",
						"name": "",
						"brief": "",
						"type": "TypedefDoc",
						"params": [],
						"returns": [],
						"extends": [],
						"implements": [],
						"members": [
							{
								"id": "YxkH250O46R9FjpyBjH9I",
								"name": "destroy",
								"brief": "",
								"access": "public",
								"scope": "static",
								"type": "PropertyDoc",
								"description": "<p>Called when destroying Application, scoped to Application instance</p>"
							},
							{
								"id": "ZFZqacbqbomWSNAqBE4nx",
								"name": "init",
								"brief": "",
								"access": "public",
								"scope": "static",
								"type": "PropertyDoc",
								"description": "<p>Called when Application is constructed, scoped to Application instance.\nPasses in <code>options</code> as the only argumen..."
							}
						]
					},
					{
						"id": "lwRQxhfQL6NSqy3cxI12u",
						"name": "SVG_SIZE",
						"brief": "",
						"deprecated": "since 5.0.0",
						"scope": "static",
						"see": [
							"PIXI.resources.SVGResource.SVG_SIZE"
						],
						"type": "PropertyDoc",
						"params": [],
						"returns": [],
						"extends": [],
						"implements": []
					}
				]
			},
			{
				"id": "Hgh_qYrBbO6nq-PrbGjgV",
				"name": "R",
				"brief": "<p>A namespace dedicated to road manipulation utilites.</p>",
				"readonly": true,
				"type": "NSDoc",
				"params": [],
				"returns": [],
				"extends": [],
				"implements": [],
				"members": [
					{
						"id": "cLZCh6V12gQ41Bvto9pXQ",
						"name": "Road",
						"brief": "<p>This is another road class.</p>",
						"type": "ClassDoc",
						"params": [],
						"returns": [],
						"extends": [],
						"implements": [],
						"members": [
							{
								"id": "vhCil0PBf05A62eUec-cY",
								"name": "constructor",
								"brief": "<p>This is another road class.</p>",
								"access": "public",
								"scope": "instance",
								"type": "MethodDoc",
								"params": [],
								"returns": []
							}
						]
					},
					{
						"id": "bExfK5KvGLPF_Kj2cQRwq",
						"name": "DEFAULT_LANES",
						"brief": "<p>The default no. of lanes per one side of road</p>",
						"defaultValue": "4",
						"scope": "static",
						"type": "PropertyDoc",
						"params": [],
						"returns": [],
						"extends": [],
						"implements": []
					},
					{
						"id": "SKcErKRb2crFA5UvPA0KF",
						"name": "buildRoad",
						"brief": "<p>Builds a road</p>",
						"scope": "instance",
						"type": "MethodDoc",
						"params": [
							{
								"identifier": "address",
								"optional": false,
								"dataType": {
									"tokens": [
										{
											"value": "string",
											"kind": "canonical"
										}
									],
									"template": "string"
								}
							}
						],
						"returns": [
							{
								"dataType": {
									"tokens": [
										{
											"value": "ExampleFactory",
											"kind": "canonical"
										},
										{
											"value": "ExampleFactory",
											"kind": "link"
										}
									],
									"template": "%1"
								}
							}
						],
						"extends": [],
						"implements": []
					}
				]
			},
			{
				"id": "W0mvoQPSQc1wrYZviToVA",
				"name": "Ts",
				"brief": "",
				"type": "NSDoc",
				"params": [],
				"returns": [],
				"extends": [],
				"implements": [],
				"members": [
					{
						"id": "XS5CMV_u1YytLYLSea1pd",
						"name": "Transaction",
						"brief": "",
						"type": "ClassDoc",
						"params": [],
						"returns": [],
						"extends": [],
						"implements": [],
						"members": [
							{
								"id": "-atVEmhX5lWfegaipKjf9",
								"name": "constructor",
								"brief": "",
								"access": "public",
								"scope": "instance",
								"type": "MethodDoc",
								"params": [],
								"returns": []
							}
						]
					},
					{
						"id": "RUCS1aklNkZt7cHnFTT-W",
						"name": "Banana",
						"brief": "<p>Banana</p>",
						"type": "TypedefDoc",
						"params": [],
						"returns": [],
						"extends": [],
						"implements": [],
						"members": [
							{
								"id": "D_JN5VA_FLkjtIurDr0UI",
								"name": "color",
								"brief": "<p>Color of banana</p>",
								"type": "PropertyDoc",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "Rq3-nFlmfd15ReLpWTRH0",
								"name": "peels",
								"brief": "<p>Peels in banana</p>",
								"type": "PropertyDoc",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "ecogrbVnccvjIrluLsxpY",
								"name": "usage",
								"brief": "<p>Analytics around how many people have interacted with this banana</p>",
								"type": "PropertyDoc",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "eqTi3gOl-5OjN4QRCNC92",
								"name": "ripe",
								"brief": "<p>Evaluate if banana is ripe for eating</p>",
								"type": "MethodDoc",
								"params": [],
								"returns": [
									{
										"dataType": {
											"tokens": [
												{
													"value": "boolean",
													"kind": "canonical"
												}
											],
											"template": "boolean"
										}
									}
								],
								"extends": [],
								"implements": []
							},
							{
								"id": "yDs9CYmwBHZE2IVVRjIgf",
								"name": "rotten",
								"brief": "<p>Check if banana has rotten</p>",
								"type": "MethodDoc",
								"params": [],
								"returns": [
									{
										"dataType": {
											"tokens": [
												{
													"value": "boolean",
													"kind": "canonical"
												}
											],
											"template": "boolean"
										}
									}
								],
								"extends": [],
								"implements": []
							}
						]
					}
				]
			},
			{
				"id": "ZUEn-p1qkWtoJ3OsbM-Dd",
				"name": "Bean",
				"brief": "<p>Bean class</p>",
				"type": "ClassDoc",
				"params": [],
				"returns": [],
				"extends": [],
				"implements": [],
				"members": [
					{
						"id": "gD8rqS52QHg-5mdRlpEIJ",
						"name": "constructor",
						"brief": "<p>Bean class</p>",
						"access": "public",
						"scope": "instance",
						"type": "MethodDoc",
						"params": [],
						"returns": []
					},
					{
						"id": "PX0z9bzeTCahyK71qtUev",
						"name": "roast",
						"brief": "<p>(optional) roasting method</p>",
						"abstract": true,
						"scope": "instance",
						"type": "MethodDoc",
						"params": [],
						"returns": [
							{
								"dataType": {
									"tokens": [
										{
											"value": "void",
											"kind": "canonical"
										}
									],
									"template": "void"
								}
							}
						],
						"extends": [],
						"implements": []
					}
				]
			},
			{
				"id": "F_xCvhu7Li5pxiNAUljC5",
				"name": "Car",
				"brief": "<p><em>Simulation</em> for a automobile that can drive on a manifold surface.</p>",
				"type": "ClassDoc",
				"description": "<pre class=\"hljs\"><code><span class=\"hljs-keyword\">const</span> car = <span class=\"hljs-keyword\">new</span> Car({ <span class...",
				"params": [],
				"returns": [],
				"extends": [
					"PhysicalObject"
				],
				"implements": [],
				"members": [
					{
						"id": "BdmqvFwLcugl5U-e4t3TN",
						"name": "DEFAULT_DRIVE_SHIFT",
						"brief": "",
						"defaultValue": "\"manual\"",
						"scope": "static",
						"type": "PropertyDoc",
						"params": [],
						"returns": [],
						"extends": [],
						"implements": []
					},
					{
						"id": "k5Vins5BrNN9J2dvHYSIJ",
						"name": "bounds",
						"brief": "",
						"scope": "instance",
						"type": "PropertyDoc",
						"description": "<p>The mesh enclosing this object. By default, it is a &quot;point&quot; object at the its own\nposition.</p>",
						"params": [],
						"returns": [],
						"extends": [],
						"implements": []
					},
					{
						"id": "jJoltJypkLLb0jH4HcfKA",
						"name": "interactions",
						"brief": "<p>All causal interactions with other objects</p>",
						"scope": "instance",
						"type": "PropertyDoc",
						"params": [],
						"returns": [],
						"extends": [],
						"implements": []
					},
					{
						"id": "lQapPh3ko3YG6pSwdbeza",
						"name": "mass",
						"brief": "<p>The mass of this object in kilograms.</p>",
						"defaultValue": "0",
						"scope": "instance",
						"type": "PropertyDoc",
						"params": [],
						"returns": [],
						"extends": [],
						"implements": []
					},
					{
						"id": "eBjUg1NuZki_PfBO92TKq",
						"name": "model",
						"brief": "",
						"access": "public",
						"defaultValue": "\"TEST\"",
						"scope": "instance",
						"type": "PropertyDoc",
						"params": [],
						"returns": [],
						"extends": [],
						"implements": []
					},
					{
						"id": "VyTYq4mu8foD8B6v8qdbI",
						"name": "position",
						"brief": "<p>The absolute position of this object's center of mass (in the universal reference frame)</p>",
						"defaultValue": "[0, 0, 0]",
						"scope": "instance",
						"type": "PropertyDoc",
						"params": [],
						"returns": [],
						"extends": [],
						"implements": []
					},
					{
						"id": "fT6mbh44cHzxqcNAuTwzv",
						"name": "velocity",
						"brief": "<p>The absolute velocity of this object (in the universal reference frame)</p>",
						"defaultValue": "[0, 0, 0]",
						"scope": "instance",
						"type": "PropertyDoc",
						"params": [],
						"returns": [],
						"extends": [],
						"implements": []
					},
					{
						"id": "ogxAOycd3dsQoVINZgI2p",
						"name": "vin",
						"brief": "",
						"defaultValue": "0",
						"scope": "instance",
						"type": "PropertyDoc",
						"params": [],
						"returns": [],
						"extends": [],
						"implements": []
					},
					{
						"id": "FeGvP9kVecgq10WUBXfFm",
						"name": "registerRetail",
						"brief": "<p>Register a retail dealer for buying a car from</p>",
						"scope": "static",
						"type": "MethodDoc",
						"params": [
							{
								"identifier": "name",
								"optional": false,
								"dataType": {
									"tokens": [
										{
											"value": "string",
											"kind": "canonical"
										}
									],
									"template": "string"
								}
							}
						],
						"returns": [],
						"extends": [],
						"implements": []
					},
					{
						"id": "QGYIZWLj0IeEJRQCqnJSN",
						"name": "constructor",
						"brief": "",
						"scope": "instance",
						"type": "MethodDoc",
						"params": [
							{
								"identifier": "model",
								"optional": false,
								"default": "\"TEST\"",
								"dataType": {
									"tokens": [
										{
											"value": "string",
											"kind": "canonical"
										}
									],
									"template": "string"
								}
							}
						],
						"returns": [],
						"extends": [],
						"implements": []
					},
					{
						"id": "yXI6g6SSYCVEZoE_rz7Dz",
						"name": "onCrash",
						"brief": "",
						"examples": [
							{
								"caption": "",
								"code": "car.onCrash((car) => console.logicalAssignment(car.id + \" crashed!\"))"
							}
						],
						"scope": "instance",
						"type": "MethodDoc",
						"params": [
							{
								"identifier": "callback",
								"optional": false,
								"dataType": {
									"tokens": [
										{
											"value": "Function",
											"kind": "canonical"
										}
									],
									"template": "Function"
								}
							},
							{
								"identifier": "callback.name",
								"dataType": {
									"tokens": [
										{
											"value": "string",
											"kind": "canonical"
										}
									],
									"template": "string"
								}
							}
						],
						"returns": [],
						"extends": [],
						"implements": []
					}
				]
			},
			{
				"id": "dVovKXI_90a59vgt88dsL",
				"name": "CoffeeBean",
				"brief": "<p>This class illustrates how you can create a Java-bean like component in JavaScript</p>",
				"type": "ClassDoc",
				"params": [],
				"returns": [],
				"extends": [
					"Bean"
				],
				"implements": [],
				"members": [
					{
						"id": "N-qksMBZo9b05ijh7mCeR",
						"name": "maturity",
						"brief": "",
						"scope": "instance",
						"type": "PropertyDoc",
						"params": [],
						"returns": [],
						"extends": [],
						"implements": []
					},
					{
						"id": "DR61yXEnjs857hSnO5cul",
						"name": "roasted",
						"brief": "",
						"scope": "instance",
						"type": "PropertyDoc",
						"params": [],
						"returns": [],
						"extends": [],
						"implements": []
					},
					{
						"id": "HRB2uGvfqnKWOH1WqnEED",
						"name": "constructor",
						"brief": "",
						"scope": "instance",
						"type": "MethodDoc",
						"params": [
							{
								"identifier": "options",
								"optional": true,
								"dataType": {
									"tokens": [
										{
											"value": "object",
											"kind": "canonical"
										}
									],
									"template": "object"
								}
							},
							{
								"identifier": "options.roasted",
								"optional": true,
								"description": "<p>whether the bean is <code>roasted</code></p>",
								"dataType": {
									"tokens": [
										{
											"value": "boolean",
											"kind": "canonical"
										}
									],
									"template": "boolean"
								}
							},
							{
								"identifier": "options.maturity",
								"optional": true,
								"dataType": {
									"tokens": [
										{
											"value": "number",
											"kind": "canonical"
										},
										{
											"value": "number",
											"kind": "canonical"
										}
									],
									"template": "%1"
								}
							}
						],
						"returns": [],
						"extends": [],
						"implements": []
					},
					{
						"id": "YOInQvR5hq7hk7zdlSmeY",
						"name": "roast",
						"brief": "<p>Roast this coffee bean.</p>",
						"scope": "instance",
						"type": "MethodDoc",
						"description": "<p>NOTE: You cannot re-roast coffee beans and an error will be thrown if you try to\nroast a roasted coffee bean.</p>",
						"params": [],
						"returns": [],
						"extends": [],
						"implements": []
					}
				]
			},
			{
				"id": "FfEl6A8Z_iDY9l-6tdQ57",
				"name": "ExampleFactory",
				"examples": [
					{
						"caption": "",
						"code": "ExampleFactory.getInstance()\n .build()"
					}
				],
				"type": "ClassDoc",
				"description": "<p>{@link ExampleFactory} can be used to build examples.</p>\n<pre class=\"hljs\"><code><span class=\"hljs-comment\">// <span clas...",
				"params": [
					{
						"identifier": "context",
						"optional": true,
						"default": "null",
						"description": "<p>A custom context for the factory.</p>",
						"dataType": {
							"tokens": [
								{
									"value": "ExampleContext",
									"kind": "canonical"
								},
								{
									"value": "ExampleContext",
									"kind": "canonical"
								}
							],
							"template": "%1"
						}
					}
				],
				"returns": [],
				"extends": [],
				"implements": [],
				"members": [
					{
						"id": "7OJO1J-lKtp-JOfkJSHvo",
						"name": "getInstance",
						"brief": "<p>Gets a lazily-initialized, shared singleton instance of {@link ExampleFactory}.</p>",
						"scope": "static",
						"type": "MethodDoc",
						"params": [],
						"returns": [
							{
								"dataType": {
									"tokens": [
										{
											"value": "ExampleFactory",
											"kind": "canonical"
										},
										{
											"value": "ExampleFactory",
											"kind": "link"
										}
									],
									"template": "%1"
								}
							}
						],
						"extends": [],
						"implements": []
					},
					{
						"id": "wQFwazMyp_2CZOPkFYYuU",
						"name": "build",
						"brief": "<p>Build the road.</p>",
						"scope": "instance",
						"type": "MethodDoc",
						"params": [],
						"returns": [],
						"extends": [],
						"implements": []
					},
					{
						"id": "sr9QF6WYSgA8-d_4qGncj",
						"name": "constructor",
						"brief": "<p>This constructor should only be used for custom contexts.</p>",
						"access": "public",
						"scope": "instance",
						"type": "MethodDoc",
						"params": [
							{
								"identifier": "context",
								"optional": true,
								"default": "null",
								"description": "<p>A custom context for the factory.</p>",
								"dataType": {
									"tokens": [
										{
											"value": "ExampleContext",
											"kind": "canonical"
										},
										{
											"value": "ExampleContext",
											"kind": "canonical"
										}
									],
									"template": "%1"
								}
							}
						],
						"returns": []
					},
					{
						"id": "27GqkLB3-WY-AytQrHQV7",
						"name": "getContext",
						"brief": "<p>Get the context of this factory.</p>",
						"scope": "instance",
						"type": "MethodDoc",
						"params": [],
						"returns": [
							{
								"dataType": {
									"tokens": [
										{
											"value": "ExampleContext",
											"kind": "canonical"
										},
										{
											"value": "ExampleContext",
											"kind": "canonical"
										}
									],
									"template": "%1"
								}
							}
						],
						"extends": [],
						"implements": []
					}
				]
			},
			{
				"id": "hKZR6DdwSlw8EL1nJQLtX",
				"name": "Gravity",
				"brief": "<p>This class shouldn't be documented!</p>",
				"type": "ClassDoc",
				"params": [],
				"returns": [],
				"extends": [
					"PhysicalInteraction"
				],
				"implements": [],
				"members": [
					{
						"id": "60CWK-huSc6aOVRLGmbOX",
						"name": "constructor",
						"brief": "<p>This class shouldn't be documented!</p>",
						"access": "public",
						"scope": "instance",
						"type": "MethodDoc",
						"params": [],
						"returns": []
					},
					{
						"id": "ESCnv-oZYHGfaUZ1z8tHw",
						"name": "force",
						"brief": "<p>This method should be overriden to calculate the force at the given instant.</p>",
						"scope": "instance",
						"type": "MethodDoc",
						"params": [],
						"returns": [
							{
								"dataType": {
									"tokens": [
										{
											"value": "Vector<3>",
											"kind": "canonical"
										},
										{
											"value": "Vector",
											"kind": "link"
										},
										{
											"value": "3",
											"kind": "canonical"
										}
									],
									"template": "%1<%2>"
								}
							}
						],
						"extends": [],
						"implements": []
					}
				]
			},
			{
				"id": "TRSADCX2tA3XEaVuXUvQ2",
				"name": "PhysicalInteraction",
				"brief": "",
				"readonly": true,
				"type": "ClassDoc",
				"description": "<p>A physical interaction is a force causes object positions to be re-evaulated each frame based on\nforce's magnitude.</p>",
				"params": [],
				"returns": [],
				"extends": [],
				"implements": [],
				"members": [
					{
						"id": "rQG1NsubVLd6gVuNBGhAD",
						"name": "GRAVITATIONAL_CONSTANT",
						"brief": "",
						"defaultValue": "1",
						"scope": "static",
						"type": "PropertyDoc",
						"params": [],
						"returns": [],
						"extends": [],
						"implements": []
					},
					{
						"id": "sVMyKKqtLUPeyuAuHSyTn",
						"name": "createGravity",
						"brief": "<p>Creates a graviational force</p>",
						"scope": "static",
						"type": "MethodDoc",
						"params": [
							{
								"identifier": "objects",
								"optional": false,
								"dataType": {
									"tokens": [
										{
											"value": "Tuple<PhysicalObject, 2>",
											"kind": "canonical"
										},
										{
											"value": "Tuple",
											"kind": "canonical"
										},
										{
											"value": "PhysicalObject",
											"kind": "link"
										},
										{
											"value": "2",
											"kind": "canonical"
										}
									],
									"template": "%1<%3, %2>"
								}
							}
						],
						"returns": [
							{
								"dataType": {
									"tokens": [
										{
											"value": "PhysicalInteraction",
											"kind": "canonical"
										},
										{
											"value": "PhysicalInteraction",
											"kind": "link"
										}
									],
									"template": "%1"
								}
							}
						],
						"extends": [],
						"implements": []
					},
					{
						"id": "mGcs61KaV8F-e7h4AFSkG",
						"name": "force",
						"brief": "<p>This method should be overriden to calculate the force at the given instant.</p>",
						"scope": "instance",
						"type": "MethodDoc",
						"params": [],
						"returns": [
							{
								"dataType": {
									"tokens": [
										{
											"value": "Vector<3>",
											"kind": "canonical"
										},
										{
											"value": "Vector",
											"kind": "link"
										},
										{
											"value": "3",
											"kind": "canonical"
										}
									],
									"template": "%1<%2>"
								}
							}
						],
						"extends": [],
						"implements": []
					}
				]
			},
			{
				"id": "zxPvglfedVLmS2xzEjEuP",
				"name": "PhysicalObject",
				"brief": "",
				"type": "ClassDoc",
				"description": "<p>Represents a physical-object and its intrinsic properties. This is useful for approximating\nextended objects as a uniform,...",
				"params": [],
				"returns": [],
				"extends": [],
				"implements": [],
				"members": [
					{
						"id": "0yJwDdrYLfdvKw9H8aEWc",
						"name": "bounds",
						"brief": "",
						"scope": "instance",
						"type": "PropertyDoc",
						"description": "<p>The mesh enclosing this object. By default, it is a &quot;point&quot; object at the its own\nposition.</p>",
						"params": [],
						"returns": [],
						"extends": [],
						"implements": []
					},
					{
						"id": "S65ZWaVe7chPJcXMoPDUr",
						"name": "interactions",
						"brief": "<p>All causal interactions with other objects</p>",
						"scope": "instance",
						"type": "PropertyDoc",
						"params": [],
						"returns": [],
						"extends": [],
						"implements": []
					},
					{
						"id": "Gy2pYUcoUR2F0bem03fHm",
						"name": "mass",
						"brief": "<p>The mass of this object in kilograms.</p>",
						"defaultValue": "0",
						"scope": "instance",
						"type": "PropertyDoc",
						"params": [],
						"returns": [],
						"extends": [],
						"implements": []
					},
					{
						"id": "NgMSJqVOr9az6Xqlq45kc",
						"name": "position",
						"brief": "<p>The absolute position of this object's center of mass (in the universal reference frame)</p>",
						"defaultValue": "[0, 0, 0]",
						"scope": "instance",
						"type": "PropertyDoc",
						"params": [],
						"returns": [],
						"extends": [],
						"implements": []
					},
					{
						"id": "YLfZVGbvBCDFEevMF1nXl",
						"name": "velocity",
						"brief": "<p>The absolute velocity of this object (in the universal reference frame)</p>",
						"defaultValue": "[0, 0, 0]",
						"scope": "instance",
						"type": "PropertyDoc",
						"params": [],
						"returns": [],
						"extends": [],
						"implements": []
					}
				]
			},
			{
				"id": "zCpfQYK1Tq5H4BG1jzeeY",
				"name": "Vector",
				"brief": "",
				"type": "ClassDoc",
				"params": [],
				"returns": [],
				"extends": [
					"Array"
				],
				"implements": [],
				"members": [
					{
						"id": "X5NEvaJ5pmffe69qIQnbN",
						"name": "dimensions",
						"brief": "",
						"scope": "instance",
						"type": "PropertyDoc",
						"description": "<p>The no. of components of this vector</p>",
						"params": [],
						"returns": [],
						"extends": [],
						"implements": []
					},
					{
						"id": "XwdWdFOCR18HTcWVJ6xG0",
						"name": "add",
						"brief": "<p>Add <code>vec</code> to this</p>",
						"scope": "instance",
						"type": "MethodDoc",
						"params": [
							{
								"identifier": "vec",
								"optional": false,
								"dataType": {
									"tokens": [
										{
											"value": "Vector",
											"kind": "canonical"
										},
										{
											"value": "Vector",
											"kind": "link"
										}
									],
									"template": "%1"
								}
							}
						],
						"returns": [],
						"extends": [],
						"implements": []
					},
					{
						"id": "TXyn5zNiA2secW2GuyBS1",
						"name": "equalTo",
						"brief": "<p>Whether this and <code>vec</code> are equal vectors</p>",
						"scope": "instance",
						"type": "MethodDoc",
						"params": [
							{
								"identifier": "vec",
								"optional": false,
								"dataType": {
									"tokens": [
										{
											"value": "Vector",
											"kind": "canonical"
										},
										{
											"value": "Vector",
											"kind": "link"
										}
									],
									"template": "%1"
								}
							}
						],
						"returns": [
							{
								"dataType": {
									"tokens": [
										{
											"value": "boolean",
											"kind": "canonical"
										}
									],
									"template": "boolean"
								}
							}
						],
						"extends": [],
						"implements": []
					},
					{
						"id": "MLgyvefNFhl3n9RFNsUWy",
						"name": "isCompat",
						"brief": "",
						"scope": "instance",
						"type": "MethodDoc",
						"description": "<p>Whether this and <code>vec</code> are compatible vectors (same dimensions)</p>",
						"params": [
							{
								"identifier": "vec",
								"optional": false,
								"dataType": {
									"tokens": [
										{
											"value": "Vector",
											"kind": "canonical"
										},
										{
											"value": "Vector",
											"kind": "link"
										}
									],
									"template": "%1"
								}
							}
						],
						"returns": [
							{
								"dataType": {
									"tokens": [
										{
											"value": "boolean",
											"kind": "canonical"
										}
									],
									"template": "boolean"
								}
							}
						],
						"extends": [],
						"implements": []
					}
				]
			},
			{
				"id": "AChn5ZSRgpx-kGt_bdY2k",
				"name": "CAR_MAKES",
				"brief": "",
				"see": [
					"CarDealer"
				],
				"type": "EnumDoc",
				"description": "<p>These are the possible types of car makes.</p>",
				"params": [],
				"returns": [],
				"extends": [],
				"implements": [],
				"members": [
					{
						"id": "QpSHpiaVkYLmT4L4fBibR",
						"name": "FERRARI",
						"brief": "",
						"access": "public",
						"scope": "static",
						"type": "PropertyDoc"
					},
					{
						"id": "QcLRsxnwYzi0w5S-E_U8G",
						"name": "FORD",
						"brief": "",
						"access": "public",
						"scope": "static",
						"type": "PropertyDoc"
					},
					{
						"id": "je7K-MaiV-WxO022sH-p8",
						"name": "GENERAL_MOTORS",
						"brief": "",
						"access": "public",
						"scope": "static",
						"type": "PropertyDoc"
					},
					{
						"id": "Y8Zk7one6p1LRCmmdngVv",
						"name": "JAGUAR",
						"brief": "",
						"access": "public",
						"scope": "static",
						"type": "PropertyDoc"
					},
					{
						"id": "JmvDj-dg9HEMEJys-OVIN",
						"name": "KIA",
						"brief": "",
						"access": "public",
						"scope": "static",
						"type": "PropertyDoc"
					},
					{
						"id": "CUJ2cR7WLToYOXcvkpbAA",
						"name": "LAMBORGHINI",
						"brief": "",
						"access": "public",
						"scope": "static",
						"type": "PropertyDoc"
					},
					{
						"id": "QeT3hbdth54EWc4KQpFgm",
						"name": "TOYOTA",
						"brief": "",
						"access": "public",
						"scope": "static",
						"type": "PropertyDoc",
						"description": "<p>toyota make</p>"
					}
				]
			},
			{
				"id": "W2BdxA3r0WZc5PO19kHSb",
				"name": "VectorArray",
				"brief": "",
				"type": "TypedefDoc",
				"description": "<p>A 3D vector</p>",
				"params": [],
				"returns": [],
				"extends": [],
				"implements": [],
				"members": [
					{
						"id": "xkociiMYy18wjd0EqVu6C",
						"name": "meta",
						"brief": "",
						"access": "public",
						"scope": "static",
						"type": "PropertyDoc"
					}
				]
			},
			{
				"id": "TbPj2OQQ0D-oh7Ri3YlNF",
				"name": "CarDealer",
				"brief": "<p>This is the interface for dealing with car dealers.</p>",
				"type": "InterfaceDoc",
				"params": [],
				"returns": [],
				"extends": [],
				"implements": [],
				"members": [
					{
						"id": "7O9iCD-rPUiMVR41LKgjS",
						"name": "closeTransaction",
						"brief": "<p>Close transaction. If you respond to the counteroffer, then it won't be closed.</p>",
						"type": "MethodDoc",
						"params": [
							{
								"identifier": "trans",
								"optional": false,
								"dataType": {
									"tokens": [
										{
											"value": "Transaction",
											"kind": "canonical"
										},
										{
											"value": "Ts.Transaction",
											"kind": "link"
										}
									],
									"template": "%1"
								}
							},
							{
								"identifier": "counteroffer",
								"optional": false,
								"dataType": {
									"tokens": [
										{
											"value": "(...t: Transaction) => void",
											"kind": "canonical"
										},
										{
											"value": "Ts.Transaction",
											"kind": "link"
										}
									],
									"template": "(...t: %1) => void"
								}
							}
						],
						"returns": [
							{
								"dataType": {
									"tokens": [
										{
											"value": "trans is Transaction",
											"kind": "canonical"
										},
										{
											"value": "Ts.Transaction",
											"kind": "link"
										}
									],
									"template": "trans is %1"
								}
							}
						],
						"extends": [],
						"implements": []
					},
					{
						"id": "Th1nloWR9eopWWTmc_BYz",
						"name": "initiateTransaction",
						"brief": "<p>Initiate a transaction/negotiation with a car dealer</p>",
						"type": "MethodDoc",
						"params": [
							{
								"identifier": "x",
								"optional": true,
								"description": "<p>info</p>",
								"dataType": {
									"tokens": [
										{
											"value": "object",
											"kind": "canonical"
										}
									],
									"template": "object"
								}
							}
						],
						"returns": [
							{
								"dataType": {
									"tokens": [
										{
											"value": "typeof Transaction",
											"kind": "canonical"
										},
										{
											"value": "Ts.Transaction",
											"kind": "link"
										}
									],
									"template": "typeof %1"
								}
							}
						],
						"extends": [],
						"implements": []
					},
					{
						"id": "8yCXd0u1_OEgHWjuKkzLY",
						"name": "offerAsk",
						"brief": "<p>Offer a price to sell the car.</p>",
						"type": "MethodDoc",
						"description": "<p>NOTE: This is invalid behaviour if you are the buyer in the transaction.</p>",
						"params": [
							{
								"identifier": "on",
								"optional": false,
								"dataType": {
									"tokens": [
										{
											"value": "Transaction",
											"kind": "canonical"
										},
										{
											"value": "Ts.Transaction",
											"kind": "link"
										}
									],
									"template": "%1"
								}
							},
							{
								"identifier": "counteroffer",
								"optional": true,
								"dataType": {
									"tokens": [
										{
											"value": "(t: Car) => void",
											"kind": "canonical"
										},
										{
											"value": "Car",
											"kind": "link"
										}
									],
									"template": "(t: %1) => void"
								}
							},
							{
								"identifier": "test",
								"optional": false,
								"dataType": {
									"tokens": [
										{
											"value": "{ [testProperty in keyof keyof] }: number",
											"kind": "canonical"
										}
									],
									"template": "{ [testProperty in keyof keyof] }: number"
								}
							}
						],
						"returns": [
							{
								"description": "<p>type inference is working</p>",
								"dataType": {
									"tokens": [
										{
											"value": "boolean",
											"kind": "canonical"
										}
									],
									"template": "boolean"
								}
							}
						],
						"extends": [],
						"implements": []
					},
					{
						"id": "GTxI99SgSoJj-nHJu89lY",
						"name": "offerBid",
						"brief": "<p>Offer a price to buy the car.</p>",
						"type": "MethodDoc",
						"description": "<p>NOTE: This is invalid behaviour if you are the seller in the transaction.</p>",
						"params": [
							{
								"identifier": "on",
								"optional": true,
								"dataType": {
									"tokens": [
										{
											"value": "{ t : Transaction, [id: string]: Transaction[] }",
											"kind": "canonical"
										},
										{
											"value": "Ts.Transaction",
											"kind": "link"
										},
										{
											"value": "Ts.Transaction",
											"kind": "link"
										}
									],
									"template": "{ t : %1, [id: string]: %2[] }"
								}
							},
							{
								"identifier": "counteroffer",
								"optional": true,
								"variadic": true,
								"dataType": {
									"tokens": [
										{
											"value": "Car | Vector",
											"kind": "canonical"
										},
										{
											"value": "Car",
											"kind": "link"
										},
										{
											"value": "Vector",
											"kind": "link"
										}
									],
									"template": "%1 | %2"
								}
							}
						],
						"returns": [
							{
								"dataType": {
									"tokens": [
										{
											"value": "boolean",
											"kind": "canonical"
										}
									],
									"template": "boolean"
								}
							}
						],
						"extends": [],
						"implements": []
					}
				]
			},
			{
				"id": "8JrReX5E05RuN1tgb8Ahk",
				"name": "installBean",
				"brief": "<p>Install a bean class</p>",
				"type": "FunctionDoc",
				"params": [
					{
						"identifier": "bean",
						"optional": false,
						"description": "<p>the bean class</p>",
						"dataType": {
							"tokens": [
								{
									"value": "{ new (): Bean }",
									"kind": "canonical"
								},
								{
									"value": "Bean",
									"kind": "link"
								}
							],
							"template": "{ new (): %1 }"
						}
					}
				],
				"returns": [
					{
						"dataType": {
							"tokens": [
								{
									"value": "void",
									"kind": "canonical"
								}
							],
							"template": "void"
						}
					}
				],
				"extends": [],
				"implements": []
			},
			{
				"id": "kdCDLFl2f3A-ZVwDO-AiS",
				"name": "isPhysicalObject",
				"brief": "",
				"authors": [
					"Shukant K. Pal &lt;shukantpal@outlook.com&gt;"
				],
				"copyright": "Shukant K. Pal (C) 2020",
				"license": "MIT",
				"see": [
					"PhysicalObject"
				],
				"since": "2020",
				"type": "FunctionDoc",
				"description": "<p>Checks whether the object is an instance of {@code PhysicalObject}.</p>",
				"params": [
					{
						"identifier": "object",
						"optional": false,
						"dataType": {
							"tokens": [
								{
									"value": "Object",
									"kind": "canonical"
								}
							],
							"template": "Object"
						}
					}
				],
				"returns": [
					{
						"dataType": {
							"tokens": [
								{
									"value": "boolean",
									"kind": "canonical"
								}
							],
							"template": "boolean"
						}
					}
				],
				"extends": [],
				"implements": []
			}
		]
	},
	"registry": {
		"pkg-sjKBPbypJR6yK62yvRK1N": {
			"uri": "/example-documentation/@webdoc/example.html"
		},
		"tutorial-car": {
			"uri": "/example-documentation/tutorials/car.html"
		},
		"tutorial-road": {
			"uri": "/example-documentation/tutorials/road.html"
		},
		"tutorial-api-manifest": {
			"uri": "/example-documentation/tutorials/api-manifest.html"
		},
		"QwyBgAIZYn8SzcgGxUPLx": {
			"uri": "/example-documentation/@webdoc/example/PIXI.html"
		},
		"Jryta6_Hnyu8IiJv-U5KW": {
			"uri": "/example-documentation/@webdoc/example/PIXI/utils.html"
		},
		"EsONZj1JAJMyk-OSf9I9d": {
			"uri": "/example-documentation/@webdoc/example/PIXI/utils/skipHello.html"
		},
		"Ewxcu5Bz-iPLCmeByD5dF": {
			"uri": "/example-documentation/@webdoc/example/PIXI/TilingSprite.html"
		},
		"8D7cFdbRuotYkaKWSWy5e": {
			"uri": "/example-documentation/@webdoc/example/PIXI/TilingSprite.html#constructor"
		},
		"BH4vHZFul3aEuQ6LzFpk8": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractRenderer.html"
		},
		"xUZMnbVFzOuP1yqq9nk3r": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractRenderer.html#backgroundColor"
		},
		"-yDnufvY3TgSk-YSGd5wT": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractRenderer.html#constructor"
		},
		"MGYRF3NF98VKY2IzMhCsk": {
			"uri": "/example-documentation/@webdoc/example/PIXI/ObjectRenderer.html"
		},
		"T2wJHnGiOUcMMiH2l18Gh": {
			"uri": "/example-documentation/@webdoc/example/PIXI/ObjectRenderer.html#renderer"
		},
		"pK_-CfG_KfWguhrLUIIq_": {
			"uri": "/example-documentation/@webdoc/example/PIXI/ObjectRenderer.html#constructor"
		},
		"vk375cVlCUOWH_Ej79SbD": {
			"uri": "/example-documentation/@webdoc/example/PIXI/ObjectRenderer.html#destroy"
		},
		"MmP7_xhXN505YR_dcvQhb": {
			"uri": "/example-documentation/@webdoc/example/PIXI/ObjectRenderer.html#flush"
		},
		"MlpgIsIHRVpicuHpfaIc7": {
			"uri": "/example-documentation/@webdoc/example/PIXI/ObjectRenderer.html#render"
		},
		"OkU86eekc8NQrG_v_tFUg": {
			"uri": "/example-documentation/@webdoc/example/PIXI/ObjectRenderer.html#start"
		},
		"wIBUa6zZPbxzyaEZvD6C4": {
			"uri": "/example-documentation/@webdoc/example/PIXI/ObjectRenderer.html#stop"
		},
		"fzNOMAvhxIv3hGaKRPWDq": {
			"uri": "/example-documentation/@webdoc/example/PIXI/System.html"
		},
		"rmHbNcukNmZ16IR6G30d4": {
			"uri": "/example-documentation/@webdoc/example/PIXI/System.html#renderer"
		},
		"acOMdKlhjaDrOlAMCp01I": {
			"uri": "/example-documentation/@webdoc/example/PIXI/System.html#constructor"
		},
		"r5S79UCcBuVAg8inn87Ia": {
			"uri": "/example-documentation/@webdoc/example/PIXI/System.html#destroy"
		},
		"IhsayeUF0ncj0VfkdqZV6": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html"
		},
		"TCvO7aUid71lz9SJ7H1WY": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#_drawCallPool"
		},
		"5Tv93MlKqHnopZ2MiDqxy": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#_textureArrayPool"
		},
		"d7QdI91nECSBBt5RwdZOi": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#bufferSize"
		},
		"1f5n0vqocpJCE7RMxfzsM": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#MAX_TEXTURES"
		},
		"H0V4UvKGwFWW6DkuKrCAD": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#renderer"
		},
		"aBIl_7iWbpzbu8ab-6cP0": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#size"
		},
		"MtWQwmqbxi9w3pgXSYKKF": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#state"
		},
		"ykk7mkaqkabgAmIpAt6sQ": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#vertexSize"
		},
		"qiD7H0_31IZ2-vTlZUULl": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#_shader"
		},
		"N-JGl5NucHYArW5FAhx7Y": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#geometryClass"
		},
		"Q14FQbC4oS3X1d_yI9_-p": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#shaderGenerator"
		},
		"6Y-YeG7JXp7MSPsO7m_9g": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#_aBuffers"
		},
		"wNYsjUk9CjvLbWOD_uund": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#_bufferedElements"
		},
		"rUeuZs9Ah0Sw1bHdjCXNJ": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#_bufferedTextures"
		},
		"uJ0SWnK3jL4Wv36vLSaCN": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#_bufferSize"
		},
		"8oL_DGzwXym1UKTVk9vN_": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#_flushId"
		},
		"itLseNkErKwkZTv8DSQen": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#_iBuffers"
		},
		"KfcbQVzwL0iB8Cr6GoOF2": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#_indexCount"
		},
		"MhUa2c19sIxPNruEdI8Ly": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#_packedGeometries"
		},
		"FCZnmGbPe4SwW7OiVrNMu": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#_packedGeometryPoolSize"
		},
		"Do-DnK3-LRj79E4kkok0m": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#_vertexCount"
		},
		"5YqMeCUcl6hpS4q4X6or_": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#bindAndClearTexArray"
		},
		"pHWOfiAxVUFWakREFt5j6": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#buildDrawCalls"
		},
		"JQHiiRZF9ySz8TKA9hMmY": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#constructor"
		},
		"4t3Ybnx5mUVnlVg1LDWax": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#contextChange"
		},
		"rOFjnaFdQb81RXrAkG88H": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#destroy"
		},
		"i4s0dmKxT3gdz2RJ0VFBh": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#flush"
		},
		"rOXKU9QKNOpT4lZRmzm0X": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#initFlushBuffers"
		},
		"8xKUwyYswzbkroTY8mshD": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#onPrerender"
		},
		"vPdNUmbjkXxjV2620IH9i": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#packInterleavedGeometry"
		},
		"f7M5W_BkIvAPvaVXAUQKU": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#render"
		},
		"1lceUTmCSMcFQjPjxNNHP": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#start"
		},
		"rlJ1c9LXB1IitPBs3w5Wl": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#stop"
		},
		"QQqvFbZrHmZ95ZyTyJlhP": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#getAttributeBuffer"
		},
		"t2yOcE0sVdLIeaUILfNy3": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#getIndexBuffer"
		},
		"CjxcdKwXPxEPAbobitkGf": {
			"uri": "/example-documentation/@webdoc/example/PIXI/TRANSFORM_MODE.html"
		},
		"d5jiiS2051cy-9vbd4hL8": {
			"uri": "/example-documentation/@webdoc/example/PIXI/TRANSFORM_MODE.html#DYNAMIC"
		},
		"KWPPryHfkr6b67IvsBYm8": {
			"uri": "/example-documentation/@webdoc/example/PIXI/TRANSFORM_MODE.html#STATIC"
		},
		"al9DIh4zO3_ylCCWnCtiN": {
			"uri": "/example-documentation/@webdoc/example/PIXI/.html"
		},
		"YxkH250O46R9FjpyBjH9I": {
			"uri": "/example-documentation/@webdoc/example/PIXI/.html#destroy"
		},
		"ZFZqacbqbomWSNAqBE4nx": {
			"uri": "/example-documentation/@webdoc/example/PIXI/.html#init"
		},
		"lwRQxhfQL6NSqy3cxI12u": {
			"uri": "/example-documentation/@webdoc/example/PIXI.html#SVG_SIZE"
		},
		"Hgh_qYrBbO6nq-PrbGjgV": {
			"uri": "/example-documentation/@webdoc/example/R.html"
		},
		"cLZCh6V12gQ41Bvto9pXQ": {
			"uri": "/example-documentation/@webdoc/example/R/Road.html"
		},
		"vhCil0PBf05A62eUec-cY": {
			"uri": "/example-documentation/@webdoc/example/R/Road.html#constructor"
		},
		"bExfK5KvGLPF_Kj2cQRwq": {
			"uri": "/example-documentation/@webdoc/example/R.html#DEFAULT_LANES"
		},
		"SKcErKRb2crFA5UvPA0KF": {
			"uri": "/example-documentation/@webdoc/example/R.html#buildRoad"
		},
		"W0mvoQPSQc1wrYZviToVA": {
			"uri": "/example-documentation/@webdoc/example/Ts.html"
		},
		"XS5CMV_u1YytLYLSea1pd": {
			"uri": "/example-documentation/@webdoc/example/Ts/Transaction.html"
		},
		"-atVEmhX5lWfegaipKjf9": {
			"uri": "/example-documentation/@webdoc/example/Ts/Transaction.html#constructor"
		},
		"RUCS1aklNkZt7cHnFTT-W": {
			"uri": "/example-documentation/@webdoc/example/Ts/Banana.html"
		},
		"D_JN5VA_FLkjtIurDr0UI": {
			"uri": "/example-documentation/@webdoc/example/Ts/Banana.html#color"
		},
		"Rq3-nFlmfd15ReLpWTRH0": {
			"uri": "/example-documentation/@webdoc/example/Ts/Banana.html#peels"
		},
		"ecogrbVnccvjIrluLsxpY": {
			"uri": "/example-documentation/@webdoc/example/Ts/Banana.html#usage"
		},
		"eqTi3gOl-5OjN4QRCNC92": {
			"uri": "/example-documentation/@webdoc/example/Ts/Banana.html#ripe"
		},
		"yDs9CYmwBHZE2IVVRjIgf": {
			"uri": "/example-documentation/@webdoc/example/Ts/Banana.html#rotten"
		},
		"ZUEn-p1qkWtoJ3OsbM-Dd": {
			"uri": "/example-documentation/@webdoc/example/Bean.html"
		},
		"gD8rqS52QHg-5mdRlpEIJ": {
			"uri": "/example-documentation/@webdoc/example/Bean.html#constructor"
		},
		"PX0z9bzeTCahyK71qtUev": {
			"uri": "/example-documentation/@webdoc/example/Bean.html#roast"
		},
		"F_xCvhu7Li5pxiNAUljC5": {
			"uri": "/example-documentation/@webdoc/example/Car.html"
		},
		"BdmqvFwLcugl5U-e4t3TN": {
			"uri": "/example-documentation/@webdoc/example/Car.html#DEFAULT_DRIVE_SHIFT"
		},
		"k5Vins5BrNN9J2dvHYSIJ": {
			"uri": "/example-documentation/@webdoc/example/Car.html#bounds"
		},
		"jJoltJypkLLb0jH4HcfKA": {
			"uri": "/example-documentation/@webdoc/example/Car.html#interactions"
		},
		"lQapPh3ko3YG6pSwdbeza": {
			"uri": "/example-documentation/@webdoc/example/Car.html#mass"
		},
		"eBjUg1NuZki_PfBO92TKq": {
			"uri": "/example-documentation/@webdoc/example/Car.html#model"
		},
		"VyTYq4mu8foD8B6v8qdbI": {
			"uri": "/example-documentation/@webdoc/example/Car.html#position"
		},
		"fT6mbh44cHzxqcNAuTwzv": {
			"uri": "/example-documentation/@webdoc/example/Car.html#velocity"
		},
		"ogxAOycd3dsQoVINZgI2p": {
			"uri": "/example-documentation/@webdoc/example/Car.html#vin"
		},
		"FeGvP9kVecgq10WUBXfFm": {
			"uri": "/example-documentation/@webdoc/example/Car.html#registerRetail"
		},
		"QGYIZWLj0IeEJRQCqnJSN": {
			"uri": "/example-documentation/@webdoc/example/Car.html#constructor"
		},
		"yXI6g6SSYCVEZoE_rz7Dz": {
			"uri": "/example-documentation/@webdoc/example/Car.html#onCrash"
		},
		"dVovKXI_90a59vgt88dsL": {
			"uri": "/example-documentation/@webdoc/example/CoffeeBean.html"
		},
		"N-qksMBZo9b05ijh7mCeR": {
			"uri": "/example-documentation/@webdoc/example/CoffeeBean.html#maturity"
		},
		"DR61yXEnjs857hSnO5cul": {
			"uri": "/example-documentation/@webdoc/example/CoffeeBean.html#roasted"
		},
		"HRB2uGvfqnKWOH1WqnEED": {
			"uri": "/example-documentation/@webdoc/example/CoffeeBean.html#constructor"
		},
		"YOInQvR5hq7hk7zdlSmeY": {
			"uri": "/example-documentation/@webdoc/example/CoffeeBean.html#roast"
		},
		"FfEl6A8Z_iDY9l-6tdQ57": {
			"uri": "/example-documentation/@webdoc/example/ExampleFactory.html"
		},
		"7OJO1J-lKtp-JOfkJSHvo": {
			"uri": "/example-documentation/@webdoc/example/ExampleFactory.html#getInstance"
		},
		"wQFwazMyp_2CZOPkFYYuU": {
			"uri": "/example-documentation/@webdoc/example/ExampleFactory.html#build"
		},
		"sr9QF6WYSgA8-d_4qGncj": {
			"uri": "/example-documentation/@webdoc/example/ExampleFactory.html#constructor"
		},
		"27GqkLB3-WY-AytQrHQV7": {
			"uri": "/example-documentation/@webdoc/example/ExampleFactory.html#getContext"
		},
		"hKZR6DdwSlw8EL1nJQLtX": {
			"uri": "/example-documentation/@webdoc/example/Gravity.html"
		},
		"60CWK-huSc6aOVRLGmbOX": {
			"uri": "/example-documentation/@webdoc/example/Gravity.html#constructor"
		},
		"ESCnv-oZYHGfaUZ1z8tHw": {
			"uri": "/example-documentation/@webdoc/example/Gravity.html#force"
		},
		"TRSADCX2tA3XEaVuXUvQ2": {
			"uri": "/example-documentation/@webdoc/example/PhysicalInteraction.html"
		},
		"rQG1NsubVLd6gVuNBGhAD": {
			"uri": "/example-documentation/@webdoc/example/PhysicalInteraction.html#GRAVITATIONAL_CONSTANT"
		},
		"sVMyKKqtLUPeyuAuHSyTn": {
			"uri": "/example-documentation/@webdoc/example/PhysicalInteraction.html#createGravity"
		},
		"mGcs61KaV8F-e7h4AFSkG": {
			"uri": "/example-documentation/@webdoc/example/PhysicalInteraction.html#force"
		},
		"zxPvglfedVLmS2xzEjEuP": {
			"uri": "/example-documentation/@webdoc/example/PhysicalObject.html"
		},
		"0yJwDdrYLfdvKw9H8aEWc": {
			"uri": "/example-documentation/@webdoc/example/PhysicalObject.html#bounds"
		},
		"S65ZWaVe7chPJcXMoPDUr": {
			"uri": "/example-documentation/@webdoc/example/PhysicalObject.html#interactions"
		},
		"Gy2pYUcoUR2F0bem03fHm": {
			"uri": "/example-documentation/@webdoc/example/PhysicalObject.html#mass"
		},
		"NgMSJqVOr9az6Xqlq45kc": {
			"uri": "/example-documentation/@webdoc/example/PhysicalObject.html#position"
		},
		"YLfZVGbvBCDFEevMF1nXl": {
			"uri": "/example-documentation/@webdoc/example/PhysicalObject.html#velocity"
		},
		"zCpfQYK1Tq5H4BG1jzeeY": {
			"uri": "/example-documentation/@webdoc/example/Vector.html"
		},
		"X5NEvaJ5pmffe69qIQnbN": {
			"uri": "/example-documentation/@webdoc/example/Vector.html#dimensions"
		},
		"XwdWdFOCR18HTcWVJ6xG0": {
			"uri": "/example-documentation/@webdoc/example/Vector.html#add"
		},
		"TXyn5zNiA2secW2GuyBS1": {
			"uri": "/example-documentation/@webdoc/example/Vector.html#equalTo"
		},
		"MLgyvefNFhl3n9RFNsUWy": {
			"uri": "/example-documentation/@webdoc/example/Vector.html#isCompat"
		},
		"AChn5ZSRgpx-kGt_bdY2k": {
			"uri": "/example-documentation/@webdoc/example/CAR_MAKES.html"
		},
		"QpSHpiaVkYLmT4L4fBibR": {
			"uri": "/example-documentation/@webdoc/example/CAR_MAKES.html#FERRARI"
		},
		"QcLRsxnwYzi0w5S-E_U8G": {
			"uri": "/example-documentation/@webdoc/example/CAR_MAKES.html#FORD"
		},
		"je7K-MaiV-WxO022sH-p8": {
			"uri": "/example-documentation/@webdoc/example/CAR_MAKES.html#GENERAL_MOTORS"
		},
		"Y8Zk7one6p1LRCmmdngVv": {
			"uri": "/example-documentation/@webdoc/example/CAR_MAKES.html#JAGUAR"
		},
		"JmvDj-dg9HEMEJys-OVIN": {
			"uri": "/example-documentation/@webdoc/example/CAR_MAKES.html#KIA"
		},
		"CUJ2cR7WLToYOXcvkpbAA": {
			"uri": "/example-documentation/@webdoc/example/CAR_MAKES.html#LAMBORGHINI"
		},
		"QeT3hbdth54EWc4KQpFgm": {
			"uri": "/example-documentation/@webdoc/example/CAR_MAKES.html#TOYOTA"
		},
		"W2BdxA3r0WZc5PO19kHSb": {
			"uri": "/example-documentation/@webdoc/example/VectorArray.html"
		},
		"xkociiMYy18wjd0EqVu6C": {
			"uri": "/example-documentation/@webdoc/example/VectorArray.html#meta"
		},
		"TbPj2OQQ0D-oh7Ri3YlNF": {
			"uri": "/example-documentation/@webdoc/example/CarDealer.html"
		},
		"7O9iCD-rPUiMVR41LKgjS": {
			"uri": "/example-documentation/@webdoc/example/CarDealer.html#closeTransaction"
		},
		"Th1nloWR9eopWWTmc_BYz": {
			"uri": "/example-documentation/@webdoc/example/CarDealer.html#initiateTransaction"
		},
		"8yCXd0u1_OEgHWjuKkzLY": {
			"uri": "/example-documentation/@webdoc/example/CarDealer.html#offerAsk"
		},
		"GTxI99SgSoJj-nHJu89lY": {
			"uri": "/example-documentation/@webdoc/example/CarDealer.html#offerBid"
		},
		"8JrReX5E05RuN1tgb8Ahk": {
			"uri": "/example-documentation/@webdoc/example/installBean.html"
		},
		"kdCDLFl2f3A-ZVwDO-AiS": {
			"uri": "/example-documentation/@webdoc/example/isPhysicalObject.html"
		}
	}
}