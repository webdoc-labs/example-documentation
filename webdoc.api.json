{
	"version": "1.0.0",
	"metadata": {
		"linker": "(unsigned)",
		"siteDomain": "https://webdoc-labs.github.io",
		"siteRoot": "example-documentation"
	},
	"root": {
		"id": "root--4lbeeGKC9MMG4x678w6X",
		"name": "",
		"type": "RootDoc",
		"members": [
			{
				"id": "tC93768hy8U49dn2Qm88k",
				"name": "PIXI",
				"brief": "",
				"type": "NSDoc",
				"members": [
					{
						"id": "0ejCXBjphj6dE8kTMAQz-",
						"name": "utils",
						"brief": "",
						"defaultValue": "false",
						"scope": "static",
						"type": "NSDoc",
						"members": [
							{
								"id": "CIyXY_cWxD5QhyEOaJ2ZK",
								"name": "skipHello",
								"brief": "<p>Skips the hello message of renderers that are created after this is run.</p>",
								"deprecated": true,
								"type": "FunctionDoc",
								"params": [],
								"returns": [
									{
										"dataType": {
											"tokens": [
												{
													"value": "void",
													"kind": "canonical"
												}
											],
											"template": "void"
										}
									}
								]
							}
						]
					},
					{
						"id": "4K1SVXk_1phhLl1RedGMI",
						"name": "TilingSprite",
						"brief": "",
						"deprecated": "since 5.0.0",
						"scope": "static",
						"see": [
							"PIXI.TilingSprite"
						],
						"type": "ClassDoc",
						"members": [
							{
								"id": "kGSykzhT0FVACMXvrX7By",
								"name": "constructor",
								"brief": "",
								"access": "public",
								"scope": "instance",
								"type": "MethodDoc",
								"params": []
							}
						]
					},
					{
						"id": "qSow5cx_rWaoEdJfW94BA",
						"name": "AbstractRenderer",
						"brief": "",
						"type": "ClassDoc",
						"members": [
							{
								"id": "_QAZyuAajcEDBO1xlL090",
								"name": "backgroundColor",
								"brief": "<p>The background color to fill if not transparent</p>",
								"scope": "instance",
								"type": "PropertyDoc"
							},
							{
								"id": "1PS2x6cYHfbY-0hNm1Ynx",
								"name": "constructor",
								"brief": "",
								"access": "public",
								"scope": "instance",
								"type": "MethodDoc",
								"params": []
							}
						]
					},
					{
						"id": "qo7IL8h7NRkz18cN_-qJ5",
						"name": "ObjectRenderer",
						"brief": "<p>Base for a common object renderer that can be used as a system renderer plugin.</p>",
						"type": "ClassDoc",
						"extends": [
							"PIXI.System"
						],
						"members": [
							{
								"id": "2edGrpr4oM7ShjiCbDLvR",
								"name": "renderer",
								"brief": "<p>The renderer this manager works for.</p>",
								"scope": "instance",
								"type": "PropertyDoc"
							},
							{
								"id": "OexORYisbbaDxN-tg2OYh",
								"name": "constructor",
								"brief": "",
								"scope": "instance",
								"type": "MethodDoc",
								"params": [
									{
										"identifier": "renderer",
										"optional": false,
										"description": "<p>The renderer this manager works for.</p>",
										"dataType": {
											"tokens": [
												{
													"value": "PIXI.Renderer",
													"kind": "canonical"
												},
												{
													"value": "PIXI.Renderer",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									}
								],
								"returns": []
							},
							{
								"id": "AJaaB-PEJgxH0zHGKtO4D",
								"name": "destroy",
								"brief": "",
								"scope": "instance",
								"type": "MethodDoc",
								"description": "<p>Generic destruction method that frees all resources. This\nshould be called by subclasses.</p>",
								"params": [],
								"returns": []
							},
							{
								"id": "FhBq5XprcQH5qz7V-8ru9",
								"name": "flush",
								"brief": "",
								"scope": "instance",
								"type": "MethodDoc",
								"description": "<p>Stub method that should be used to empty the current\nbatch by rendering objects now.</p>",
								"params": [],
								"returns": []
							},
							{
								"id": "mPrXMiwQ93saOgBlP4VzB",
								"name": "render",
								"brief": "",
								"scope": "instance",
								"type": "MethodDoc",
								"description": "<p>Keeps the object to render. It doesn't have to be\nrendered immediately.</p>",
								"params": [
									{
										"identifier": "object",
										"optional": false,
										"description": "<p>The object to render.</p>",
										"dataType": {
											"tokens": [
												{
													"value": "PIXI.DisplayObject",
													"kind": "canonical"
												},
												{
													"value": "PIXI.DisplayObject",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									}
								],
								"returns": []
							},
							{
								"id": "J1VO7Bv0tlB6IM4D06Zdc",
								"name": "start",
								"brief": "",
								"scope": "instance",
								"type": "MethodDoc",
								"description": "<p>Stub method that initializes any state required before\nrendering starts. It is different from the <code>prerender</code>\ns...",
								"params": [],
								"returns": []
							},
							{
								"id": "4bM19_pk97aD69xVNt8tK",
								"name": "stop",
								"brief": "",
								"scope": "instance",
								"type": "MethodDoc",
								"description": "<p>Stops the renderer. It should free up any state and\nbecome dormant.</p>",
								"params": [],
								"returns": []
							}
						]
					},
					{
						"id": "zh_ToZdwwIKs2_i2SuoCX",
						"name": "System",
						"brief": "<p>System is a base class used for extending systems used by the {@link PIXI.AbstractRenderer}.</p>",
						"see": [
							"PIXI.Renderer#addSystem"
						],
						"type": "ClassDoc",
						"description": "<p>Search more here: {@link https://www.google.com/}</p>",
						"members": [
							{
								"id": "PLhZC2xOWAblRXAVpNCnP",
								"name": "renderer",
								"brief": "<p>The renderer this manager works for.</p>",
								"scope": "instance",
								"type": "PropertyDoc"
							},
							{
								"id": "3Z0R-0VndueVAeTEizi-G",
								"name": "constructor",
								"brief": "",
								"scope": "instance",
								"type": "MethodDoc",
								"params": [
									{
										"identifier": "renderer",
										"optional": false,
										"description": "<p>The renderer this manager works for.</p>",
										"dataType": {
											"tokens": [
												{
													"value": "PIXI.Renderer",
													"kind": "canonical"
												},
												{
													"value": "PIXI.Renderer",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									}
								],
								"returns": []
							},
							{
								"id": "QdzxlLDWrm81MPd9RHVSL",
								"name": "destroy",
								"brief": "<p>Generic destroy methods to be overridden by the subclass</p>",
								"scope": "instance",
								"type": "MethodDoc",
								"params": [],
								"returns": []
							}
						]
					},
					{
						"id": "CYSk2pwKPDcLOyELM8VBu",
						"name": "AbstractBatchRenderer",
						"brief": "<p>Renderer dedicated to drawing and batching sprites.</p>",
						"access": "protected",
						"readonly": true,
						"type": "ClassDoc",
						"description": "<p>This is the default batch renderer. It buffers objects\nwith texture-based geometries and renders them in\nbatches. It uploa...",
						"extends": [
							"PIXI.ObjectRenderer"
						],
						"members": [
							{
								"id": "cSrd-9isdLsZbs1rO5ber",
								"name": "_drawCallPool",
								"brief": "",
								"scope": "static",
								"type": "PropertyDoc",
								"description": "<p>Pool of <code>BatchDrawCall</code> objects that <code>flush</code> used\nto create &quot;batches&quot; of the objects being..."
							},
							{
								"id": "ATaaCoNd6RuqnX_byMF5R",
								"name": "_textureArrayPool",
								"brief": "",
								"scope": "static",
								"type": "PropertyDoc",
								"description": "<p>Pool of <code>BatchDrawCall</code> objects that <code>flush</code> used\nto create &quot;batches&quot; of the objects being..."
							},
							{
								"id": "zberrofSLEa3DfGizLeTK",
								"name": "bufferSize",
								"brief": "",
								"scope": "instance",
								"type": "PropertyDoc"
							},
							{
								"id": "1z5sfm8NcBWeVOljQpEKt",
								"name": "MAX_TEXTURES",
								"brief": "",
								"defaultValue": "1",
								"readonly": true,
								"scope": "instance",
								"see": [
									"PIXI.AbstractBatchRenderer#contextChange"
								],
								"type": "PropertyDoc",
								"description": "<p>Maximum number of textures that can be uploaded to\nthe GPU under the current context. It is initialized\nproperly in <code>..."
							},
							{
								"id": "HHWkFrdDK3jfxcyJmjFSA",
								"name": "renderer",
								"brief": "<p>The renderer this manager works for.</p>",
								"scope": "instance",
								"type": "PropertyDoc"
							},
							{
								"id": "t1hlCcHYmMVubIXqcsvV0",
								"name": "size",
								"brief": "",
								"defaultValue": "settings.SPRITE_BATCH_SIZE * 4",
								"scope": "instance",
								"type": "PropertyDoc",
								"description": "<p>The number of bufferable objects before a flush\noccurs automatically.</p>"
							},
							{
								"id": "qWlQB_MsPAShsVXHyW0F1",
								"name": "state",
								"brief": "<p>The WebGL state in which this renderer will work.</p>",
								"readonly": true,
								"scope": "instance",
								"type": "PropertyDoc"
							},
							{
								"id": "AiIDOOiTlkXG53Tox8Bh1",
								"name": "vertexSize",
								"brief": "",
								"defaultValue": "undefined",
								"readonly": true,
								"scope": "instance",
								"type": "PropertyDoc",
								"description": "<p>Size of data being buffered per vertex in the\nattribute buffers (in floats). By default, the\nbatch-renderer plugin uses 6:..."
							},
							{
								"id": "fmlrkgOazGOGeCNibejeK",
								"name": "_shader",
								"brief": "<p>This shader is generated by <code>this.shaderGenerator</code>.</p>",
								"access": "protected",
								"defaultValue": "undefined",
								"scope": "instance",
								"type": "PropertyDoc",
								"description": "<p>It is generated specifically to handle the required\nnumber of textures being batched together.</p>"
							},
							{
								"id": "aHNd19_IK9t5tUv14KBax",
								"name": "geometryClass",
								"brief": "",
								"access": "protected",
								"defaultValue": "PIXI.BatchGeometry",
								"scope": "instance",
								"type": "PropertyDoc",
								"description": "<p>The class that represents the geometry of objects\nthat are going to be batched with this.</p>"
							},
							{
								"id": "Q4dFaaG_bvgStCkFpF_bH",
								"name": "shaderGenerator",
								"brief": "",
								"access": "protected",
								"defaultValue": "undefined",
								"scope": "instance",
								"type": "PropertyDoc",
								"description": "<p>This is used to generate a shader that can\ncolor each vertex based on a <code>aTextureId</code>\nattribute that points to a..."
							},
							{
								"id": "cnomSSwhbtVRhJO0ank-o",
								"name": "_aBuffers",
								"brief": "",
								"access": "private",
								"scope": "instance",
								"see": [
									"PIXI.AbstractBatchRenderer#getAttributeBuffer"
								],
								"type": "PropertyDoc",
								"description": "<p>Pool of <code>ViewableBuffer</code> objects that are sorted in\norder of increasing size. The flush method uses\nthe buffer ..."
							},
							{
								"id": "yb771zHcRpScTFtyo3RSl",
								"name": "_bufferedElements",
								"brief": "<p>Buffer of objects that are yet to be rendered.</p>",
								"access": "private",
								"scope": "instance",
								"type": "PropertyDoc"
							},
							{
								"id": "LOWjeH1m8Z5TrjuwXIf9-",
								"name": "_bufferedTextures",
								"brief": "",
								"access": "private",
								"scope": "instance",
								"type": "PropertyDoc",
								"description": "<p>Data for texture batch builder, helps to save a bit of CPU on a pass</p>"
							},
							{
								"id": "-mf9nLXe4Wm1D6yLk6hGG",
								"name": "_bufferSize",
								"brief": "",
								"access": "private",
								"defaultValue": "0",
								"scope": "instance",
								"type": "PropertyDoc",
								"description": "<p>Number of elements that are buffered and are\nwaiting to be flushed.</p>"
							},
							{
								"id": "u2QFTQgZvrh3XZFmWhM5-",
								"name": "_flushId",
								"brief": "",
								"access": "private",
								"defaultValue": "0",
								"scope": "instance",
								"type": "PropertyDoc",
								"description": "<p>A flush may occur multiple times in a single\nframe. On iOS devices or when\n<code>settings.CAN_UPLOAD_SAME_BUFFER</code> is..."
							},
							{
								"id": "5USFB_BpKdcfl3o4B8BCB",
								"name": "_iBuffers",
								"brief": "",
								"access": "private",
								"scope": "instance",
								"see": [
									"PIXI.AbstractBatchRenderer#getIndexBuffer"
								],
								"type": "PropertyDoc",
								"description": "<p>Pool of <code>Uint16Array</code> objects that are sorted in\norder of increasing size. The flush method uses\nthe buffer wit..."
							},
							{
								"id": "jFgM06pce4mQCzXUbGgVW",
								"name": "_indexCount",
								"brief": "",
								"access": "private",
								"defaultValue": "0",
								"scope": "instance",
								"type": "PropertyDoc",
								"description": "<p>Total count of all indices used by the currently\nbuffered objects.</p>"
							},
							{
								"id": "uSA_ezFaIyREXeyVwyE8z",
								"name": "_packedGeometries",
								"brief": "",
								"access": "private",
								"scope": "instance",
								"see": [
									"PIXI.AbstractBatchRenderer.contextChange"
								],
								"type": "PropertyDoc",
								"description": "<p>Pool of <code>this.geometryClass</code> geometry objects\nthat store buffers. They are used to pass data\nto the shader on e..."
							},
							{
								"id": "493ageB4iD6YUeekh0NII",
								"name": "_packedGeometryPoolSize",
								"brief": "",
								"access": "private",
								"defaultValue": "2",
								"scope": "instance",
								"type": "PropertyDoc",
								"description": "<p>Size of <code>this._packedGeometries</code>. It can be expanded\nif more than <code>this._packedGeometryPoolSize</code> flu..."
							},
							{
								"id": "bCb3dqL6x4mFk1tdulfiT",
								"name": "_vertexCount",
								"brief": "",
								"access": "private",
								"defaultValue": "0",
								"scope": "instance",
								"type": "PropertyDoc",
								"description": "<p>Total count of all vertices used by the currently\nbuffered objects.</p>"
							},
							{
								"id": "7wdOqEgp6XquXRwUCcp2y",
								"name": "bindAndClearTexArray",
								"brief": "<p>Bind textures for current rendering</p>",
								"scope": "instance",
								"type": "MethodDoc",
								"params": [
									{
										"identifier": "texArray",
										"optional": false,
										"dataType": {
											"tokens": [
												{
													"value": "PIXI.BatchTextureArray",
													"kind": "canonical"
												},
												{
													"value": "PIXI.BatchTextureArray",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									}
								],
								"returns": []
							},
							{
								"id": "wXUkTgVnLJ_Kw6_JI_ok3",
								"name": "buildDrawCalls",
								"brief": "<p>Populating drawcalls for rendering</p>",
								"scope": "instance",
								"type": "MethodDoc",
								"params": [
									{
										"identifier": "texArray",
										"optional": false,
										"dataType": {
											"tokens": [
												{
													"value": "PIXI.BatchTextureArray",
													"kind": "canonical"
												},
												{
													"value": "PIXI.BatchTextureArray",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									},
									{
										"identifier": "start",
										"optional": false,
										"dataType": {
											"tokens": [
												{
													"value": "number",
													"kind": "canonical"
												},
												{
													"value": "number",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									},
									{
										"identifier": "finish",
										"optional": false,
										"dataType": {
											"tokens": [
												{
													"value": "number",
													"kind": "canonical"
												},
												{
													"value": "number",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									}
								],
								"returns": []
							},
							{
								"id": "Dr0wXPNtZHUf4HfeOVb0x",
								"name": "constructor",
								"brief": "",
								"scope": "instance",
								"type": "MethodDoc",
								"description": "<p>This will hook onto the renderer's <code>contextChange</code>\nand <code>prerender</code> signals.</p>",
								"params": [
									{
										"identifier": "renderer",
										"optional": false,
										"description": "<p>The renderer this works for.</p>",
										"dataType": {
											"tokens": [
												{
													"value": "PIXI.Renderer",
													"kind": "canonical"
												},
												{
													"value": "PIXI.Renderer",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									}
								],
								"returns": []
							},
							{
								"id": "g5QsnZbU_Gy-NLSJGIHco",
								"name": "contextChange",
								"brief": "<p>Handles the <code>contextChange</code> signal.</p>",
								"scope": "instance",
								"type": "MethodDoc",
								"description": "<p>It calculates <code>this.MAX_TEXTURES</code> and allocating the\npacked-geometry object pool.</p>",
								"params": [],
								"returns": []
							},
							{
								"id": "Nl0sqcFaMc2rbzuHSPxuc",
								"name": "destroy",
								"brief": "<p>Destroys this <code>AbstractBatchRenderer</code>. It cannot be used again.</p>",
								"scope": "instance",
								"type": "MethodDoc",
								"params": [],
								"returns": []
							},
							{
								"id": "NK2gInKcZkEAqSsuclw_7",
								"name": "flush",
								"brief": "<p>Renders the content <em>now</em> and empties the current batch.</p>",
								"scope": "instance",
								"type": "MethodDoc",
								"params": [],
								"returns": []
							},
							{
								"id": "V1tebpcH9xR0Agsat2wT1",
								"name": "initFlushBuffers",
								"brief": "<p>Makes sure that static and dynamic flush pooled objects have correct dimensions</p>",
								"scope": "instance",
								"type": "MethodDoc",
								"params": [],
								"returns": []
							},
							{
								"id": "jt0xxujA9TOXxuhXQDDRe",
								"name": "onPrerender",
								"brief": "<p>Handles the <code>prerender</code> signal.</p>",
								"scope": "instance",
								"type": "MethodDoc",
								"description": "<p>It ensures that flushes start from the first geometry\nobject again.</p>",
								"params": [],
								"returns": []
							},
							{
								"id": "zJG1GmKgX04IbIaUEIWOa",
								"name": "packInterleavedGeometry",
								"brief": "",
								"scope": "instance",
								"type": "MethodDoc",
								"description": "<p>Takes the four batching parameters of <code>element</code>, interleaves\nand pushes them into the batching attribute/index ...",
								"params": [
									{
										"identifier": "element",
										"optional": false,
										"description": "<p>element being rendered</p>",
										"dataType": {
											"tokens": [
												{
													"value": "PIXI.Sprite",
													"kind": "canonical"
												},
												{
													"value": "PIXI.Sprite",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									},
									{
										"identifier": "attributeBuffer",
										"optional": false,
										"description": "<p>attribute buffer.</p>",
										"dataType": {
											"tokens": [
												{
													"value": "PIXI.ViewableBuffer",
													"kind": "canonical"
												},
												{
													"value": "PIXI.ViewableBuffer",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									},
									{
										"identifier": "indexBuffer",
										"optional": false,
										"description": "<p>index buffer</p>",
										"dataType": {
											"tokens": [
												{
													"value": "Uint16Array",
													"kind": "canonical"
												},
												{
													"value": "Uint16Array",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									},
									{
										"identifier": "aIndex",
										"optional": false,
										"description": "<p>number of floats already in the attribute buffer</p>",
										"dataType": {
											"tokens": [
												{
													"value": "number",
													"kind": "canonical"
												},
												{
													"value": "number",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									},
									{
										"identifier": "iIndex",
										"optional": false,
										"description": "<p>number of indices already in <code>indexBuffer</code></p>",
										"dataType": {
											"tokens": [
												{
													"value": "number",
													"kind": "canonical"
												},
												{
													"value": "number",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									}
								],
								"returns": []
							},
							{
								"id": "_Ff03YlGBKb7R-OlZ_l3B",
								"name": "render",
								"brief": "",
								"scope": "instance",
								"type": "MethodDoc",
								"description": "<p>Buffers the &quot;batchable&quot; object. It need not be rendered\nimmediately.</p>",
								"params": [
									{
										"identifier": "element",
										"optional": false,
										"description": "<p>the element to render when\nusing this renderer</p>",
										"dataType": {
											"tokens": [
												{
													"value": "PIXI.DisplayObject",
													"kind": "canonical"
												},
												{
													"value": "PIXI.DisplayObject",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									}
								],
								"returns": []
							},
							{
								"id": "HbUfwutl6khshVCZytN-C",
								"name": "start",
								"brief": "<p>Starts a new sprite batch.</p>",
								"scope": "instance",
								"type": "MethodDoc",
								"params": [],
								"returns": []
							},
							{
								"id": "9SEOsaAlEsoSrQZpV4Q-W",
								"name": "stop",
								"brief": "<p>Stops and flushes the current batch.</p>",
								"scope": "instance",
								"type": "MethodDoc",
								"params": [],
								"returns": []
							},
							{
								"id": "WXL_H09QWv_3Seowpxe4d",
								"name": "getAttributeBuffer",
								"brief": "",
								"access": "private",
								"scope": "instance",
								"type": "MethodDoc",
								"description": "<p>Fetches an attribute buffer from <code>this._aBuffers</code> that\ncan hold atleast <code>size</code> floats.</p>",
								"params": [
									{
										"identifier": "size",
										"optional": false,
										"description": "<p>minimum capacity required</p>",
										"dataType": {
											"tokens": [
												{
													"value": "number",
													"kind": "canonical"
												},
												{
													"value": "number",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									}
								],
								"returns": [
									{
										"description": "<ul>\n<li>buffer than can hold atleast <code>size</code> floats</li>\n</ul>",
										"dataType": {
											"tokens": [
												{
													"value": "ViewableBuffer",
													"kind": "canonical"
												},
												{
													"value": "ViewableBuffer",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									}
								]
							},
							{
								"id": "IAzHEBkjWiKB71EFfFn9C",
								"name": "getIndexBuffer",
								"brief": "",
								"access": "private",
								"scope": "instance",
								"type": "MethodDoc",
								"description": "<p>Fetches an index buffer from <code>this._iBuffers</code> that can\nhas atleast <code>size</code> capacity.</p>",
								"params": [
									{
										"identifier": "size",
										"optional": false,
										"description": "<p>minimum required capacity</p>",
										"dataType": {
											"tokens": [
												{
													"value": "number",
													"kind": "canonical"
												},
												{
													"value": "number",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									}
								],
								"returns": [
									{
										"description": "<ul>\n<li>buffer that can fit <code>size</code>\nindices.</li>\n</ul>",
										"dataType": {
											"tokens": [
												{
													"value": "Uint16Array",
													"kind": "canonical"
												},
												{
													"value": "Uint16Array",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									}
								]
							}
						]
					},
					{
						"id": "_gwjcGHSMgzsCfDjosn2u",
						"name": "TRANSFORM_MODE",
						"brief": "<p>Constants that specify the transform type.</p>",
						"deprecated": "since 5.0.0",
						"scope": "static",
						"type": "EnumDoc",
						"members": [
							{
								"id": "4x5McgB6buchXQhB484Mk",
								"name": "DYNAMIC",
								"brief": "",
								"access": "public",
								"scope": "static",
								"type": "PropertyDoc"
							},
							{
								"id": "9vFp4M5m2BSgYZCO3OD4W",
								"name": "STATIC",
								"brief": "",
								"access": "public",
								"scope": "static",
								"type": "PropertyDoc"
							}
						]
					},
					{
						"id": "qRsg81Obxb3_U2XdqEOU6",
						"name": "",
						"brief": "",
						"type": "TypedefDoc",
						"extends": [],
						"members": [
							{
								"id": "SQmrk6Bupv4yLAtRVJQeR",
								"name": "destroy",
								"brief": "",
								"access": "public",
								"scope": "static",
								"type": "PropertyDoc",
								"description": "<p>Called when destroying Application, scoped to Application instance</p>"
							},
							{
								"id": "PhvGLPwTPiQZ_-V6KQxe-",
								"name": "init",
								"brief": "",
								"access": "public",
								"scope": "static",
								"type": "PropertyDoc",
								"description": "<p>Called when Application is constructed, scoped to Application instance.\nPasses in <code>options</code> as the only argumen..."
							}
						]
					},
					{
						"id": "9rEyZpdNZSAss20SGVgoO",
						"name": "SVG_SIZE",
						"brief": "",
						"deprecated": "since 5.0.0",
						"scope": "static",
						"see": [
							"PIXI.resources.SVGResource.SVG_SIZE"
						],
						"type": "PropertyDoc"
					}
				]
			},
			{
				"id": "HTEepaSGbncHxpQq4V-e7",
				"name": "R",
				"brief": "<p>A namespace dedicated to road manipulation utilites.</p>",
				"readonly": true,
				"type": "NSDoc",
				"members": [
					{
						"id": "6tUP3yNzgA6lIu2pmb27m",
						"name": "Road",
						"brief": "<p>This is another road class.</p>",
						"type": "ClassDoc",
						"members": [
							{
								"id": "r2YXfqIMX9QzCYSwHxq3J",
								"name": "constructor",
								"brief": "<p>This is another road class.</p>",
								"access": "public",
								"scope": "instance",
								"type": "MethodDoc",
								"params": []
							}
						]
					},
					{
						"id": "7vwj4Z9So7boGC2SrTkAi",
						"name": "DEFAULT_LANES",
						"brief": "<p>The default no. of lanes per one side of road</p>",
						"defaultValue": "4",
						"scope": "static",
						"type": "PropertyDoc"
					},
					{
						"id": "WrJ7VShh9m6y2pPX0nkh3",
						"name": "buildRoad",
						"brief": "<p>Builds a road</p>",
						"scope": "instance",
						"type": "MethodDoc",
						"params": [
							{
								"identifier": "address",
								"optional": false,
								"dataType": {
									"tokens": [
										{
											"value": "string",
											"kind": "canonical"
										}
									],
									"template": "string"
								}
							}
						],
						"returns": [
							{
								"dataType": {
									"tokens": [
										{
											"value": "ExampleFactory",
											"kind": "canonical"
										},
										{
											"value": "ExampleFactory",
											"kind": "link"
										}
									],
									"template": "%1"
								}
							}
						]
					}
				]
			},
			{
				"id": "HL_4_rakZRcIIXufCcUnY",
				"name": "Ts",
				"brief": "",
				"type": "NSDoc",
				"members": [
					{
						"id": "OmCVSSMySJHbimgJlvNej",
						"name": "Transaction",
						"brief": "",
						"type": "ClassDoc",
						"members": [
							{
								"id": "bWuWi5Iq1pcqO4YTsSGGZ",
								"name": "constructor",
								"brief": "",
								"access": "public",
								"scope": "instance",
								"type": "MethodDoc",
								"params": []
							}
						]
					}
				]
			},
			{
				"id": "2MCG7TGV8yVS62XhDnPme",
				"name": "Bean",
				"brief": "<p>Bean class</p>",
				"type": "ClassDoc",
				"members": [
					{
						"id": "4m5unv0nn8Sui3sb2zFKW",
						"name": "constructor",
						"brief": "<p>Bean class</p>",
						"access": "public",
						"scope": "instance",
						"type": "MethodDoc",
						"params": []
					},
					{
						"id": "m8Rf_xx-bftUMdsJhFUve",
						"name": "roast",
						"brief": "<p>(optional) roasting method</p>",
						"abstract": true,
						"scope": "instance",
						"type": "MethodDoc",
						"params": [],
						"returns": [
							{
								"dataType": {
									"tokens": [
										{
											"value": "void",
											"kind": "canonical"
										}
									],
									"template": "void"
								}
							}
						]
					}
				]
			},
			{
				"id": "EqfEqwlms2RWF9WF5ftXq",
				"name": "Car",
				"brief": "<p><em>Simulation</em> for a automobile that can drive on a manifold surface.</p>",
				"type": "ClassDoc",
				"description": "<pre class=\"hljs\"><code><span class=\"hljs-keyword\">const</span> car = <span class=\"hljs-keyword\">new</span> Car({ <span class...",
				"extends": [
					"PhysicalObject"
				],
				"members": [
					{
						"id": "ykWNoOEQRZoYGPWEDyZnY",
						"name": "DEFAULT_DRIVE_SHIFT",
						"brief": "",
						"defaultValue": "\"manual\"",
						"scope": "static",
						"type": "PropertyDoc"
					},
					{
						"id": "9D7tVq7GGAXaz2H3wkbY9",
						"name": "bounds",
						"brief": "",
						"scope": "instance",
						"type": "PropertyDoc",
						"description": "<p>The mesh enclosing this object. By default, it is a &quot;point&quot; object at the its own\nposition.</p>"
					},
					{
						"id": "EDz3eGja8sMEYL1ovotaz",
						"name": "interactions",
						"brief": "<p>All causal interactions with other objects</p>",
						"scope": "instance",
						"type": "PropertyDoc"
					},
					{
						"id": "6kN83eLfguXxLpDr2FX_R",
						"name": "mass",
						"brief": "<p>The mass of this object in kilograms.</p>",
						"defaultValue": "0",
						"scope": "instance",
						"type": "PropertyDoc"
					},
					{
						"id": "D_edTuaG5gqJzuqVRJv28",
						"name": "model",
						"brief": "",
						"access": "public",
						"defaultValue": "\"TEST\"",
						"scope": "instance",
						"type": "PropertyDoc"
					},
					{
						"id": "sPCqhh0-J0O5WoChNLQm3",
						"name": "position",
						"brief": "<p>The absolute position of this object's center of mass (in the universal reference frame)</p>",
						"defaultValue": "[0, 0, 0]",
						"scope": "instance",
						"type": "PropertyDoc"
					},
					{
						"id": "afjQ6SnhnnbJbGoGZBH_J",
						"name": "velocity",
						"brief": "<p>The absolute velocity of this object (in the universal reference frame)</p>",
						"defaultValue": "[0, 0, 0]",
						"scope": "instance",
						"type": "PropertyDoc"
					},
					{
						"id": "wMqID2NUXV7_ERl-6GDos",
						"name": "vin",
						"brief": "",
						"defaultValue": "0",
						"scope": "instance",
						"type": "PropertyDoc"
					},
					{
						"id": "sjMU5kN5WOpAaxDB9QkgG",
						"name": "registerRetail",
						"brief": "<p>Register a retail dealer for buying a car from</p>",
						"scope": "static",
						"type": "MethodDoc",
						"params": [
							{
								"identifier": "name",
								"optional": false,
								"dataType": {
									"tokens": [
										{
											"value": "string",
											"kind": "canonical"
										}
									],
									"template": "string"
								}
							}
						],
						"returns": []
					},
					{
						"id": "segQr1bVanBnLDlXUPMtc",
						"name": "constructor",
						"brief": "",
						"scope": "instance",
						"type": "MethodDoc",
						"params": [
							{
								"identifier": "model",
								"optional": false,
								"default": "\"TEST\"",
								"dataType": {
									"tokens": [
										{
											"value": "string",
											"kind": "canonical"
										}
									],
									"template": "string"
								}
							}
						],
						"returns": []
					},
					{
						"id": "CVIgIu13Gyf1JxadPwQfd",
						"name": "onCrash",
						"brief": "",
						"examples": [
							{
								"caption": "",
								"code": "\n car.onCrash((car) => console.logicalAssignment(car.id + \" crashed!\"))\n"
							}
						],
						"scope": "instance",
						"type": "MethodDoc",
						"params": [
							{
								"identifier": "callback",
								"optional": false,
								"dataType": {
									"tokens": [
										{
											"value": "Function",
											"kind": "canonical"
										}
									],
									"template": "Function"
								}
							},
							{
								"identifier": "callback.name",
								"dataType": {
									"tokens": [
										{
											"value": "string",
											"kind": "canonical"
										}
									],
									"template": "string"
								}
							}
						],
						"returns": []
					}
				]
			},
			{
				"id": "NP9GFhkeW4VZ3hxC-Xxz0",
				"name": "CoffeeBean",
				"brief": "<p>This class illustrates how you can create a Java-bean like component in JavaScript</p>",
				"type": "ClassDoc",
				"extends": [
					"Bean"
				],
				"members": [
					{
						"id": "vuxx3j-vAywPpEyqW41BC",
						"name": "maturity",
						"brief": "",
						"scope": "instance",
						"type": "PropertyDoc"
					},
					{
						"id": "K2SYNR0IUFFWvvjgYs2sL",
						"name": "roasted",
						"brief": "",
						"scope": "instance",
						"type": "PropertyDoc"
					},
					{
						"id": "nipqaIsHgkSFF2FpZyAME",
						"name": "constructor",
						"brief": "",
						"scope": "instance",
						"type": "MethodDoc",
						"params": [
							{
								"identifier": "options",
								"optional": true,
								"dataType": {
									"tokens": [
										{
											"value": "object",
											"kind": "canonical"
										}
									],
									"template": "object"
								}
							},
							{
								"identifier": "options.roasted",
								"optional": true,
								"description": "<p>whether the bean is <code>roasted</code></p>",
								"dataType": {
									"tokens": [
										{
											"value": "boolean",
											"kind": "canonical"
										}
									],
									"template": "boolean"
								}
							},
							{
								"identifier": "options.maturity",
								"optional": true,
								"dataType": {
									"tokens": [
										{
											"value": "number",
											"kind": "canonical"
										},
										{
											"value": "number",
											"kind": "canonical"
										}
									],
									"template": "%1"
								}
							}
						],
						"returns": []
					},
					{
						"id": "6nxjsx3lFelz8i-erT_gA",
						"name": "roast",
						"brief": "<p>Roast this coffee bean.</p>",
						"scope": "instance",
						"type": "MethodDoc",
						"description": "<p>NOTE: You cannot re-roast coffee beans and an error will be thrown if you try to\nroast a roasted coffee bean.</p>",
						"params": [],
						"returns": []
					}
				]
			},
			{
				"id": "RITp4qbduYaI5QmnMiipW",
				"name": "ExampleFactory",
				"type": "ClassDoc",
				"description": "<p>{@link ExampleFactory} can be used to build examples.</p>\n<pre class=\"hljs\"><code><span class=\"hljs-comment\">// <span clas...",
				"params": [
					{
						"identifier": "context",
						"optional": true,
						"default": "null",
						"description": "<p>A custom context for the factory.</p>",
						"dataType": {
							"tokens": [
								{
									"value": "ExampleContext",
									"kind": "canonical"
								},
								{
									"value": "ExampleContext",
									"kind": "canonical"
								}
							],
							"template": "%1"
						}
					}
				],
				"returns": [],
				"members": [
					{
						"id": "-GZydgUQ2qVLxKqeehiH0",
						"name": "getInstance",
						"brief": "<p>Gets a lazily-initialized, shared singleton instance of {@link ExampleFactory}.</p>",
						"scope": "static",
						"type": "MethodDoc",
						"params": [],
						"returns": [
							{
								"dataType": {
									"tokens": [
										{
											"value": "ExampleFactory",
											"kind": "canonical"
										},
										{
											"value": "ExampleFactory",
											"kind": "link"
										}
									],
									"template": "%1"
								}
							}
						]
					},
					{
						"id": "tzjVsEelx9IcOKo6CdwYn",
						"name": "build",
						"brief": "<p>Build the road.</p>",
						"scope": "instance",
						"type": "MethodDoc",
						"params": [],
						"returns": []
					},
					{
						"id": "wqPrEBL5zKZLxPakEchQa",
						"name": "constructor",
						"brief": "<p>This constructor should only be used for custom contexts.</p>",
						"access": "public",
						"scope": "instance",
						"type": "MethodDoc",
						"params": [
							{
								"identifier": "context",
								"optional": true,
								"default": "null",
								"description": "<p>A custom context for the factory.</p>",
								"dataType": {
									"tokens": [
										{
											"value": "ExampleContext",
											"kind": "canonical"
										},
										{
											"value": "ExampleContext",
											"kind": "canonical"
										}
									],
									"template": "%1"
								}
							}
						],
						"returns": []
					},
					{
						"id": "yxK82qndaxbVJQV1s9l7x",
						"name": "getContext",
						"brief": "<p>Get the context of this factory.</p>",
						"scope": "instance",
						"type": "MethodDoc",
						"params": [],
						"returns": [
							{
								"dataType": {
									"tokens": [
										{
											"value": "ExampleContext",
											"kind": "canonical"
										},
										{
											"value": "ExampleContext",
											"kind": "canonical"
										}
									],
									"template": "%1"
								}
							}
						]
					}
				]
			},
			{
				"id": "pRuzYbRBXnL5_25OeRXv3",
				"name": "Gravity",
				"brief": "<p>This class shouldn't be documented!</p>",
				"type": "ClassDoc",
				"extends": [
					"PhysicalInteraction"
				],
				"members": [
					{
						"id": "AVl7lS0N-MXxdIVXkYuxU",
						"name": "constructor",
						"brief": "<p>This class shouldn't be documented!</p>",
						"access": "public",
						"scope": "instance",
						"type": "MethodDoc",
						"params": []
					},
					{
						"id": "8MmiZr4ebV0vhCfkZbY6n",
						"name": "force",
						"brief": "<p>This method should be overriden to calculate the force at the given instant.</p>",
						"scope": "instance",
						"type": "MethodDoc",
						"params": [],
						"returns": [
							{
								"dataType": {
									"tokens": [
										{
											"value": "Vector<3>",
											"kind": "canonical"
										},
										{
											"value": "Vector",
											"kind": "link"
										},
										{
											"value": "3",
											"kind": "canonical"
										}
									],
									"template": "%1<%2>"
								}
							}
						]
					}
				]
			},
			{
				"id": "xXtfsmJW77VZu8OBBoz3b",
				"name": "PhysicalInteraction",
				"brief": "",
				"readonly": true,
				"type": "ClassDoc",
				"description": "<p>A physical interaction is a force causes object positions to be re-evaulated each frame based on\nforce's magnitude.</p>",
				"members": [
					{
						"id": "e1nTAim9AnUw4u9WKG7sp",
						"name": "GRAVITATIONAL_CONSTANT",
						"brief": "",
						"defaultValue": "1",
						"scope": "static",
						"type": "PropertyDoc"
					},
					{
						"id": "TeecB7-AQe41Rk_LqzaeY",
						"name": "createGravity",
						"brief": "<p>Creates a graviational force</p>",
						"scope": "static",
						"type": "MethodDoc",
						"params": [
							{
								"identifier": "objects",
								"optional": false,
								"dataType": {
									"tokens": [
										{
											"value": "Tuple<PhysicalObject, 2>",
											"kind": "canonical"
										},
										{
											"value": "Tuple",
											"kind": "canonical"
										},
										{
											"value": "PhysicalObject",
											"kind": "link"
										},
										{
											"value": "2",
											"kind": "canonical"
										}
									],
									"template": "%1<%3, %2>"
								}
							}
						],
						"returns": [
							{
								"dataType": {
									"tokens": [
										{
											"value": "PhysicalInteraction",
											"kind": "canonical"
										},
										{
											"value": "PhysicalInteraction",
											"kind": "link"
										}
									],
									"template": "%1"
								}
							}
						]
					},
					{
						"id": "3iFSaU6YhMuA_EPW211VV",
						"name": "force",
						"brief": "<p>This method should be overriden to calculate the force at the given instant.</p>",
						"scope": "instance",
						"type": "MethodDoc",
						"params": [],
						"returns": [
							{
								"dataType": {
									"tokens": [
										{
											"value": "Vector<3>",
											"kind": "canonical"
										},
										{
											"value": "Vector",
											"kind": "link"
										},
										{
											"value": "3",
											"kind": "canonical"
										}
									],
									"template": "%1<%2>"
								}
							}
						]
					}
				]
			},
			{
				"id": "rCi8ybsLYwpl7lFJLisML",
				"name": "PhysicalObject",
				"brief": "",
				"type": "ClassDoc",
				"description": "<p>Represents a physical-object and its intrinsic properties. This is useful for approximating\nextended objects as a uniform,...",
				"members": [
					{
						"id": "zV_Fl8gKtxluPfaZbOCwS",
						"name": "bounds",
						"brief": "",
						"scope": "instance",
						"type": "PropertyDoc",
						"description": "<p>The mesh enclosing this object. By default, it is a &quot;point&quot; object at the its own\nposition.</p>"
					},
					{
						"id": "2ebTSWBbpjJXGdJ2hOn_Q",
						"name": "interactions",
						"brief": "<p>All causal interactions with other objects</p>",
						"scope": "instance",
						"type": "PropertyDoc"
					},
					{
						"id": "QWci2LafCujlKQD_QBwRV",
						"name": "mass",
						"brief": "<p>The mass of this object in kilograms.</p>",
						"defaultValue": "0",
						"scope": "instance",
						"type": "PropertyDoc"
					},
					{
						"id": "pgmA3EXAYcP4ra9pmqzSw",
						"name": "position",
						"brief": "<p>The absolute position of this object's center of mass (in the universal reference frame)</p>",
						"defaultValue": "[0, 0, 0]",
						"scope": "instance",
						"type": "PropertyDoc"
					},
					{
						"id": "DgHkgfOGHRB7WBmXWAuYq",
						"name": "velocity",
						"brief": "<p>The absolute velocity of this object (in the universal reference frame)</p>",
						"defaultValue": "[0, 0, 0]",
						"scope": "instance",
						"type": "PropertyDoc"
					}
				]
			},
			{
				"id": "DdMVxbLUKFeOC7Hoga0dl",
				"name": "Vector",
				"brief": "",
				"type": "ClassDoc",
				"extends": [
					"Array"
				],
				"members": [
					{
						"id": "3xItSAds0vAGglXhNt4-s",
						"name": "dimensions",
						"brief": "",
						"scope": "instance",
						"type": "PropertyDoc",
						"description": "<p>The no. of components of this vector</p>"
					},
					{
						"id": "z-d6DqrJfF9YQ2DFj9HGx",
						"name": "add",
						"brief": "<p>Add <code>vec</code> to this</p>",
						"scope": "instance",
						"type": "MethodDoc",
						"params": [
							{
								"identifier": "vec",
								"optional": false,
								"dataType": {
									"tokens": [
										{
											"value": "Vector",
											"kind": "canonical"
										},
										{
											"value": "Vector",
											"kind": "link"
										}
									],
									"template": "%1"
								}
							}
						],
						"returns": []
					},
					{
						"id": "oFFa7J1nda56oqEDis8PH",
						"name": "equalTo",
						"brief": "<p>Whether this and <code>vec</code> are equal vectors</p>",
						"scope": "instance",
						"type": "MethodDoc",
						"params": [
							{
								"identifier": "vec",
								"optional": false,
								"dataType": {
									"tokens": [
										{
											"value": "Vector",
											"kind": "canonical"
										},
										{
											"value": "Vector",
											"kind": "link"
										}
									],
									"template": "%1"
								}
							}
						],
						"returns": [
							{
								"dataType": {
									"tokens": [
										{
											"value": "boolean",
											"kind": "canonical"
										}
									],
									"template": "boolean"
								}
							}
						]
					},
					{
						"id": "8GRt7guqAvN8jgzDpHnNF",
						"name": "isCompat",
						"brief": "",
						"scope": "instance",
						"type": "MethodDoc",
						"description": "<p>Whether this and <code>vec</code> are compatible vectors (same dimensions)</p>",
						"params": [
							{
								"identifier": "vec",
								"optional": false,
								"dataType": {
									"tokens": [
										{
											"value": "Vector",
											"kind": "canonical"
										},
										{
											"value": "Vector",
											"kind": "link"
										}
									],
									"template": "%1"
								}
							}
						],
						"returns": [
							{
								"dataType": {
									"tokens": [
										{
											"value": "boolean",
											"kind": "canonical"
										}
									],
									"template": "boolean"
								}
							}
						]
					}
				]
			},
			{
				"id": "uaIhh5ClA8pGYwBnuiVcw",
				"name": "CAR_MAKES",
				"brief": "",
				"see": [
					"CarDealer"
				],
				"type": "EnumDoc",
				"description": "<p>These are the possible types of car makes.</p>",
				"members": [
					{
						"id": "P5bbVcfAyNlTOLnQGhL98",
						"name": "FERRARI",
						"brief": "",
						"access": "public",
						"scope": "static",
						"type": "PropertyDoc"
					},
					{
						"id": "K3tg7cmbomlMivY4e7O6R",
						"name": "FORD",
						"brief": "",
						"access": "public",
						"scope": "static",
						"type": "PropertyDoc"
					},
					{
						"id": "yWvORO_XT35keAknucY9D",
						"name": "GENERAL_MOTORS",
						"brief": "",
						"access": "public",
						"scope": "static",
						"type": "PropertyDoc"
					},
					{
						"id": "mFxrA1JE8LH06Si-2699w",
						"name": "JAGUAR",
						"brief": "",
						"access": "public",
						"scope": "static",
						"type": "PropertyDoc"
					},
					{
						"id": "qpRuUK98HUfuQXjcI41BB",
						"name": "KIA",
						"brief": "",
						"access": "public",
						"scope": "static",
						"type": "PropertyDoc"
					},
					{
						"id": "rkccwbd1UwOpNhYZMocxv",
						"name": "LAMBORGHINI",
						"brief": "",
						"access": "public",
						"scope": "static",
						"type": "PropertyDoc"
					},
					{
						"id": "pFhfs7cvMP81E2IFngokl",
						"name": "TOYOTA",
						"brief": "",
						"access": "public",
						"scope": "static",
						"type": "PropertyDoc",
						"description": "<p>toyota make</p>"
					}
				]
			},
			{
				"id": "Qd23jrzPa1iFmecqT09mq",
				"name": "VectorArray",
				"brief": "",
				"type": "TypedefDoc",
				"description": "<p>A 3D vector</p>",
				"members": [
					{
						"id": "8rXtGghdoANt9ns5s4es2",
						"name": "meta",
						"brief": "",
						"access": "public",
						"scope": "static",
						"type": "PropertyDoc"
					}
				]
			},
			{
				"id": "kfzBNeWU2RIzDruRVM8OK",
				"name": "CarDealer",
				"brief": "<p>This is the interface for dealing with car dealers.</p>",
				"type": "InterfaceDoc",
				"members": [
					{
						"id": "C6hzm5wcuqIuEUgZMnfPk",
						"name": "closeTransaction",
						"brief": "<p>Close transaction. If you respond to the counteroffer, then it won't be closed.</p>",
						"type": "MethodDoc",
						"params": [
							{
								"identifier": "trans",
								"optional": false,
								"dataType": {
									"tokens": [
										{
											"value": "Transaction",
											"kind": "canonical"
										},
										{
											"value": "Ts.Transaction",
											"kind": "link"
										}
									],
									"template": "%1"
								}
							},
							{
								"identifier": "counteroffer",
								"optional": false,
								"dataType": {
									"tokens": [
										{
											"value": "(...t: Transaction) => void",
											"kind": "canonical"
										},
										{
											"value": "Ts.Transaction",
											"kind": "link"
										}
									],
									"template": "(...t: %1) => void"
								}
							}
						],
						"returns": [
							{
								"dataType": {
									"tokens": [
										{
											"value": "trans is Transaction",
											"kind": "canonical"
										},
										{
											"value": "Ts.Transaction",
											"kind": "link"
										}
									],
									"template": "trans is %1"
								}
							}
						]
					},
					{
						"id": "8NBqBMN4z9t3vPdMRXaao",
						"name": "initiateTransaction",
						"brief": "<p>Initiate a transaction/negotiation with a car dealer</p>",
						"type": "MethodDoc",
						"params": [
							{
								"identifier": "x",
								"optional": true,
								"description": "<p>info</p>",
								"dataType": {
									"tokens": [
										{
											"value": "object",
											"kind": "canonical"
										}
									],
									"template": "object"
								}
							}
						],
						"returns": [
							{
								"dataType": {
									"tokens": [
										{
											"value": "typeof Transaction",
											"kind": "canonical"
										},
										{
											"value": "Ts.Transaction",
											"kind": "link"
										}
									],
									"template": "typeof %1"
								}
							}
						]
					},
					{
						"id": "Egtrn9YbZeCextGAVTpAC",
						"name": "offerAsk",
						"brief": "<p>Offer a price to sell the car.</p>",
						"type": "MethodDoc",
						"description": "<p>NOTE: This is invalid behaviour if you are the buyer in the transaction.</p>",
						"params": [
							{
								"identifier": "on",
								"optional": false,
								"dataType": {
									"tokens": [
										{
											"value": "Transaction",
											"kind": "canonical"
										},
										{
											"value": "Ts.Transaction",
											"kind": "link"
										}
									],
									"template": "%1"
								}
							},
							{
								"identifier": "counteroffer",
								"optional": true,
								"dataType": {
									"tokens": [
										{
											"value": "(t: Car) => void",
											"kind": "canonical"
										},
										{
											"value": "Car",
											"kind": "link"
										}
									],
									"template": "(t: %1) => void"
								}
							},
							{
								"identifier": "test",
								"optional": false,
								"dataType": {
									"tokens": [
										{
											"value": "{ [testProperty in keyof keyof] }: number",
											"kind": "canonical"
										}
									],
									"template": "{ [testProperty in keyof keyof] }: number"
								}
							}
						],
						"returns": [
							{
								"description": "<p>type inference is working</p>",
								"dataType": {
									"tokens": [
										{
											"value": "boolean",
											"kind": "canonical"
										}
									],
									"template": "boolean"
								}
							}
						]
					},
					{
						"id": "zzm3F3LiDOphZaUTHsW2J",
						"name": "offerBid",
						"brief": "<p>Offer a price to buy the car.</p>",
						"type": "MethodDoc",
						"description": "<p>NOTE: This is invalid behaviour if you are the seller in the transaction.</p>",
						"params": [
							{
								"identifier": "on",
								"optional": true,
								"dataType": {
									"tokens": [
										{
											"value": "{ t : Transaction, [id: string]: Transaction[] }",
											"kind": "canonical"
										},
										{
											"value": "Ts.Transaction",
											"kind": "link"
										},
										{
											"value": "Ts.Transaction",
											"kind": "link"
										}
									],
									"template": "{ t : %1, [id: string]: %2[] }"
								}
							},
							{
								"identifier": "counteroffer",
								"optional": true,
								"variadic": true,
								"dataType": {
									"tokens": [
										{
											"value": "Car | Vector",
											"kind": "canonical"
										},
										{
											"value": "Car",
											"kind": "link"
										},
										{
											"value": "Vector",
											"kind": "link"
										}
									],
									"template": "%1 | %2"
								}
							}
						],
						"returns": [
							{
								"dataType": {
									"tokens": [
										{
											"value": "boolean",
											"kind": "canonical"
										}
									],
									"template": "boolean"
								}
							}
						]
					}
				]
			},
			{
				"id": "ozW_MJFygNWa8taznjB8d",
				"name": "installBean",
				"brief": "<p>Install a bean class</p>",
				"type": "FunctionDoc",
				"params": [
					{
						"identifier": "bean",
						"optional": false,
						"description": "<p>the bean class</p>",
						"dataType": {
							"tokens": [
								{
									"value": "{ new (): Bean }",
									"kind": "canonical"
								},
								{
									"value": "Bean",
									"kind": "link"
								}
							],
							"template": "{ new (): %1 }"
						}
					}
				],
				"returns": [
					{
						"dataType": {
							"tokens": [
								{
									"value": "void",
									"kind": "canonical"
								}
							],
							"template": "void"
						}
					}
				]
			},
			{
				"id": "_Nbc8WilM8BSnZGPEOtvs",
				"name": "isPhysicalObject",
				"brief": "",
				"authors": [
					"Shukant K. Pal &lt;shukantpal@outlook.com&gt;"
				],
				"copyright": "Shukant K. Pal (C) 2020",
				"license": "MIT",
				"see": [
					"PhysicalObject"
				],
				"since": "2020",
				"type": "FunctionDoc",
				"description": "<p>Checks whether the object is an instance of {@code PhysicalObject}.</p>",
				"params": [
					{
						"identifier": "object",
						"optional": false,
						"dataType": {
							"tokens": [
								{
									"value": "Object",
									"kind": "canonical"
								}
							],
							"template": "Object"
						}
					}
				],
				"returns": [
					{
						"dataType": {
							"tokens": [
								{
									"value": "boolean",
									"kind": "canonical"
								}
							],
							"template": "boolean"
						}
					}
				]
			}
		]
	},
	"registry": {
		"pkg-RDfrRMCGko7jj0AIHmHOp": {
			"uri": "/example-documentation/@webdoc/example.html"
		},
		"tC93768hy8U49dn2Qm88k": {
			"uri": "/example-documentation/@webdoc/example/PIXI.html"
		},
		"0ejCXBjphj6dE8kTMAQz-": {
			"uri": "/example-documentation/@webdoc/example/PIXI/utils.html"
		},
		"CIyXY_cWxD5QhyEOaJ2ZK": {
			"uri": "/example-documentation/@webdoc/example/PIXI/utils/skipHello.html"
		},
		"4K1SVXk_1phhLl1RedGMI": {
			"uri": "/example-documentation/@webdoc/example/PIXI/TilingSprite.html"
		},
		"kGSykzhT0FVACMXvrX7By": {
			"uri": "/example-documentation/@webdoc/example/PIXI/TilingSprite.html#constructor"
		},
		"qSow5cx_rWaoEdJfW94BA": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractRenderer.html"
		},
		"_QAZyuAajcEDBO1xlL090": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractRenderer.html#backgroundColor"
		},
		"1PS2x6cYHfbY-0hNm1Ynx": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractRenderer.html#constructor"
		},
		"qo7IL8h7NRkz18cN_-qJ5": {
			"uri": "/example-documentation/@webdoc/example/PIXI/ObjectRenderer.html"
		},
		"2edGrpr4oM7ShjiCbDLvR": {
			"uri": "/example-documentation/@webdoc/example/PIXI/ObjectRenderer.html#renderer"
		},
		"OexORYisbbaDxN-tg2OYh": {
			"uri": "/example-documentation/@webdoc/example/PIXI/ObjectRenderer.html#constructor"
		},
		"AJaaB-PEJgxH0zHGKtO4D": {
			"uri": "/example-documentation/@webdoc/example/PIXI/ObjectRenderer.html#destroy"
		},
		"FhBq5XprcQH5qz7V-8ru9": {
			"uri": "/example-documentation/@webdoc/example/PIXI/ObjectRenderer.html#flush"
		},
		"mPrXMiwQ93saOgBlP4VzB": {
			"uri": "/example-documentation/@webdoc/example/PIXI/ObjectRenderer.html#render"
		},
		"J1VO7Bv0tlB6IM4D06Zdc": {
			"uri": "/example-documentation/@webdoc/example/PIXI/ObjectRenderer.html#start"
		},
		"4bM19_pk97aD69xVNt8tK": {
			"uri": "/example-documentation/@webdoc/example/PIXI/ObjectRenderer.html#stop"
		},
		"zh_ToZdwwIKs2_i2SuoCX": {
			"uri": "/example-documentation/@webdoc/example/PIXI/System.html"
		},
		"PLhZC2xOWAblRXAVpNCnP": {
			"uri": "/example-documentation/@webdoc/example/PIXI/System.html#renderer"
		},
		"3Z0R-0VndueVAeTEizi-G": {
			"uri": "/example-documentation/@webdoc/example/PIXI/System.html#constructor"
		},
		"QdzxlLDWrm81MPd9RHVSL": {
			"uri": "/example-documentation/@webdoc/example/PIXI/System.html#destroy"
		},
		"CYSk2pwKPDcLOyELM8VBu": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html"
		},
		"cSrd-9isdLsZbs1rO5ber": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#_drawCallPool"
		},
		"ATaaCoNd6RuqnX_byMF5R": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#_textureArrayPool"
		},
		"zberrofSLEa3DfGizLeTK": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#bufferSize"
		},
		"1z5sfm8NcBWeVOljQpEKt": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#MAX_TEXTURES"
		},
		"HHWkFrdDK3jfxcyJmjFSA": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#renderer"
		},
		"t1hlCcHYmMVubIXqcsvV0": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#size"
		},
		"qWlQB_MsPAShsVXHyW0F1": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#state"
		},
		"AiIDOOiTlkXG53Tox8Bh1": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#vertexSize"
		},
		"fmlrkgOazGOGeCNibejeK": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#_shader"
		},
		"aHNd19_IK9t5tUv14KBax": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#geometryClass"
		},
		"Q4dFaaG_bvgStCkFpF_bH": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#shaderGenerator"
		},
		"cnomSSwhbtVRhJO0ank-o": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#_aBuffers"
		},
		"yb771zHcRpScTFtyo3RSl": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#_bufferedElements"
		},
		"LOWjeH1m8Z5TrjuwXIf9-": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#_bufferedTextures"
		},
		"-mf9nLXe4Wm1D6yLk6hGG": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#_bufferSize"
		},
		"u2QFTQgZvrh3XZFmWhM5-": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#_flushId"
		},
		"5USFB_BpKdcfl3o4B8BCB": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#_iBuffers"
		},
		"jFgM06pce4mQCzXUbGgVW": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#_indexCount"
		},
		"uSA_ezFaIyREXeyVwyE8z": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#_packedGeometries"
		},
		"493ageB4iD6YUeekh0NII": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#_packedGeometryPoolSize"
		},
		"bCb3dqL6x4mFk1tdulfiT": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#_vertexCount"
		},
		"7wdOqEgp6XquXRwUCcp2y": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#bindAndClearTexArray"
		},
		"wXUkTgVnLJ_Kw6_JI_ok3": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#buildDrawCalls"
		},
		"Dr0wXPNtZHUf4HfeOVb0x": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#constructor"
		},
		"g5QsnZbU_Gy-NLSJGIHco": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#contextChange"
		},
		"Nl0sqcFaMc2rbzuHSPxuc": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#destroy"
		},
		"NK2gInKcZkEAqSsuclw_7": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#flush"
		},
		"V1tebpcH9xR0Agsat2wT1": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#initFlushBuffers"
		},
		"jt0xxujA9TOXxuhXQDDRe": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#onPrerender"
		},
		"zJG1GmKgX04IbIaUEIWOa": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#packInterleavedGeometry"
		},
		"_Ff03YlGBKb7R-OlZ_l3B": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#render"
		},
		"HbUfwutl6khshVCZytN-C": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#start"
		},
		"9SEOsaAlEsoSrQZpV4Q-W": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#stop"
		},
		"WXL_H09QWv_3Seowpxe4d": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#getAttributeBuffer"
		},
		"IAzHEBkjWiKB71EFfFn9C": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#getIndexBuffer"
		},
		"_gwjcGHSMgzsCfDjosn2u": {
			"uri": "/example-documentation/@webdoc/example/PIXI/TRANSFORM_MODE.html"
		},
		"4x5McgB6buchXQhB484Mk": {
			"uri": "/example-documentation/@webdoc/example/PIXI/TRANSFORM_MODE.html#DYNAMIC"
		},
		"9vFp4M5m2BSgYZCO3OD4W": {
			"uri": "/example-documentation/@webdoc/example/PIXI/TRANSFORM_MODE.html#STATIC"
		},
		"qRsg81Obxb3_U2XdqEOU6": {
			"uri": "/example-documentation/@webdoc/example/PIXI/.html"
		},
		"SQmrk6Bupv4yLAtRVJQeR": {
			"uri": "/example-documentation/@webdoc/example/PIXI/.html#destroy"
		},
		"PhvGLPwTPiQZ_-V6KQxe-": {
			"uri": "/example-documentation/@webdoc/example/PIXI/.html#init"
		},
		"9rEyZpdNZSAss20SGVgoO": {
			"uri": "/example-documentation/@webdoc/example/PIXI.html#SVG_SIZE"
		},
		"HTEepaSGbncHxpQq4V-e7": {
			"uri": "/example-documentation/@webdoc/example/R.html"
		},
		"6tUP3yNzgA6lIu2pmb27m": {
			"uri": "/example-documentation/@webdoc/example/R/Road.html"
		},
		"r2YXfqIMX9QzCYSwHxq3J": {
			"uri": "/example-documentation/@webdoc/example/R/Road.html#constructor"
		},
		"7vwj4Z9So7boGC2SrTkAi": {
			"uri": "/example-documentation/@webdoc/example/R.html#DEFAULT_LANES"
		},
		"WrJ7VShh9m6y2pPX0nkh3": {
			"uri": "/example-documentation/@webdoc/example/R.html#buildRoad"
		},
		"HL_4_rakZRcIIXufCcUnY": {
			"uri": "/example-documentation/@webdoc/example/Ts.html"
		},
		"OmCVSSMySJHbimgJlvNej": {
			"uri": "/example-documentation/@webdoc/example/Ts/Transaction.html"
		},
		"bWuWi5Iq1pcqO4YTsSGGZ": {
			"uri": "/example-documentation/@webdoc/example/Ts/Transaction.html#constructor"
		},
		"2MCG7TGV8yVS62XhDnPme": {
			"uri": "/example-documentation/@webdoc/example/Bean.html"
		},
		"4m5unv0nn8Sui3sb2zFKW": {
			"uri": "/example-documentation/@webdoc/example/Bean.html#constructor"
		},
		"m8Rf_xx-bftUMdsJhFUve": {
			"uri": "/example-documentation/@webdoc/example/Bean.html#roast"
		},
		"EqfEqwlms2RWF9WF5ftXq": {
			"uri": "/example-documentation/@webdoc/example/Car.html"
		},
		"ykWNoOEQRZoYGPWEDyZnY": {
			"uri": "/example-documentation/@webdoc/example/Car.html#DEFAULT_DRIVE_SHIFT"
		},
		"9D7tVq7GGAXaz2H3wkbY9": {
			"uri": "/example-documentation/@webdoc/example/Car.html#bounds"
		},
		"EDz3eGja8sMEYL1ovotaz": {
			"uri": "/example-documentation/@webdoc/example/Car.html#interactions"
		},
		"6kN83eLfguXxLpDr2FX_R": {
			"uri": "/example-documentation/@webdoc/example/Car.html#mass"
		},
		"D_edTuaG5gqJzuqVRJv28": {
			"uri": "/example-documentation/@webdoc/example/Car.html#model"
		},
		"sPCqhh0-J0O5WoChNLQm3": {
			"uri": "/example-documentation/@webdoc/example/Car.html#position"
		},
		"afjQ6SnhnnbJbGoGZBH_J": {
			"uri": "/example-documentation/@webdoc/example/Car.html#velocity"
		},
		"wMqID2NUXV7_ERl-6GDos": {
			"uri": "/example-documentation/@webdoc/example/Car.html#vin"
		},
		"sjMU5kN5WOpAaxDB9QkgG": {
			"uri": "/example-documentation/@webdoc/example/Car.html#registerRetail"
		},
		"segQr1bVanBnLDlXUPMtc": {
			"uri": "/example-documentation/@webdoc/example/Car.html#constructor"
		},
		"CVIgIu13Gyf1JxadPwQfd": {
			"uri": "/example-documentation/@webdoc/example/Car.html#onCrash"
		},
		"NP9GFhkeW4VZ3hxC-Xxz0": {
			"uri": "/example-documentation/@webdoc/example/CoffeeBean.html"
		},
		"vuxx3j-vAywPpEyqW41BC": {
			"uri": "/example-documentation/@webdoc/example/CoffeeBean.html#maturity"
		},
		"K2SYNR0IUFFWvvjgYs2sL": {
			"uri": "/example-documentation/@webdoc/example/CoffeeBean.html#roasted"
		},
		"nipqaIsHgkSFF2FpZyAME": {
			"uri": "/example-documentation/@webdoc/example/CoffeeBean.html#constructor"
		},
		"6nxjsx3lFelz8i-erT_gA": {
			"uri": "/example-documentation/@webdoc/example/CoffeeBean.html#roast"
		},
		"RITp4qbduYaI5QmnMiipW": {
			"uri": "/example-documentation/@webdoc/example/ExampleFactory.html"
		},
		"-GZydgUQ2qVLxKqeehiH0": {
			"uri": "/example-documentation/@webdoc/example/ExampleFactory.html#getInstance"
		},
		"tzjVsEelx9IcOKo6CdwYn": {
			"uri": "/example-documentation/@webdoc/example/ExampleFactory.html#build"
		},
		"wqPrEBL5zKZLxPakEchQa": {
			"uri": "/example-documentation/@webdoc/example/ExampleFactory.html#constructor"
		},
		"yxK82qndaxbVJQV1s9l7x": {
			"uri": "/example-documentation/@webdoc/example/ExampleFactory.html#getContext"
		},
		"pRuzYbRBXnL5_25OeRXv3": {
			"uri": "/example-documentation/@webdoc/example/Gravity.html"
		},
		"AVl7lS0N-MXxdIVXkYuxU": {
			"uri": "/example-documentation/@webdoc/example/Gravity.html#constructor"
		},
		"8MmiZr4ebV0vhCfkZbY6n": {
			"uri": "/example-documentation/@webdoc/example/Gravity.html#force"
		},
		"xXtfsmJW77VZu8OBBoz3b": {
			"uri": "/example-documentation/@webdoc/example/PhysicalInteraction.html"
		},
		"e1nTAim9AnUw4u9WKG7sp": {
			"uri": "/example-documentation/@webdoc/example/PhysicalInteraction.html#GRAVITATIONAL_CONSTANT"
		},
		"TeecB7-AQe41Rk_LqzaeY": {
			"uri": "/example-documentation/@webdoc/example/PhysicalInteraction.html#createGravity"
		},
		"3iFSaU6YhMuA_EPW211VV": {
			"uri": "/example-documentation/@webdoc/example/PhysicalInteraction.html#force"
		},
		"rCi8ybsLYwpl7lFJLisML": {
			"uri": "/example-documentation/@webdoc/example/PhysicalObject.html"
		},
		"zV_Fl8gKtxluPfaZbOCwS": {
			"uri": "/example-documentation/@webdoc/example/PhysicalObject.html#bounds"
		},
		"2ebTSWBbpjJXGdJ2hOn_Q": {
			"uri": "/example-documentation/@webdoc/example/PhysicalObject.html#interactions"
		},
		"QWci2LafCujlKQD_QBwRV": {
			"uri": "/example-documentation/@webdoc/example/PhysicalObject.html#mass"
		},
		"pgmA3EXAYcP4ra9pmqzSw": {
			"uri": "/example-documentation/@webdoc/example/PhysicalObject.html#position"
		},
		"DgHkgfOGHRB7WBmXWAuYq": {
			"uri": "/example-documentation/@webdoc/example/PhysicalObject.html#velocity"
		},
		"DdMVxbLUKFeOC7Hoga0dl": {
			"uri": "/example-documentation/@webdoc/example/Vector.html"
		},
		"3xItSAds0vAGglXhNt4-s": {
			"uri": "/example-documentation/@webdoc/example/Vector.html#dimensions"
		},
		"z-d6DqrJfF9YQ2DFj9HGx": {
			"uri": "/example-documentation/@webdoc/example/Vector.html#add"
		},
		"oFFa7J1nda56oqEDis8PH": {
			"uri": "/example-documentation/@webdoc/example/Vector.html#equalTo"
		},
		"8GRt7guqAvN8jgzDpHnNF": {
			"uri": "/example-documentation/@webdoc/example/Vector.html#isCompat"
		},
		"uaIhh5ClA8pGYwBnuiVcw": {
			"uri": "/example-documentation/@webdoc/example/CAR_MAKES.html"
		},
		"P5bbVcfAyNlTOLnQGhL98": {
			"uri": "/example-documentation/@webdoc/example/CAR_MAKES.html#FERRARI"
		},
		"K3tg7cmbomlMivY4e7O6R": {
			"uri": "/example-documentation/@webdoc/example/CAR_MAKES.html#FORD"
		},
		"yWvORO_XT35keAknucY9D": {
			"uri": "/example-documentation/@webdoc/example/CAR_MAKES.html#GENERAL_MOTORS"
		},
		"mFxrA1JE8LH06Si-2699w": {
			"uri": "/example-documentation/@webdoc/example/CAR_MAKES.html#JAGUAR"
		},
		"qpRuUK98HUfuQXjcI41BB": {
			"uri": "/example-documentation/@webdoc/example/CAR_MAKES.html#KIA"
		},
		"rkccwbd1UwOpNhYZMocxv": {
			"uri": "/example-documentation/@webdoc/example/CAR_MAKES.html#LAMBORGHINI"
		},
		"pFhfs7cvMP81E2IFngokl": {
			"uri": "/example-documentation/@webdoc/example/CAR_MAKES.html#TOYOTA"
		},
		"Qd23jrzPa1iFmecqT09mq": {
			"uri": "/example-documentation/@webdoc/example/VectorArray.html"
		},
		"8rXtGghdoANt9ns5s4es2": {
			"uri": "/example-documentation/@webdoc/example/VectorArray.html#meta"
		},
		"kfzBNeWU2RIzDruRVM8OK": {
			"uri": "/example-documentation/@webdoc/example/CarDealer.html"
		},
		"C6hzm5wcuqIuEUgZMnfPk": {
			"uri": "/example-documentation/@webdoc/example/CarDealer.html#closeTransaction"
		},
		"8NBqBMN4z9t3vPdMRXaao": {
			"uri": "/example-documentation/@webdoc/example/CarDealer.html#initiateTransaction"
		},
		"Egtrn9YbZeCextGAVTpAC": {
			"uri": "/example-documentation/@webdoc/example/CarDealer.html#offerAsk"
		},
		"zzm3F3LiDOphZaUTHsW2J": {
			"uri": "/example-documentation/@webdoc/example/CarDealer.html#offerBid"
		},
		"ozW_MJFygNWa8taznjB8d": {
			"uri": "/example-documentation/@webdoc/example/installBean.html"
		},
		"_Nbc8WilM8BSnZGPEOtvs": {
			"uri": "/example-documentation/@webdoc/example/isPhysicalObject.html"
		}
	}
}