{
	"version": "1.0.0",
	"metadata": {
		"linker": "(unsigned)",
		"siteDomain": "https://webdoc-labs.github.io",
		"siteRoot": "example-documentation"
	},
	"root": {
		"id": "root-02Ziwuv4WotinXjobF41H",
		"name": "",
		"type": "RootDoc",
		"members": [
			{
				"id": "MqbG8Pkbh3de_HHZU9vfa",
				"name": "PIXI",
				"brief": "",
				"type": "NSDoc",
				"members": [
					{
						"id": "BSE4qMLiLDK5xinRM4zRK",
						"name": "utils",
						"brief": "",
						"defaultValue": "false",
						"scope": "static",
						"type": "NSDoc",
						"members": [
							{
								"id": "1Q1CJqePT7ITfr50juB8v",
								"name": "skipHello",
								"brief": "<p>Skips the hello message of renderers that are created after this is run.</p>",
								"deprecated": true,
								"type": "FunctionDoc",
								"params": [],
								"returns": [
									{
										"dataType": {
											"tokens": [
												{
													"value": "void",
													"kind": "canonical"
												}
											],
											"template": "void"
										}
									}
								]
							}
						]
					},
					{
						"id": "9EvpX8Qkt66-mkdPpfekq",
						"name": "TilingSprite",
						"brief": "",
						"deprecated": "since 5.0.0",
						"scope": "static",
						"see": [
							"PIXI.TilingSprite"
						],
						"type": "ClassDoc",
						"members": [
							{
								"id": "Aw1CIaXowfWi6ZSE7oS3P",
								"name": "constructor",
								"brief": "",
								"access": "public",
								"scope": "instance",
								"type": "MethodDoc",
								"params": []
							}
						]
					},
					{
						"id": "1i2MXxteQBQw1abHBz1nw",
						"name": "AbstractRenderer",
						"brief": "",
						"type": "ClassDoc",
						"members": [
							{
								"id": "itwHpp7OEMCyh2kjIT2-z",
								"name": "backgroundColor",
								"brief": "<p>The background color to fill if not transparent</p>",
								"scope": "instance",
								"type": "PropertyDoc"
							},
							{
								"id": "M2EJohSCM1Zqw3_NTCHpJ",
								"name": "constructor",
								"brief": "",
								"access": "public",
								"scope": "instance",
								"type": "MethodDoc",
								"params": []
							}
						]
					},
					{
						"id": "Pw0wqkG74hO04rfrKtthU",
						"name": "ObjectRenderer",
						"brief": "<p>Base for a common object renderer that can be used as a system renderer plugin.</p>",
						"type": "ClassDoc",
						"extends": [
							"PIXI.System"
						],
						"members": [
							{
								"id": "OJy9q5-HDx1lyxbyfHn_f",
								"name": "renderer",
								"brief": "<p>The renderer this manager works for.</p>",
								"scope": "instance",
								"type": "PropertyDoc"
							},
							{
								"id": "3hrL41XNJcovv2pZM1pzL",
								"name": "constructor",
								"brief": "",
								"scope": "instance",
								"type": "MethodDoc",
								"params": [
									{
										"identifier": "renderer",
										"optional": false,
										"description": "<p>The renderer this manager works for.</p>",
										"dataType": {
											"tokens": [
												{
													"value": "PIXI.Renderer",
													"kind": "canonical"
												},
												{
													"value": "PIXI.Renderer",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									}
								],
								"returns": []
							},
							{
								"id": "CqQoc0zIzuVAGyo95AuUK",
								"name": "destroy",
								"brief": "",
								"scope": "instance",
								"type": "MethodDoc",
								"description": "<p>Generic destruction method that frees all resources. This\nshould be called by subclasses.</p>",
								"params": [],
								"returns": []
							},
							{
								"id": "uYbMjyIK1EJKBaBGyYTgr",
								"name": "flush",
								"brief": "",
								"scope": "instance",
								"type": "MethodDoc",
								"description": "<p>Stub method that should be used to empty the current\nbatch by rendering objects now.</p>",
								"params": [],
								"returns": []
							},
							{
								"id": "VKyj1n5OgDPvwUFFYOFi4",
								"name": "render",
								"brief": "",
								"scope": "instance",
								"type": "MethodDoc",
								"description": "<p>Keeps the object to render. It doesn't have to be\nrendered immediately.</p>",
								"params": [
									{
										"identifier": "object",
										"optional": false,
										"description": "<p>The object to render.</p>",
										"dataType": {
											"tokens": [
												{
													"value": "PIXI.DisplayObject",
													"kind": "canonical"
												},
												{
													"value": "PIXI.DisplayObject",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									}
								],
								"returns": []
							},
							{
								"id": "nos4hfWlPkGsye461rnYg",
								"name": "start",
								"brief": "",
								"scope": "instance",
								"type": "MethodDoc",
								"description": "<p>Stub method that initializes any state required before\nrendering starts. It is different from the <code>prerender</code>\ns...",
								"params": [],
								"returns": []
							},
							{
								"id": "OuXFOXWAOAWyRV2g-VIs7",
								"name": "stop",
								"brief": "",
								"scope": "instance",
								"type": "MethodDoc",
								"description": "<p>Stops the renderer. It should free up any state and\nbecome dormant.</p>",
								"params": [],
								"returns": []
							}
						]
					},
					{
						"id": "5_jcLt63dYaO-TPWDZ_D1",
						"name": "System",
						"brief": "<p>System is a base class used for extending systems used by the {@link PIXI.AbstractRenderer}.</p>",
						"see": [
							"PIXI.Renderer#addSystem"
						],
						"type": "ClassDoc",
						"description": "<p>Search more here: {@link https://www.google.com/}</p>",
						"members": [
							{
								"id": "X9n6bQxlFzfomxRops9q8",
								"name": "renderer",
								"brief": "<p>The renderer this manager works for.</p>",
								"scope": "instance",
								"type": "PropertyDoc"
							},
							{
								"id": "7Jyffo9q5JbJYat3oLJ3M",
								"name": "constructor",
								"brief": "",
								"scope": "instance",
								"type": "MethodDoc",
								"params": [
									{
										"identifier": "renderer",
										"optional": false,
										"description": "<p>The renderer this manager works for.</p>",
										"dataType": {
											"tokens": [
												{
													"value": "PIXI.Renderer",
													"kind": "canonical"
												},
												{
													"value": "PIXI.Renderer",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									}
								],
								"returns": []
							},
							{
								"id": "3enb1wm-e33wOHcuMi6nZ",
								"name": "destroy",
								"brief": "<p>Generic destroy methods to be overridden by the subclass</p>",
								"scope": "instance",
								"type": "MethodDoc",
								"params": [],
								"returns": []
							}
						]
					},
					{
						"id": "b5nxN9_kGiQ4JRma08k3E",
						"name": "AbstractBatchRenderer",
						"brief": "<p>Renderer dedicated to drawing and batching sprites.</p>",
						"access": "protected",
						"readonly": true,
						"type": "ClassDoc",
						"description": "<p>This is the default batch renderer. It buffers objects\nwith texture-based geometries and renders them in\nbatches. It uploa...",
						"extends": [
							"PIXI.ObjectRenderer"
						],
						"members": [
							{
								"id": "DkuGZMLcQvBoxFtpVSboS",
								"name": "_drawCallPool",
								"brief": "",
								"scope": "static",
								"type": "PropertyDoc",
								"description": "<p>Pool of <code>BatchDrawCall</code> objects that <code>flush</code> used\nto create &quot;batches&quot; of the objects being..."
							},
							{
								"id": "NhFsDVQcz6PlTnU9mi2y8",
								"name": "_textureArrayPool",
								"brief": "",
								"scope": "static",
								"type": "PropertyDoc",
								"description": "<p>Pool of <code>BatchDrawCall</code> objects that <code>flush</code> used\nto create &quot;batches&quot; of the objects being..."
							},
							{
								"id": "E0QTTQX9k_29TAeRptaXD",
								"name": "bufferSize",
								"brief": "",
								"scope": "instance",
								"type": "PropertyDoc"
							},
							{
								"id": "Mu5xTSq1p8eLzEas3LeSN",
								"name": "MAX_TEXTURES",
								"brief": "",
								"defaultValue": "1",
								"readonly": true,
								"scope": "instance",
								"see": [
									"PIXI.AbstractBatchRenderer#contextChange"
								],
								"type": "PropertyDoc",
								"description": "<p>Maximum number of textures that can be uploaded to\nthe GPU under the current context. It is initialized\nproperly in <code>..."
							},
							{
								"id": "j_eRKhdbziqS2Xb--cyge",
								"name": "renderer",
								"brief": "<p>The renderer this manager works for.</p>",
								"scope": "instance",
								"type": "PropertyDoc"
							},
							{
								"id": "rVyNUulitcVjAZn8lAKRb",
								"name": "size",
								"brief": "",
								"defaultValue": "settings.SPRITE_BATCH_SIZE * 4",
								"scope": "instance",
								"type": "PropertyDoc",
								"description": "<p>The number of bufferable objects before a flush\noccurs automatically.</p>"
							},
							{
								"id": "nXnN7MbCHNE3RDsJ3iO7_",
								"name": "state",
								"brief": "<p>The WebGL state in which this renderer will work.</p>",
								"readonly": true,
								"scope": "instance",
								"type": "PropertyDoc"
							},
							{
								"id": "JMT0vK0Vfk0L_z8sNX4p_",
								"name": "vertexSize",
								"brief": "",
								"defaultValue": "undefined",
								"readonly": true,
								"scope": "instance",
								"type": "PropertyDoc",
								"description": "<p>Size of data being buffered per vertex in the\nattribute buffers (in floats). By default, the\nbatch-renderer plugin uses 6:..."
							},
							{
								"id": "FOuTQWsHu5ZRZr_CtbL8G",
								"name": "_shader",
								"brief": "<p>This shader is generated by <code>this.shaderGenerator</code>.</p>",
								"access": "protected",
								"defaultValue": "undefined",
								"scope": "instance",
								"type": "PropertyDoc",
								"description": "<p>It is generated specifically to handle the required\nnumber of textures being batched together.</p>"
							},
							{
								"id": "OizyCo70aQqnWZlJ13Lzj",
								"name": "geometryClass",
								"brief": "",
								"access": "protected",
								"defaultValue": "PIXI.BatchGeometry",
								"scope": "instance",
								"type": "PropertyDoc",
								"description": "<p>The class that represents the geometry of objects\nthat are going to be batched with this.</p>"
							},
							{
								"id": "WQ0X_7qO44SLnzVBDF77b",
								"name": "shaderGenerator",
								"brief": "",
								"access": "protected",
								"defaultValue": "undefined",
								"scope": "instance",
								"type": "PropertyDoc",
								"description": "<p>This is used to generate a shader that can\ncolor each vertex based on a <code>aTextureId</code>\nattribute that points to a..."
							},
							{
								"id": "ZB5GaU0FQHewCMMZ8BRCD",
								"name": "_aBuffers",
								"brief": "",
								"access": "private",
								"scope": "instance",
								"see": [
									"PIXI.AbstractBatchRenderer#getAttributeBuffer"
								],
								"type": "PropertyDoc",
								"description": "<p>Pool of <code>ViewableBuffer</code> objects that are sorted in\norder of increasing size. The flush method uses\nthe buffer ..."
							},
							{
								"id": "D8eDHfMrVJxD-tCaBgC33",
								"name": "_bufferedElements",
								"brief": "<p>Buffer of objects that are yet to be rendered.</p>",
								"access": "private",
								"scope": "instance",
								"type": "PropertyDoc"
							},
							{
								"id": "_8wQsafCTf7997M4KnbFJ",
								"name": "_bufferedTextures",
								"brief": "",
								"access": "private",
								"scope": "instance",
								"type": "PropertyDoc",
								"description": "<p>Data for texture batch builder, helps to save a bit of CPU on a pass</p>"
							},
							{
								"id": "2hHX1AtPaxTG9AVRFyIBv",
								"name": "_bufferSize",
								"brief": "",
								"access": "private",
								"defaultValue": "0",
								"scope": "instance",
								"type": "PropertyDoc",
								"description": "<p>Number of elements that are buffered and are\nwaiting to be flushed.</p>"
							},
							{
								"id": "7be4Ld-38e-AGVP9KR6Qn",
								"name": "_flushId",
								"brief": "",
								"access": "private",
								"defaultValue": "0",
								"scope": "instance",
								"type": "PropertyDoc",
								"description": "<p>A flush may occur multiple times in a single\nframe. On iOS devices or when\n<code>settings.CAN_UPLOAD_SAME_BUFFER</code> is..."
							},
							{
								"id": "xmB7zuK-HdLvH97JNQ4Nr",
								"name": "_iBuffers",
								"brief": "",
								"access": "private",
								"scope": "instance",
								"see": [
									"PIXI.AbstractBatchRenderer#getIndexBuffer"
								],
								"type": "PropertyDoc",
								"description": "<p>Pool of <code>Uint16Array</code> objects that are sorted in\norder of increasing size. The flush method uses\nthe buffer wit..."
							},
							{
								"id": "a8y7wVlIh358pJeAkIJaQ",
								"name": "_indexCount",
								"brief": "",
								"access": "private",
								"defaultValue": "0",
								"scope": "instance",
								"type": "PropertyDoc",
								"description": "<p>Total count of all indices used by the currently\nbuffered objects.</p>"
							},
							{
								"id": "yQ5XF9XVP9NudDH1j1Bqg",
								"name": "_packedGeometries",
								"brief": "",
								"access": "private",
								"scope": "instance",
								"see": [
									"PIXI.AbstractBatchRenderer.contextChange"
								],
								"type": "PropertyDoc",
								"description": "<p>Pool of <code>this.geometryClass</code> geometry objects\nthat store buffers. They are used to pass data\nto the shader on e..."
							},
							{
								"id": "XB6li2sP6Gd7C8zMZh1c6",
								"name": "_packedGeometryPoolSize",
								"brief": "",
								"access": "private",
								"defaultValue": "2",
								"scope": "instance",
								"type": "PropertyDoc",
								"description": "<p>Size of <code>this._packedGeometries</code>. It can be expanded\nif more than <code>this._packedGeometryPoolSize</code> flu..."
							},
							{
								"id": "97mqGGp-S8hayuAHd5USy",
								"name": "_vertexCount",
								"brief": "",
								"access": "private",
								"defaultValue": "0",
								"scope": "instance",
								"type": "PropertyDoc",
								"description": "<p>Total count of all vertices used by the currently\nbuffered objects.</p>"
							},
							{
								"id": "sw9wGZ7Dtjj3qgKJtaON3",
								"name": "bindAndClearTexArray",
								"brief": "<p>Bind textures for current rendering</p>",
								"scope": "instance",
								"type": "MethodDoc",
								"params": [
									{
										"identifier": "texArray",
										"optional": false,
										"dataType": {
											"tokens": [
												{
													"value": "PIXI.BatchTextureArray",
													"kind": "canonical"
												},
												{
													"value": "PIXI.BatchTextureArray",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									}
								],
								"returns": []
							},
							{
								"id": "TNkhOW41yg7tzYxzxKsRI",
								"name": "buildDrawCalls",
								"brief": "<p>Populating drawcalls for rendering</p>",
								"scope": "instance",
								"type": "MethodDoc",
								"params": [
									{
										"identifier": "texArray",
										"optional": false,
										"dataType": {
											"tokens": [
												{
													"value": "PIXI.BatchTextureArray",
													"kind": "canonical"
												},
												{
													"value": "PIXI.BatchTextureArray",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									},
									{
										"identifier": "start",
										"optional": false,
										"dataType": {
											"tokens": [
												{
													"value": "number",
													"kind": "canonical"
												},
												{
													"value": "number",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									},
									{
										"identifier": "finish",
										"optional": false,
										"dataType": {
											"tokens": [
												{
													"value": "number",
													"kind": "canonical"
												},
												{
													"value": "number",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									}
								],
								"returns": []
							},
							{
								"id": "JA9Mu-O0a_sMIw6G4rA2x",
								"name": "constructor",
								"brief": "",
								"scope": "instance",
								"type": "MethodDoc",
								"description": "<p>This will hook onto the renderer's <code>contextChange</code>\nand <code>prerender</code> signals.</p>",
								"params": [
									{
										"identifier": "renderer",
										"optional": false,
										"description": "<p>The renderer this works for.</p>",
										"dataType": {
											"tokens": [
												{
													"value": "PIXI.Renderer",
													"kind": "canonical"
												},
												{
													"value": "PIXI.Renderer",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									}
								],
								"returns": []
							},
							{
								"id": "8ISGoRobAGKVw3ab_RTwz",
								"name": "contextChange",
								"brief": "<p>Handles the <code>contextChange</code> signal.</p>",
								"scope": "instance",
								"type": "MethodDoc",
								"description": "<p>It calculates <code>this.MAX_TEXTURES</code> and allocating the\npacked-geometry object pool.</p>",
								"params": [],
								"returns": []
							},
							{
								"id": "GpLZk-w45yJ9EXPGCSt7d",
								"name": "destroy",
								"brief": "<p>Destroys this <code>AbstractBatchRenderer</code>. It cannot be used again.</p>",
								"scope": "instance",
								"type": "MethodDoc",
								"params": [],
								"returns": []
							},
							{
								"id": "znMNWkwCcXXpG6w-6ei1C",
								"name": "flush",
								"brief": "<p>Renders the content <em>now</em> and empties the current batch.</p>",
								"scope": "instance",
								"type": "MethodDoc",
								"params": [],
								"returns": []
							},
							{
								"id": "DcqVHXugpwLbL_VbXrVfL",
								"name": "initFlushBuffers",
								"brief": "<p>Makes sure that static and dynamic flush pooled objects have correct dimensions</p>",
								"scope": "instance",
								"type": "MethodDoc",
								"params": [],
								"returns": []
							},
							{
								"id": "4WmX6UkJ1c10AHLcAtKj2",
								"name": "onPrerender",
								"brief": "<p>Handles the <code>prerender</code> signal.</p>",
								"scope": "instance",
								"type": "MethodDoc",
								"description": "<p>It ensures that flushes start from the first geometry\nobject again.</p>",
								"params": [],
								"returns": []
							},
							{
								"id": "WZUDOUYUUNZnViIyWCfVJ",
								"name": "packInterleavedGeometry",
								"brief": "",
								"scope": "instance",
								"type": "MethodDoc",
								"description": "<p>Takes the four batching parameters of <code>element</code>, interleaves\nand pushes them into the batching attribute/index ...",
								"params": [
									{
										"identifier": "element",
										"optional": false,
										"description": "<p>element being rendered</p>",
										"dataType": {
											"tokens": [
												{
													"value": "PIXI.Sprite",
													"kind": "canonical"
												},
												{
													"value": "PIXI.Sprite",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									},
									{
										"identifier": "attributeBuffer",
										"optional": false,
										"description": "<p>attribute buffer.</p>",
										"dataType": {
											"tokens": [
												{
													"value": "PIXI.ViewableBuffer",
													"kind": "canonical"
												},
												{
													"value": "PIXI.ViewableBuffer",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									},
									{
										"identifier": "indexBuffer",
										"optional": false,
										"description": "<p>index buffer</p>",
										"dataType": {
											"tokens": [
												{
													"value": "Uint16Array",
													"kind": "canonical"
												},
												{
													"value": "Uint16Array",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									},
									{
										"identifier": "aIndex",
										"optional": false,
										"description": "<p>number of floats already in the attribute buffer</p>",
										"dataType": {
											"tokens": [
												{
													"value": "number",
													"kind": "canonical"
												},
												{
													"value": "number",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									},
									{
										"identifier": "iIndex",
										"optional": false,
										"description": "<p>number of indices already in <code>indexBuffer</code></p>",
										"dataType": {
											"tokens": [
												{
													"value": "number",
													"kind": "canonical"
												},
												{
													"value": "number",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									}
								],
								"returns": []
							},
							{
								"id": "C_X7_3QkmKLoob_5VIonV",
								"name": "render",
								"brief": "",
								"scope": "instance",
								"type": "MethodDoc",
								"description": "<p>Buffers the &quot;batchable&quot; object. It need not be rendered\nimmediately.</p>",
								"params": [
									{
										"identifier": "element",
										"optional": false,
										"description": "<p>the element to render when\nusing this renderer</p>",
										"dataType": {
											"tokens": [
												{
													"value": "PIXI.DisplayObject",
													"kind": "canonical"
												},
												{
													"value": "PIXI.DisplayObject",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									}
								],
								"returns": []
							},
							{
								"id": "cYsK2f1zNZPzEEfUqMF7i",
								"name": "start",
								"brief": "<p>Starts a new sprite batch.</p>",
								"scope": "instance",
								"type": "MethodDoc",
								"params": [],
								"returns": []
							},
							{
								"id": "E_mXX16L-JICHri-PiUJO",
								"name": "stop",
								"brief": "<p>Stops and flushes the current batch.</p>",
								"scope": "instance",
								"type": "MethodDoc",
								"params": [],
								"returns": []
							},
							{
								"id": "Ae_ow-QNAextzxX2KkkP0",
								"name": "getAttributeBuffer",
								"brief": "",
								"access": "private",
								"scope": "instance",
								"type": "MethodDoc",
								"description": "<p>Fetches an attribute buffer from <code>this._aBuffers</code> that\ncan hold atleast <code>size</code> floats.</p>",
								"params": [
									{
										"identifier": "size",
										"optional": false,
										"description": "<p>minimum capacity required</p>",
										"dataType": {
											"tokens": [
												{
													"value": "number",
													"kind": "canonical"
												},
												{
													"value": "number",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									}
								],
								"returns": [
									{
										"description": "<ul>\n<li>buffer than can hold atleast <code>size</code> floats</li>\n</ul>",
										"dataType": {
											"tokens": [
												{
													"value": "ViewableBuffer",
													"kind": "canonical"
												},
												{
													"value": "ViewableBuffer",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									}
								]
							},
							{
								"id": "jTKRxcUTBDzggkWXi1ZFt",
								"name": "getIndexBuffer",
								"brief": "",
								"access": "private",
								"scope": "instance",
								"type": "MethodDoc",
								"description": "<p>Fetches an index buffer from <code>this._iBuffers</code> that can\nhas atleast <code>size</code> capacity.</p>",
								"params": [
									{
										"identifier": "size",
										"optional": false,
										"description": "<p>minimum required capacity</p>",
										"dataType": {
											"tokens": [
												{
													"value": "number",
													"kind": "canonical"
												},
												{
													"value": "number",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									}
								],
								"returns": [
									{
										"description": "<ul>\n<li>buffer that can fit <code>size</code>\nindices.</li>\n</ul>",
										"dataType": {
											"tokens": [
												{
													"value": "Uint16Array",
													"kind": "canonical"
												},
												{
													"value": "Uint16Array",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									}
								]
							}
						]
					},
					{
						"id": "_1yV79F0qpj2SGgdD-vmI",
						"name": "TRANSFORM_MODE",
						"brief": "<p>Constants that specify the transform type.</p>",
						"deprecated": "since 5.0.0",
						"scope": "static",
						"type": "EnumDoc",
						"members": [
							{
								"id": "Zcx1xvt0k86cT2JmsuCtQ",
								"name": "DYNAMIC",
								"brief": "",
								"access": "public",
								"scope": "static",
								"type": "PropertyDoc"
							},
							{
								"id": "lxXNyU-5wiNGqdIdxsOwH",
								"name": "STATIC",
								"brief": "",
								"access": "public",
								"scope": "static",
								"type": "PropertyDoc"
							}
						]
					},
					{
						"id": "pI50E-G2I7ts-HzDWvLFy",
						"name": "",
						"brief": "",
						"type": "TypedefDoc",
						"extends": [],
						"members": [
							{
								"id": "9RpoSIG9RFRmZORSAajSX",
								"name": "destroy",
								"brief": "",
								"access": "public",
								"scope": "static",
								"type": "PropertyDoc",
								"description": "<p>Called when destroying Application, scoped to Application instance</p>"
							},
							{
								"id": "SziqIwEROwjnVm0NUyomy",
								"name": "init",
								"brief": "",
								"access": "public",
								"scope": "static",
								"type": "PropertyDoc",
								"description": "<p>Called when Application is constructed, scoped to Application instance.\nPasses in <code>options</code> as the only argumen..."
							}
						]
					},
					{
						"id": "dRO0gkwhe0jJ_oJWSWlAm",
						"name": "SVG_SIZE",
						"brief": "",
						"deprecated": "since 5.0.0",
						"scope": "static",
						"see": [
							"PIXI.resources.SVGResource.SVG_SIZE"
						],
						"type": "PropertyDoc"
					}
				]
			},
			{
				"id": "Oin3hspRllyBXMCdylG3W",
				"name": "R",
				"brief": "<p>A namespace dedicated to road manipulation utilites.</p>",
				"readonly": true,
				"type": "NSDoc",
				"members": [
					{
						"id": "CCU4QAIygshdTsf0pgfX3",
						"name": "Road",
						"brief": "<p>This is another road class.</p>",
						"type": "ClassDoc",
						"members": [
							{
								"id": "Vfx-V3tIztqxSzmunv7BL",
								"name": "constructor",
								"brief": "<p>This is another road class.</p>",
								"access": "public",
								"scope": "instance",
								"type": "MethodDoc",
								"params": []
							}
						]
					},
					{
						"id": "X3xTMJq0ZGZlvgc-v2S3P",
						"name": "DEFAULT_LANES",
						"brief": "<p>The default no. of lanes per one side of road</p>",
						"defaultValue": "4",
						"scope": "static",
						"type": "PropertyDoc"
					},
					{
						"id": "DdED8J_A1t265cAq734py",
						"name": "buildRoad",
						"brief": "<p>Builds a road</p>",
						"scope": "instance",
						"type": "MethodDoc",
						"params": [
							{
								"identifier": "address",
								"optional": false,
								"dataType": {
									"tokens": [
										{
											"value": "string",
											"kind": "canonical"
										}
									],
									"template": "string"
								}
							}
						],
						"returns": [
							{
								"dataType": {
									"tokens": [
										{
											"value": "ExampleFactory",
											"kind": "canonical"
										},
										{
											"value": "ExampleFactory",
											"kind": "link"
										}
									],
									"template": "%1"
								}
							}
						]
					}
				]
			},
			{
				"id": "NEE7E7ZAgx_MGV16poxHo",
				"name": "Ts",
				"brief": "",
				"type": "NSDoc",
				"members": [
					{
						"id": "Xj8ZzHSJV5z9EovYvAZSe",
						"name": "Transaction",
						"brief": "",
						"type": "ClassDoc",
						"members": [
							{
								"id": "VlsJ26BsDuEtIWCOdlF9S",
								"name": "constructor",
								"brief": "",
								"access": "public",
								"scope": "instance",
								"type": "MethodDoc",
								"params": []
							}
						]
					}
				]
			},
			{
				"id": "Qs4UhZV0qwKtiXbCL_Wqz",
				"name": "Bean",
				"brief": "<p>Bean class</p>",
				"type": "ClassDoc",
				"members": [
					{
						"id": "1KDLuR8pcDE4MmEXa6Muk",
						"name": "constructor",
						"brief": "<p>Bean class</p>",
						"access": "public",
						"scope": "instance",
						"type": "MethodDoc",
						"params": []
					},
					{
						"id": "EqOX9nDUILuT3WvnSNZVN",
						"name": "roast",
						"brief": "<p>(optional) roasting method</p>",
						"abstract": true,
						"scope": "instance",
						"type": "MethodDoc",
						"params": [],
						"returns": [
							{
								"dataType": {
									"tokens": [
										{
											"value": "void",
											"kind": "canonical"
										}
									],
									"template": "void"
								}
							}
						]
					}
				]
			},
			{
				"id": "87MG0VK7XGxBoMSA91ZLK",
				"name": "Car",
				"brief": "<p><em>Simulation</em> for a automobile that can drive on a manifold surface.</p>",
				"type": "ClassDoc",
				"description": "<pre class=\"hljs\"><code><span class=\"hljs-keyword\">const</span> car = <span class=\"hljs-keyword\">new</span> Car({ <span class...",
				"extends": [
					"PhysicalObject"
				],
				"members": [
					{
						"id": "0GzQ25G6cQtf-WH1LbvQ-",
						"name": "DEFAULT_DRIVE_SHIFT",
						"brief": "",
						"defaultValue": "\"manual\"",
						"scope": "static",
						"type": "PropertyDoc"
					},
					{
						"id": "apU5aC9wBOw1n4HGLk_6V",
						"name": "bounds",
						"brief": "",
						"scope": "instance",
						"type": "PropertyDoc",
						"description": "<p>The mesh enclosing this object. By default, it is a &quot;point&quot; object at the its own\nposition.</p>"
					},
					{
						"id": "7ry9L8KARkSAasjfWCbmt",
						"name": "interactions",
						"brief": "<p>All causal interactions with other objects</p>",
						"scope": "instance",
						"type": "PropertyDoc"
					},
					{
						"id": "vyKMFAyO-giOMK45vODej",
						"name": "mass",
						"brief": "<p>The mass of this object in kilograms.</p>",
						"defaultValue": "0",
						"scope": "instance",
						"type": "PropertyDoc"
					},
					{
						"id": "oi8zaWOkaMVr-6SdRAp1L",
						"name": "model",
						"brief": "",
						"access": "public",
						"defaultValue": "\"TEST\"",
						"scope": "instance",
						"type": "PropertyDoc"
					},
					{
						"id": "3DIarigAvqVBDlaaPY27X",
						"name": "position",
						"brief": "<p>The absolute position of this object's center of mass (in the universal reference frame)</p>",
						"defaultValue": "[0, 0, 0]",
						"scope": "instance",
						"type": "PropertyDoc"
					},
					{
						"id": "piV4P-I0rSx0IUioS430O",
						"name": "velocity",
						"brief": "<p>The absolute velocity of this object (in the universal reference frame)</p>",
						"defaultValue": "[0, 0, 0]",
						"scope": "instance",
						"type": "PropertyDoc"
					},
					{
						"id": "N-4uy7Pte4ImW0deGunu6",
						"name": "vin",
						"brief": "",
						"defaultValue": "0",
						"scope": "instance",
						"type": "PropertyDoc"
					},
					{
						"id": "9Ibt8lfLtqU4Rm6GKqYgR",
						"name": "registerRetail",
						"brief": "<p>Register a retail dealer for buying a car from</p>",
						"scope": "static",
						"type": "MethodDoc",
						"params": [
							{
								"identifier": "name",
								"optional": false,
								"dataType": {
									"tokens": [
										{
											"value": "string",
											"kind": "canonical"
										}
									],
									"template": "string"
								}
							}
						],
						"returns": []
					},
					{
						"id": "nE3Ef1cE6v419cjOTgFFT",
						"name": "constructor",
						"brief": "",
						"scope": "instance",
						"type": "MethodDoc",
						"params": [
							{
								"identifier": "model",
								"optional": false,
								"default": "\"TEST\"",
								"dataType": {
									"tokens": [
										{
											"value": "string",
											"kind": "canonical"
										}
									],
									"template": "string"
								}
							}
						],
						"returns": []
					},
					{
						"id": "fcMFl_Ah88iZuBzWBPbeT",
						"name": "onCrash",
						"brief": "",
						"examples": [
							{
								"caption": "",
								"code": "\n car.onCrash((car) => console.logicalAssignment(car.id + \" crashed!\"))\n"
							}
						],
						"scope": "instance",
						"type": "MethodDoc",
						"params": [
							{
								"identifier": "callback",
								"optional": false,
								"dataType": {
									"tokens": [
										{
											"value": "Function",
											"kind": "canonical"
										}
									],
									"template": "Function"
								}
							},
							{
								"identifier": "callback.name",
								"dataType": {
									"tokens": [
										{
											"value": "string",
											"kind": "canonical"
										}
									],
									"template": "string"
								}
							}
						],
						"returns": []
					}
				]
			},
			{
				"id": "86iuntVTKQfA2nPJXXnM0",
				"name": "CoffeeBean",
				"brief": "<p>This class illustrates how you can create a Java-bean like component in JavaScript</p>",
				"type": "ClassDoc",
				"extends": [
					"Bean"
				],
				"members": [
					{
						"id": "VI4sK5sLFo0UinZPbHUdZ",
						"name": "maturity",
						"brief": "",
						"scope": "instance",
						"type": "PropertyDoc"
					},
					{
						"id": "qqYDfVMChxJgqDkWTvzHE",
						"name": "roasted",
						"brief": "",
						"scope": "instance",
						"type": "PropertyDoc"
					},
					{
						"id": "KKuDce6nSwlLvK-Mmtpeq",
						"name": "constructor",
						"brief": "",
						"scope": "instance",
						"type": "MethodDoc",
						"params": [
							{
								"identifier": "options",
								"optional": true,
								"dataType": {
									"tokens": [
										{
											"value": "object",
											"kind": "canonical"
										}
									],
									"template": "object"
								}
							},
							{
								"identifier": "options.roasted",
								"optional": true,
								"description": "<p>whether the bean is <code>roasted</code></p>",
								"dataType": {
									"tokens": [
										{
											"value": "boolean",
											"kind": "canonical"
										}
									],
									"template": "boolean"
								}
							},
							{
								"identifier": "options.maturity",
								"optional": true,
								"dataType": {
									"tokens": [
										{
											"value": "number",
											"kind": "canonical"
										},
										{
											"value": "number",
											"kind": "canonical"
										}
									],
									"template": "%1"
								}
							}
						],
						"returns": []
					},
					{
						"id": "Af-LHwq3MBl0cqmgcfwED",
						"name": "roast",
						"brief": "<p>Roast this coffee bean.</p>",
						"scope": "instance",
						"type": "MethodDoc",
						"description": "<p>NOTE: You cannot re-roast coffee beans and an error will be thrown if you try to\nroast a roasted coffee bean.</p>",
						"params": [],
						"returns": []
					}
				]
			},
			{
				"id": "epO-p5FodWFgDzIjm1xQn",
				"name": "ExampleFactory",
				"type": "ClassDoc",
				"description": "<p>{@link ExampleFactory} can be used to build examples.</p>\n<pre class=\"hljs\"><code><span class=\"hljs-comment\">// <span clas...",
				"params": [
					{
						"identifier": "context",
						"optional": true,
						"default": "null",
						"description": "<p>A custom context for the factory.</p>",
						"dataType": {
							"tokens": [
								{
									"value": "ExampleContext",
									"kind": "canonical"
								},
								{
									"value": "ExampleContext",
									"kind": "canonical"
								}
							],
							"template": "%1"
						}
					}
				],
				"returns": [],
				"members": [
					{
						"id": "iiCQcsIiuErPNBSBTpXkj",
						"name": "getInstance",
						"brief": "<p>Gets a lazily-initialized, shared singleton instance of {@link ExampleFactory}.</p>",
						"scope": "static",
						"type": "MethodDoc",
						"params": [],
						"returns": [
							{
								"dataType": {
									"tokens": [
										{
											"value": "ExampleFactory",
											"kind": "canonical"
										},
										{
											"value": "ExampleFactory",
											"kind": "link"
										}
									],
									"template": "%1"
								}
							}
						]
					},
					{
						"id": "5wCWfTiFIKRkxRuxGR_Cy",
						"name": "build",
						"brief": "<p>Build the road.</p>",
						"scope": "instance",
						"type": "MethodDoc",
						"params": [],
						"returns": []
					},
					{
						"id": "XUq9bV9rJg-6ajnyGodqm",
						"name": "constructor",
						"brief": "<p>This constructor should only be used for custom contexts.</p>",
						"access": "public",
						"scope": "instance",
						"type": "MethodDoc",
						"params": [
							{
								"identifier": "context",
								"optional": true,
								"default": "null",
								"description": "<p>A custom context for the factory.</p>",
								"dataType": {
									"tokens": [
										{
											"value": "ExampleContext",
											"kind": "canonical"
										},
										{
											"value": "ExampleContext",
											"kind": "canonical"
										}
									],
									"template": "%1"
								}
							}
						],
						"returns": []
					},
					{
						"id": "HkxvSSj-DjcVkk0GD_aJK",
						"name": "getContext",
						"brief": "<p>Get the context of this factory.</p>",
						"scope": "instance",
						"type": "MethodDoc",
						"params": [],
						"returns": [
							{
								"dataType": {
									"tokens": [
										{
											"value": "ExampleContext",
											"kind": "canonical"
										},
										{
											"value": "ExampleContext",
											"kind": "canonical"
										}
									],
									"template": "%1"
								}
							}
						]
					}
				]
			},
			{
				"id": "ZYv2RhYArF1RYwIIRwYPM",
				"name": "Gravity",
				"brief": "<p>This class shouldn't be documented!</p>",
				"type": "ClassDoc",
				"extends": [
					"PhysicalInteraction"
				],
				"members": [
					{
						"id": "TwjJvUZJRvRtYx4iF-A_G",
						"name": "constructor",
						"brief": "<p>This class shouldn't be documented!</p>",
						"access": "public",
						"scope": "instance",
						"type": "MethodDoc",
						"params": []
					},
					{
						"id": "HJ--5aOkyF9AAiUmcLnTh",
						"name": "force",
						"brief": "<p>This method should be overriden to calculate the force at the given instant.</p>",
						"scope": "instance",
						"type": "MethodDoc",
						"params": [],
						"returns": [
							{
								"dataType": {
									"tokens": [
										{
											"value": "Vector<3>",
											"kind": "canonical"
										},
										{
											"value": "Vector",
											"kind": "link"
										},
										{
											"value": "3",
											"kind": "canonical"
										}
									],
									"template": "%1<%2>"
								}
							}
						]
					}
				]
			},
			{
				"id": "yd3oQcF_9tlYJFDb40qNe",
				"name": "PhysicalInteraction",
				"brief": "",
				"readonly": true,
				"type": "ClassDoc",
				"description": "<p>A physical interaction is a force causes object positions to be re-evaulated each frame based on\nforce's magnitude.</p>",
				"members": [
					{
						"id": "jiefEIrHqLCRkIUJmsuxk",
						"name": "GRAVITATIONAL_CONSTANT",
						"brief": "",
						"defaultValue": "1",
						"scope": "static",
						"type": "PropertyDoc"
					},
					{
						"id": "HAk5Ob51QkCrK2ngdhC6P",
						"name": "createGravity",
						"brief": "<p>Creates a graviational force</p>",
						"scope": "static",
						"type": "MethodDoc",
						"params": [
							{
								"identifier": "objects",
								"optional": false,
								"dataType": {
									"tokens": [
										{
											"value": "Tuple<PhysicalObject, 2>",
											"kind": "canonical"
										},
										{
											"value": "Tuple",
											"kind": "canonical"
										},
										{
											"value": "PhysicalObject",
											"kind": "link"
										},
										{
											"value": "2",
											"kind": "canonical"
										}
									],
									"template": "%1<%3, %2>"
								}
							}
						],
						"returns": [
							{
								"dataType": {
									"tokens": [
										{
											"value": "PhysicalInteraction",
											"kind": "canonical"
										},
										{
											"value": "PhysicalInteraction",
											"kind": "link"
										}
									],
									"template": "%1"
								}
							}
						]
					},
					{
						"id": "ACWFAA6TS0uoRN8idZFcn",
						"name": "force",
						"brief": "<p>This method should be overriden to calculate the force at the given instant.</p>",
						"scope": "instance",
						"type": "MethodDoc",
						"params": [],
						"returns": [
							{
								"dataType": {
									"tokens": [
										{
											"value": "Vector<3>",
											"kind": "canonical"
										},
										{
											"value": "Vector",
											"kind": "link"
										},
										{
											"value": "3",
											"kind": "canonical"
										}
									],
									"template": "%1<%2>"
								}
							}
						]
					}
				]
			},
			{
				"id": "dVuq61k-9OWrqQnZiNLH8",
				"name": "PhysicalObject",
				"brief": "",
				"type": "ClassDoc",
				"description": "<p>Represents a physical-object and its intrinsic properties. This is useful for approximating\nextended objects as a uniform,...",
				"members": [
					{
						"id": "PNUmxrXlmd_nFrQFqcMHL",
						"name": "bounds",
						"brief": "",
						"scope": "instance",
						"type": "PropertyDoc",
						"description": "<p>The mesh enclosing this object. By default, it is a &quot;point&quot; object at the its own\nposition.</p>"
					},
					{
						"id": "nhxcuF_gM7xZAWGDEg6iB",
						"name": "interactions",
						"brief": "<p>All causal interactions with other objects</p>",
						"scope": "instance",
						"type": "PropertyDoc"
					},
					{
						"id": "MHNmYyKdfTXHfKtmUmsNB",
						"name": "mass",
						"brief": "<p>The mass of this object in kilograms.</p>",
						"defaultValue": "0",
						"scope": "instance",
						"type": "PropertyDoc"
					},
					{
						"id": "_Ihy0fLfzdiaYvA3mjvpW",
						"name": "position",
						"brief": "<p>The absolute position of this object's center of mass (in the universal reference frame)</p>",
						"defaultValue": "[0, 0, 0]",
						"scope": "instance",
						"type": "PropertyDoc"
					},
					{
						"id": "Fr8XV8QxsJYpR5XFJNocb",
						"name": "velocity",
						"brief": "<p>The absolute velocity of this object (in the universal reference frame)</p>",
						"defaultValue": "[0, 0, 0]",
						"scope": "instance",
						"type": "PropertyDoc"
					}
				]
			},
			{
				"id": "kUBmt4zub_HIkW960HzwG",
				"name": "Vector",
				"brief": "",
				"type": "ClassDoc",
				"extends": [
					"Array"
				],
				"members": [
					{
						"id": "lpKfpXbiKvLAfZ-yrUAOy",
						"name": "dimensions",
						"brief": "",
						"scope": "instance",
						"type": "PropertyDoc",
						"description": "<p>The no. of components of this vector</p>"
					},
					{
						"id": "sWzKJD0sMAgilzgqCISj6",
						"name": "add",
						"brief": "<p>Add <code>vec</code> to this</p>",
						"scope": "instance",
						"type": "MethodDoc",
						"params": [
							{
								"identifier": "vec",
								"optional": false,
								"dataType": {
									"tokens": [
										{
											"value": "Vector",
											"kind": "canonical"
										},
										{
											"value": "Vector",
											"kind": "link"
										}
									],
									"template": "%1"
								}
							}
						],
						"returns": []
					},
					{
						"id": "8dmZI-oBRzKjl2y3ccD7r",
						"name": "equalTo",
						"brief": "<p>Whether this and <code>vec</code> are equal vectors</p>",
						"scope": "instance",
						"type": "MethodDoc",
						"params": [
							{
								"identifier": "vec",
								"optional": false,
								"dataType": {
									"tokens": [
										{
											"value": "Vector",
											"kind": "canonical"
										},
										{
											"value": "Vector",
											"kind": "link"
										}
									],
									"template": "%1"
								}
							}
						],
						"returns": [
							{
								"dataType": {
									"tokens": [
										{
											"value": "boolean",
											"kind": "canonical"
										}
									],
									"template": "boolean"
								}
							}
						]
					},
					{
						"id": "X8wJd5BjIftZ11Fquc330",
						"name": "isCompat",
						"brief": "",
						"scope": "instance",
						"type": "MethodDoc",
						"description": "<p>Whether this and <code>vec</code> are compatible vectors (same dimensions)</p>",
						"params": [
							{
								"identifier": "vec",
								"optional": false,
								"dataType": {
									"tokens": [
										{
											"value": "Vector",
											"kind": "canonical"
										},
										{
											"value": "Vector",
											"kind": "link"
										}
									],
									"template": "%1"
								}
							}
						],
						"returns": [
							{
								"dataType": {
									"tokens": [
										{
											"value": "boolean",
											"kind": "canonical"
										}
									],
									"template": "boolean"
								}
							}
						]
					}
				]
			},
			{
				"id": "yfm_by3JHlp98ifzZgbV-",
				"name": "CAR_MAKES",
				"brief": "",
				"see": [
					"CarDealer"
				],
				"type": "EnumDoc",
				"description": "<p>These are the possible types of car makes.</p>",
				"members": [
					{
						"id": "mslMlM5-jw_iz_GwFtvRx",
						"name": "FERRARI",
						"brief": "",
						"access": "public",
						"scope": "static",
						"type": "PropertyDoc"
					},
					{
						"id": "4Skoz250miAOZpp3cOwPM",
						"name": "FORD",
						"brief": "",
						"access": "public",
						"scope": "static",
						"type": "PropertyDoc"
					},
					{
						"id": "DwSnsKRYRyyrYMaC3hyEj",
						"name": "GENERAL_MOTORS",
						"brief": "",
						"access": "public",
						"scope": "static",
						"type": "PropertyDoc"
					},
					{
						"id": "IgXA9kSjoLPEVv2QvCi6y",
						"name": "JAGUAR",
						"brief": "",
						"access": "public",
						"scope": "static",
						"type": "PropertyDoc"
					},
					{
						"id": "3Fbk-fqyx3dJgoHDG2luJ",
						"name": "KIA",
						"brief": "",
						"access": "public",
						"scope": "static",
						"type": "PropertyDoc"
					},
					{
						"id": "xrIpCXNvMU9caAIvet3zm",
						"name": "LAMBORGHINI",
						"brief": "",
						"access": "public",
						"scope": "static",
						"type": "PropertyDoc"
					},
					{
						"id": "fXg0q30C4SVzsiRETW9uI",
						"name": "TOYOTA",
						"brief": "",
						"access": "public",
						"scope": "static",
						"type": "PropertyDoc",
						"description": "<p>toyota make</p>"
					}
				]
			},
			{
				"id": "PJjV_2EuCxS2OMb_TSDym",
				"name": "VectorArray",
				"brief": "",
				"type": "TypedefDoc",
				"description": "<p>A 3D vector</p>",
				"members": [
					{
						"id": "ruOlnLeJ5_rotjPGpXrca",
						"name": "meta",
						"brief": "",
						"access": "public",
						"scope": "static",
						"type": "PropertyDoc"
					}
				]
			},
			{
				"id": "KuKMpGfJFIpk8CSNqatKv",
				"name": "CarDealer",
				"brief": "<p>This is the interface for dealing with car dealers.</p>",
				"type": "InterfaceDoc",
				"members": [
					{
						"id": "BfxIh7wenrkyZ0TJA6hhH",
						"name": "closeTransaction",
						"brief": "<p>Close transaction. If you respond to the counteroffer, then it won't be closed.</p>",
						"type": "MethodDoc",
						"params": [
							{
								"identifier": "trans",
								"optional": false,
								"dataType": {
									"tokens": [
										{
											"value": "Transaction",
											"kind": "canonical"
										},
										{
											"value": "Ts.Transaction",
											"kind": "link"
										}
									],
									"template": "%1"
								}
							},
							{
								"identifier": "counteroffer",
								"optional": false,
								"dataType": {
									"tokens": [
										{
											"value": "(...t: Transaction) => void",
											"kind": "canonical"
										},
										{
											"value": "Ts.Transaction",
											"kind": "link"
										}
									],
									"template": "(...t: %1) => void"
								}
							}
						],
						"returns": [
							{
								"dataType": {
									"tokens": [
										{
											"value": "trans is Transaction",
											"kind": "canonical"
										},
										{
											"value": "Ts.Transaction",
											"kind": "link"
										}
									],
									"template": "trans is %1"
								}
							}
						]
					},
					{
						"id": "wBs2tlx7-Ck2nZKS99oOW",
						"name": "initiateTransaction",
						"brief": "<p>Initiate a transaction/negotiation with a car dealer</p>",
						"type": "MethodDoc",
						"params": [
							{
								"identifier": "x",
								"optional": true,
								"description": "<p>info</p>",
								"dataType": {
									"tokens": [
										{
											"value": "object",
											"kind": "canonical"
										}
									],
									"template": "object"
								}
							}
						],
						"returns": [
							{
								"dataType": {
									"tokens": [
										{
											"value": "typeof Transaction",
											"kind": "canonical"
										},
										{
											"value": "Ts.Transaction",
											"kind": "link"
										}
									],
									"template": "typeof %1"
								}
							}
						]
					},
					{
						"id": "PoiLNTJl8fQxVFGxWRaZ6",
						"name": "offerAsk",
						"brief": "<p>Offer a price to sell the car.</p>",
						"type": "MethodDoc",
						"description": "<p>NOTE: This is invalid behaviour if you are the buyer in the transaction.</p>",
						"params": [
							{
								"identifier": "on",
								"optional": false,
								"dataType": {
									"tokens": [
										{
											"value": "Transaction",
											"kind": "canonical"
										},
										{
											"value": "Ts.Transaction",
											"kind": "link"
										}
									],
									"template": "%1"
								}
							},
							{
								"identifier": "counteroffer",
								"optional": true,
								"dataType": {
									"tokens": [
										{
											"value": "(t: Car) => void",
											"kind": "canonical"
										},
										{
											"value": "Car",
											"kind": "link"
										}
									],
									"template": "(t: %1) => void"
								}
							},
							{
								"identifier": "test",
								"optional": false,
								"dataType": {
									"tokens": [
										{
											"value": "{ [testProperty in keyof keyof] }: number",
											"kind": "canonical"
										}
									],
									"template": "{ [testProperty in keyof keyof] }: number"
								}
							}
						],
						"returns": [
							{
								"description": "<p>type inference is working</p>",
								"dataType": {
									"tokens": [
										{
											"value": "boolean",
											"kind": "canonical"
										}
									],
									"template": "boolean"
								}
							}
						]
					},
					{
						"id": "jFss7JZrViT7oLH8Gnodr",
						"name": "offerBid",
						"brief": "<p>Offer a price to buy the car.</p>",
						"type": "MethodDoc",
						"description": "<p>NOTE: This is invalid behaviour if you are the seller in the transaction.</p>",
						"params": [
							{
								"identifier": "on",
								"optional": true,
								"dataType": {
									"tokens": [
										{
											"value": "{ t : Transaction, [id: string]: Transaction[] }",
											"kind": "canonical"
										},
										{
											"value": "Ts.Transaction",
											"kind": "link"
										},
										{
											"value": "Ts.Transaction",
											"kind": "link"
										}
									],
									"template": "{ t : %1, [id: string]: %2[] }"
								}
							},
							{
								"identifier": "counteroffer",
								"optional": true,
								"variadic": true,
								"dataType": {
									"tokens": [
										{
											"value": "Car | Vector",
											"kind": "canonical"
										},
										{
											"value": "Car",
											"kind": "link"
										},
										{
											"value": "Vector",
											"kind": "link"
										}
									],
									"template": "%1 | %2"
								}
							}
						],
						"returns": [
							{
								"dataType": {
									"tokens": [
										{
											"value": "boolean",
											"kind": "canonical"
										}
									],
									"template": "boolean"
								}
							}
						]
					}
				]
			},
			{
				"id": "XE9XyFl8QEjdQVH-ssg1E",
				"name": "installBean",
				"brief": "<p>Install a bean class</p>",
				"type": "FunctionDoc",
				"params": [
					{
						"identifier": "bean",
						"optional": false,
						"description": "<p>the bean class</p>",
						"dataType": {
							"tokens": [
								{
									"value": "{ new (): Bean }",
									"kind": "canonical"
								},
								{
									"value": "Bean",
									"kind": "link"
								}
							],
							"template": "{ new (): %1 }"
						}
					}
				],
				"returns": [
					{
						"dataType": {
							"tokens": [
								{
									"value": "void",
									"kind": "canonical"
								}
							],
							"template": "void"
						}
					}
				]
			},
			{
				"id": "EE86mXuQ7-biaWal3FJ5V",
				"name": "isPhysicalObject",
				"brief": "",
				"authors": [
					"Shukant K. Pal &lt;shukantpal@outlook.com&gt;"
				],
				"copyright": "Shukant K. Pal (C) 2020",
				"license": "MIT",
				"see": [
					"PhysicalObject"
				],
				"since": "2020",
				"type": "FunctionDoc",
				"description": "<p>Checks whether the object is an instance of {@code PhysicalObject}.</p>",
				"params": [
					{
						"identifier": "object",
						"optional": false,
						"dataType": {
							"tokens": [
								{
									"value": "Object",
									"kind": "canonical"
								}
							],
							"template": "Object"
						}
					}
				],
				"returns": [
					{
						"dataType": {
							"tokens": [
								{
									"value": "boolean",
									"kind": "canonical"
								}
							],
							"template": "boolean"
						}
					}
				]
			}
		]
	},
	"registry": {
		"pkg-I2Q6FCjWFodo8G9XA5Hwi": {
			"uri": "/example-documentation/@webdoc/example.html"
		},
		"MqbG8Pkbh3de_HHZU9vfa": {
			"uri": "/example-documentation/@webdoc/example/PIXI.html"
		},
		"BSE4qMLiLDK5xinRM4zRK": {
			"uri": "/example-documentation/@webdoc/example/PIXI/utils.html"
		},
		"1Q1CJqePT7ITfr50juB8v": {
			"uri": "/example-documentation/@webdoc/example/PIXI/utils/skipHello.html"
		},
		"9EvpX8Qkt66-mkdPpfekq": {
			"uri": "/example-documentation/@webdoc/example/PIXI/TilingSprite.html"
		},
		"Aw1CIaXowfWi6ZSE7oS3P": {
			"uri": "/example-documentation/@webdoc/example/PIXI/TilingSprite.html#constructor"
		},
		"1i2MXxteQBQw1abHBz1nw": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractRenderer.html"
		},
		"itwHpp7OEMCyh2kjIT2-z": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractRenderer.html#backgroundColor"
		},
		"M2EJohSCM1Zqw3_NTCHpJ": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractRenderer.html#constructor"
		},
		"Pw0wqkG74hO04rfrKtthU": {
			"uri": "/example-documentation/@webdoc/example/PIXI/ObjectRenderer.html"
		},
		"OJy9q5-HDx1lyxbyfHn_f": {
			"uri": "/example-documentation/@webdoc/example/PIXI/ObjectRenderer.html#renderer"
		},
		"3hrL41XNJcovv2pZM1pzL": {
			"uri": "/example-documentation/@webdoc/example/PIXI/ObjectRenderer.html#constructor"
		},
		"CqQoc0zIzuVAGyo95AuUK": {
			"uri": "/example-documentation/@webdoc/example/PIXI/ObjectRenderer.html#destroy"
		},
		"uYbMjyIK1EJKBaBGyYTgr": {
			"uri": "/example-documentation/@webdoc/example/PIXI/ObjectRenderer.html#flush"
		},
		"VKyj1n5OgDPvwUFFYOFi4": {
			"uri": "/example-documentation/@webdoc/example/PIXI/ObjectRenderer.html#render"
		},
		"nos4hfWlPkGsye461rnYg": {
			"uri": "/example-documentation/@webdoc/example/PIXI/ObjectRenderer.html#start"
		},
		"OuXFOXWAOAWyRV2g-VIs7": {
			"uri": "/example-documentation/@webdoc/example/PIXI/ObjectRenderer.html#stop"
		},
		"5_jcLt63dYaO-TPWDZ_D1": {
			"uri": "/example-documentation/@webdoc/example/PIXI/System.html"
		},
		"X9n6bQxlFzfomxRops9q8": {
			"uri": "/example-documentation/@webdoc/example/PIXI/System.html#renderer"
		},
		"7Jyffo9q5JbJYat3oLJ3M": {
			"uri": "/example-documentation/@webdoc/example/PIXI/System.html#constructor"
		},
		"3enb1wm-e33wOHcuMi6nZ": {
			"uri": "/example-documentation/@webdoc/example/PIXI/System.html#destroy"
		},
		"b5nxN9_kGiQ4JRma08k3E": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html"
		},
		"DkuGZMLcQvBoxFtpVSboS": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#_drawCallPool"
		},
		"NhFsDVQcz6PlTnU9mi2y8": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#_textureArrayPool"
		},
		"E0QTTQX9k_29TAeRptaXD": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#bufferSize"
		},
		"Mu5xTSq1p8eLzEas3LeSN": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#MAX_TEXTURES"
		},
		"j_eRKhdbziqS2Xb--cyge": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#renderer"
		},
		"rVyNUulitcVjAZn8lAKRb": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#size"
		},
		"nXnN7MbCHNE3RDsJ3iO7_": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#state"
		},
		"JMT0vK0Vfk0L_z8sNX4p_": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#vertexSize"
		},
		"FOuTQWsHu5ZRZr_CtbL8G": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#_shader"
		},
		"OizyCo70aQqnWZlJ13Lzj": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#geometryClass"
		},
		"WQ0X_7qO44SLnzVBDF77b": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#shaderGenerator"
		},
		"ZB5GaU0FQHewCMMZ8BRCD": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#_aBuffers"
		},
		"D8eDHfMrVJxD-tCaBgC33": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#_bufferedElements"
		},
		"_8wQsafCTf7997M4KnbFJ": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#_bufferedTextures"
		},
		"2hHX1AtPaxTG9AVRFyIBv": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#_bufferSize"
		},
		"7be4Ld-38e-AGVP9KR6Qn": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#_flushId"
		},
		"xmB7zuK-HdLvH97JNQ4Nr": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#_iBuffers"
		},
		"a8y7wVlIh358pJeAkIJaQ": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#_indexCount"
		},
		"yQ5XF9XVP9NudDH1j1Bqg": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#_packedGeometries"
		},
		"XB6li2sP6Gd7C8zMZh1c6": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#_packedGeometryPoolSize"
		},
		"97mqGGp-S8hayuAHd5USy": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#_vertexCount"
		},
		"sw9wGZ7Dtjj3qgKJtaON3": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#bindAndClearTexArray"
		},
		"TNkhOW41yg7tzYxzxKsRI": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#buildDrawCalls"
		},
		"JA9Mu-O0a_sMIw6G4rA2x": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#constructor"
		},
		"8ISGoRobAGKVw3ab_RTwz": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#contextChange"
		},
		"GpLZk-w45yJ9EXPGCSt7d": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#destroy"
		},
		"znMNWkwCcXXpG6w-6ei1C": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#flush"
		},
		"DcqVHXugpwLbL_VbXrVfL": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#initFlushBuffers"
		},
		"4WmX6UkJ1c10AHLcAtKj2": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#onPrerender"
		},
		"WZUDOUYUUNZnViIyWCfVJ": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#packInterleavedGeometry"
		},
		"C_X7_3QkmKLoob_5VIonV": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#render"
		},
		"cYsK2f1zNZPzEEfUqMF7i": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#start"
		},
		"E_mXX16L-JICHri-PiUJO": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#stop"
		},
		"Ae_ow-QNAextzxX2KkkP0": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#getAttributeBuffer"
		},
		"jTKRxcUTBDzggkWXi1ZFt": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#getIndexBuffer"
		},
		"_1yV79F0qpj2SGgdD-vmI": {
			"uri": "/example-documentation/@webdoc/example/PIXI/TRANSFORM_MODE.html"
		},
		"Zcx1xvt0k86cT2JmsuCtQ": {
			"uri": "/example-documentation/@webdoc/example/PIXI/TRANSFORM_MODE.html#DYNAMIC"
		},
		"lxXNyU-5wiNGqdIdxsOwH": {
			"uri": "/example-documentation/@webdoc/example/PIXI/TRANSFORM_MODE.html#STATIC"
		},
		"pI50E-G2I7ts-HzDWvLFy": {
			"uri": "/example-documentation/@webdoc/example/PIXI/.html"
		},
		"9RpoSIG9RFRmZORSAajSX": {
			"uri": "/example-documentation/@webdoc/example/PIXI/.html#destroy"
		},
		"SziqIwEROwjnVm0NUyomy": {
			"uri": "/example-documentation/@webdoc/example/PIXI/.html#init"
		},
		"dRO0gkwhe0jJ_oJWSWlAm": {
			"uri": "/example-documentation/@webdoc/example/PIXI.html#SVG_SIZE"
		},
		"Oin3hspRllyBXMCdylG3W": {
			"uri": "/example-documentation/@webdoc/example/R.html"
		},
		"CCU4QAIygshdTsf0pgfX3": {
			"uri": "/example-documentation/@webdoc/example/R/Road.html"
		},
		"Vfx-V3tIztqxSzmunv7BL": {
			"uri": "/example-documentation/@webdoc/example/R/Road.html#constructor"
		},
		"X3xTMJq0ZGZlvgc-v2S3P": {
			"uri": "/example-documentation/@webdoc/example/R.html#DEFAULT_LANES"
		},
		"DdED8J_A1t265cAq734py": {
			"uri": "/example-documentation/@webdoc/example/R.html#buildRoad"
		},
		"NEE7E7ZAgx_MGV16poxHo": {
			"uri": "/example-documentation/@webdoc/example/Ts.html"
		},
		"Xj8ZzHSJV5z9EovYvAZSe": {
			"uri": "/example-documentation/@webdoc/example/Ts/Transaction.html"
		},
		"VlsJ26BsDuEtIWCOdlF9S": {
			"uri": "/example-documentation/@webdoc/example/Ts/Transaction.html#constructor"
		},
		"Qs4UhZV0qwKtiXbCL_Wqz": {
			"uri": "/example-documentation/@webdoc/example/Bean.html"
		},
		"1KDLuR8pcDE4MmEXa6Muk": {
			"uri": "/example-documentation/@webdoc/example/Bean.html#constructor"
		},
		"EqOX9nDUILuT3WvnSNZVN": {
			"uri": "/example-documentation/@webdoc/example/Bean.html#roast"
		},
		"87MG0VK7XGxBoMSA91ZLK": {
			"uri": "/example-documentation/@webdoc/example/Car.html"
		},
		"0GzQ25G6cQtf-WH1LbvQ-": {
			"uri": "/example-documentation/@webdoc/example/Car.html#DEFAULT_DRIVE_SHIFT"
		},
		"apU5aC9wBOw1n4HGLk_6V": {
			"uri": "/example-documentation/@webdoc/example/Car.html#bounds"
		},
		"7ry9L8KARkSAasjfWCbmt": {
			"uri": "/example-documentation/@webdoc/example/Car.html#interactions"
		},
		"vyKMFAyO-giOMK45vODej": {
			"uri": "/example-documentation/@webdoc/example/Car.html#mass"
		},
		"oi8zaWOkaMVr-6SdRAp1L": {
			"uri": "/example-documentation/@webdoc/example/Car.html#model"
		},
		"3DIarigAvqVBDlaaPY27X": {
			"uri": "/example-documentation/@webdoc/example/Car.html#position"
		},
		"piV4P-I0rSx0IUioS430O": {
			"uri": "/example-documentation/@webdoc/example/Car.html#velocity"
		},
		"N-4uy7Pte4ImW0deGunu6": {
			"uri": "/example-documentation/@webdoc/example/Car.html#vin"
		},
		"9Ibt8lfLtqU4Rm6GKqYgR": {
			"uri": "/example-documentation/@webdoc/example/Car.html#registerRetail"
		},
		"nE3Ef1cE6v419cjOTgFFT": {
			"uri": "/example-documentation/@webdoc/example/Car.html#constructor"
		},
		"fcMFl_Ah88iZuBzWBPbeT": {
			"uri": "/example-documentation/@webdoc/example/Car.html#onCrash"
		},
		"86iuntVTKQfA2nPJXXnM0": {
			"uri": "/example-documentation/@webdoc/example/CoffeeBean.html"
		},
		"VI4sK5sLFo0UinZPbHUdZ": {
			"uri": "/example-documentation/@webdoc/example/CoffeeBean.html#maturity"
		},
		"qqYDfVMChxJgqDkWTvzHE": {
			"uri": "/example-documentation/@webdoc/example/CoffeeBean.html#roasted"
		},
		"KKuDce6nSwlLvK-Mmtpeq": {
			"uri": "/example-documentation/@webdoc/example/CoffeeBean.html#constructor"
		},
		"Af-LHwq3MBl0cqmgcfwED": {
			"uri": "/example-documentation/@webdoc/example/CoffeeBean.html#roast"
		},
		"epO-p5FodWFgDzIjm1xQn": {
			"uri": "/example-documentation/@webdoc/example/ExampleFactory.html"
		},
		"iiCQcsIiuErPNBSBTpXkj": {
			"uri": "/example-documentation/@webdoc/example/ExampleFactory.html#getInstance"
		},
		"5wCWfTiFIKRkxRuxGR_Cy": {
			"uri": "/example-documentation/@webdoc/example/ExampleFactory.html#build"
		},
		"XUq9bV9rJg-6ajnyGodqm": {
			"uri": "/example-documentation/@webdoc/example/ExampleFactory.html#constructor"
		},
		"HkxvSSj-DjcVkk0GD_aJK": {
			"uri": "/example-documentation/@webdoc/example/ExampleFactory.html#getContext"
		},
		"ZYv2RhYArF1RYwIIRwYPM": {
			"uri": "/example-documentation/@webdoc/example/Gravity.html"
		},
		"TwjJvUZJRvRtYx4iF-A_G": {
			"uri": "/example-documentation/@webdoc/example/Gravity.html#constructor"
		},
		"HJ--5aOkyF9AAiUmcLnTh": {
			"uri": "/example-documentation/@webdoc/example/Gravity.html#force"
		},
		"yd3oQcF_9tlYJFDb40qNe": {
			"uri": "/example-documentation/@webdoc/example/PhysicalInteraction.html"
		},
		"jiefEIrHqLCRkIUJmsuxk": {
			"uri": "/example-documentation/@webdoc/example/PhysicalInteraction.html#GRAVITATIONAL_CONSTANT"
		},
		"HAk5Ob51QkCrK2ngdhC6P": {
			"uri": "/example-documentation/@webdoc/example/PhysicalInteraction.html#createGravity"
		},
		"ACWFAA6TS0uoRN8idZFcn": {
			"uri": "/example-documentation/@webdoc/example/PhysicalInteraction.html#force"
		},
		"dVuq61k-9OWrqQnZiNLH8": {
			"uri": "/example-documentation/@webdoc/example/PhysicalObject.html"
		},
		"PNUmxrXlmd_nFrQFqcMHL": {
			"uri": "/example-documentation/@webdoc/example/PhysicalObject.html#bounds"
		},
		"nhxcuF_gM7xZAWGDEg6iB": {
			"uri": "/example-documentation/@webdoc/example/PhysicalObject.html#interactions"
		},
		"MHNmYyKdfTXHfKtmUmsNB": {
			"uri": "/example-documentation/@webdoc/example/PhysicalObject.html#mass"
		},
		"_Ihy0fLfzdiaYvA3mjvpW": {
			"uri": "/example-documentation/@webdoc/example/PhysicalObject.html#position"
		},
		"Fr8XV8QxsJYpR5XFJNocb": {
			"uri": "/example-documentation/@webdoc/example/PhysicalObject.html#velocity"
		},
		"kUBmt4zub_HIkW960HzwG": {
			"uri": "/example-documentation/@webdoc/example/Vector.html"
		},
		"lpKfpXbiKvLAfZ-yrUAOy": {
			"uri": "/example-documentation/@webdoc/example/Vector.html#dimensions"
		},
		"sWzKJD0sMAgilzgqCISj6": {
			"uri": "/example-documentation/@webdoc/example/Vector.html#add"
		},
		"8dmZI-oBRzKjl2y3ccD7r": {
			"uri": "/example-documentation/@webdoc/example/Vector.html#equalTo"
		},
		"X8wJd5BjIftZ11Fquc330": {
			"uri": "/example-documentation/@webdoc/example/Vector.html#isCompat"
		},
		"yfm_by3JHlp98ifzZgbV-": {
			"uri": "/example-documentation/@webdoc/example/CAR_MAKES.html"
		},
		"mslMlM5-jw_iz_GwFtvRx": {
			"uri": "/example-documentation/@webdoc/example/CAR_MAKES.html#FERRARI"
		},
		"4Skoz250miAOZpp3cOwPM": {
			"uri": "/example-documentation/@webdoc/example/CAR_MAKES.html#FORD"
		},
		"DwSnsKRYRyyrYMaC3hyEj": {
			"uri": "/example-documentation/@webdoc/example/CAR_MAKES.html#GENERAL_MOTORS"
		},
		"IgXA9kSjoLPEVv2QvCi6y": {
			"uri": "/example-documentation/@webdoc/example/CAR_MAKES.html#JAGUAR"
		},
		"3Fbk-fqyx3dJgoHDG2luJ": {
			"uri": "/example-documentation/@webdoc/example/CAR_MAKES.html#KIA"
		},
		"xrIpCXNvMU9caAIvet3zm": {
			"uri": "/example-documentation/@webdoc/example/CAR_MAKES.html#LAMBORGHINI"
		},
		"fXg0q30C4SVzsiRETW9uI": {
			"uri": "/example-documentation/@webdoc/example/CAR_MAKES.html#TOYOTA"
		},
		"PJjV_2EuCxS2OMb_TSDym": {
			"uri": "/example-documentation/@webdoc/example/VectorArray.html"
		},
		"ruOlnLeJ5_rotjPGpXrca": {
			"uri": "/example-documentation/@webdoc/example/VectorArray.html#meta"
		},
		"KuKMpGfJFIpk8CSNqatKv": {
			"uri": "/example-documentation/@webdoc/example/CarDealer.html"
		},
		"BfxIh7wenrkyZ0TJA6hhH": {
			"uri": "/example-documentation/@webdoc/example/CarDealer.html#closeTransaction"
		},
		"wBs2tlx7-Ck2nZKS99oOW": {
			"uri": "/example-documentation/@webdoc/example/CarDealer.html#initiateTransaction"
		},
		"PoiLNTJl8fQxVFGxWRaZ6": {
			"uri": "/example-documentation/@webdoc/example/CarDealer.html#offerAsk"
		},
		"jFss7JZrViT7oLH8Gnodr": {
			"uri": "/example-documentation/@webdoc/example/CarDealer.html#offerBid"
		},
		"XE9XyFl8QEjdQVH-ssg1E": {
			"uri": "/example-documentation/@webdoc/example/installBean.html"
		},
		"EE86mXuQ7-biaWal3FJ5V": {
			"uri": "/example-documentation/@webdoc/example/isPhysicalObject.html"
		}
	}
}