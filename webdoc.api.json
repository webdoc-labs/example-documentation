{
	"version": "1.0.0",
	"metadata": {
		"linker": "(unsigned)",
		"siteDomain": "https://webdoc-labs.github.io",
		"siteRoot": "example-documentation"
	},
	"root": {
		"id": "root-DokojBW_tT3aWiEktTI3C",
		"name": "",
		"type": "RootDoc",
		"members": [
			{
				"id": "UdTLcDAQWSKwg-ryFyxW_",
				"name": "PIXI",
				"brief": "",
				"type": "NSDoc",
				"params": [],
				"returns": [],
				"extends": [],
				"implements": [],
				"members": [
					{
						"id": "y1oMFK1UcO0NaY3Sm9-ho",
						"name": "utils",
						"brief": "",
						"defaultValue": "false",
						"scope": "static",
						"type": "NSDoc",
						"params": [],
						"returns": [],
						"extends": [],
						"implements": [],
						"members": [
							{
								"id": "WKVTahlEnu0u2k_SzILHc",
								"name": "skipHello",
								"brief": "<p>Skips the hello message of renderers that are created after this is run.</p>",
								"deprecated": true,
								"type": "FunctionDoc",
								"params": [],
								"returns": [
									{
										"dataType": {
											"tokens": [
												{
													"value": "void",
													"kind": "canonical"
												}
											],
											"template": "void"
										}
									}
								],
								"extends": [],
								"implements": []
							}
						]
					},
					{
						"id": "BH280dbn58WCU1IZegrwg",
						"name": "TilingSprite",
						"brief": "",
						"deprecated": "since 5.0.0",
						"scope": "static",
						"see": [
							"PIXI.TilingSprite"
						],
						"type": "ClassDoc",
						"params": [],
						"returns": [],
						"extends": [],
						"implements": [],
						"members": [
							{
								"id": "NxdAeXJpqRfpd5LFro573",
								"name": "constructor",
								"brief": "",
								"access": "public",
								"scope": "instance",
								"type": "MethodDoc",
								"params": [],
								"returns": []
							}
						]
					},
					{
						"id": "7JTiykV6166fnzlGVSAQp",
						"name": "AbstractRenderer",
						"brief": "",
						"type": "ClassDoc",
						"params": [],
						"returns": [],
						"extends": [],
						"implements": [],
						"members": [
							{
								"id": "q6ClisOip07BlVetonQnQ",
								"name": "backgroundColor",
								"brief": "<p>The background color to fill if not transparent</p>",
								"scope": "instance",
								"type": "PropertyDoc",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "L3G6I4MYCc3grxQFvHL51",
								"name": "constructor",
								"brief": "",
								"access": "public",
								"scope": "instance",
								"type": "MethodDoc",
								"params": [],
								"returns": []
							}
						]
					},
					{
						"id": "cUJI9mPdhYwft-eZMoBjt",
						"name": "ObjectRenderer",
						"brief": "<p>Base for a common object renderer that can be used as a system renderer plugin.</p>",
						"type": "ClassDoc",
						"params": [],
						"returns": [],
						"extends": [
							"PIXI.System"
						],
						"implements": [],
						"members": [
							{
								"id": "emwOBZwPOutB2dkpTrfbo",
								"name": "renderer",
								"brief": "<p>The renderer this manager works for.</p>",
								"scope": "instance",
								"type": "PropertyDoc",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "WDAwDhYvqGL_qF9RH20Ho",
								"name": "constructor",
								"brief": "",
								"scope": "instance",
								"type": "MethodDoc",
								"params": [
									{
										"identifier": "renderer",
										"optional": false,
										"description": "<p>The renderer this manager works for.</p>",
										"dataType": {
											"tokens": [
												{
													"value": "PIXI.Renderer",
													"kind": "canonical"
												},
												{
													"value": "PIXI.Renderer",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									}
								],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "6KPf1vonKQAHe4vn05K6f",
								"name": "destroy",
								"brief": "",
								"scope": "instance",
								"type": "MethodDoc",
								"description": "<p>Generic destruction method that frees all resources. This\nshould be called by subclasses.</p>",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "zfW6WOFczTim6pOPbRoVf",
								"name": "flush",
								"brief": "",
								"scope": "instance",
								"type": "MethodDoc",
								"description": "<p>Stub method that should be used to empty the current\nbatch by rendering objects now.</p>",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "-kkTZqOMMYQPv4W6uuMS_",
								"name": "render",
								"brief": "",
								"scope": "instance",
								"type": "MethodDoc",
								"description": "<p>Keeps the object to render. It doesn't have to be\nrendered immediately.</p>",
								"params": [
									{
										"identifier": "object",
										"optional": false,
										"description": "<p>The object to render.</p>",
										"dataType": {
											"tokens": [
												{
													"value": "PIXI.DisplayObject",
													"kind": "canonical"
												},
												{
													"value": "PIXI.DisplayObject",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									}
								],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "MeOrm-1UEdE07WQUMZ0VN",
								"name": "start",
								"brief": "",
								"scope": "instance",
								"type": "MethodDoc",
								"description": "<p>Stub method that initializes any state required before\nrendering starts. It is different from the <code>prerender</code>\ns...",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "hg9B72PUOcsRwTJQw8HjE",
								"name": "stop",
								"brief": "",
								"scope": "instance",
								"type": "MethodDoc",
								"description": "<p>Stops the renderer. It should free up any state and\nbecome dormant.</p>",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							}
						]
					},
					{
						"id": "_T3T2MS5ExLOV-V8gLdCg",
						"name": "System",
						"brief": "<p>System is a base class used for extending systems used by the {@link PIXI.AbstractRenderer}.</p>",
						"see": [
							"PIXI.Renderer#addSystem"
						],
						"type": "ClassDoc",
						"description": "<p>Search more here: {@link https://www.google.com/}</p>",
						"params": [],
						"returns": [],
						"extends": [],
						"implements": [],
						"members": [
							{
								"id": "UIHQuQFIcv0za3FiH1xha",
								"name": "renderer",
								"brief": "<p>The renderer this manager works for.</p>",
								"scope": "instance",
								"type": "PropertyDoc",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "hn_UnSDroczSHclQU0GFr",
								"name": "constructor",
								"brief": "",
								"scope": "instance",
								"type": "MethodDoc",
								"params": [
									{
										"identifier": "renderer",
										"optional": false,
										"description": "<p>The renderer this manager works for.</p>",
										"dataType": {
											"tokens": [
												{
													"value": "PIXI.Renderer",
													"kind": "canonical"
												},
												{
													"value": "PIXI.Renderer",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									}
								],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "04oQMV0PnyyF6yjUGrFbC",
								"name": "destroy",
								"brief": "<p>Generic destroy methods to be overridden by the subclass</p>",
								"scope": "instance",
								"type": "MethodDoc",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							}
						]
					},
					{
						"id": "Ix1upJdEyP0K9AyGEzGj1",
						"name": "AbstractBatchRenderer",
						"brief": "<p>Renderer dedicated to drawing and batching sprites.</p>",
						"access": "protected",
						"readonly": true,
						"type": "ClassDoc",
						"description": "<p>This is the default batch renderer. It buffers objects\nwith texture-based geometries and renders them in\nbatches. It uploa...",
						"params": [],
						"returns": [],
						"extends": [
							"PIXI.ObjectRenderer"
						],
						"implements": [],
						"members": [
							{
								"id": "gqg4_sfxQyAGWLViPV3NV",
								"name": "_drawCallPool",
								"brief": "",
								"scope": "static",
								"type": "PropertyDoc",
								"description": "<p>Pool of <code>BatchDrawCall</code> objects that <code>flush</code> used\nto create &quot;batches&quot; of the objects being...",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "LoAjf-is0dqfnu2xKEC4p",
								"name": "_textureArrayPool",
								"brief": "",
								"scope": "static",
								"type": "PropertyDoc",
								"description": "<p>Pool of <code>BatchDrawCall</code> objects that <code>flush</code> used\nto create &quot;batches&quot; of the objects being...",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "CmU9pUU-ICJzuCCtuxok4",
								"name": "bufferSize",
								"brief": "",
								"scope": "instance",
								"type": "PropertyDoc",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "FXA6U-orP7SnaVmdq92JJ",
								"name": "MAX_TEXTURES",
								"brief": "",
								"defaultValue": "1",
								"readonly": true,
								"scope": "instance",
								"see": [
									"PIXI.AbstractBatchRenderer#contextChange"
								],
								"type": "PropertyDoc",
								"description": "<p>Maximum number of textures that can be uploaded to\nthe GPU under the current context. It is initialized\nproperly in <code>...",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "GaYIHZtaBw16a7FXrlguG",
								"name": "renderer",
								"brief": "<p>The renderer this manager works for.</p>",
								"scope": "instance",
								"type": "PropertyDoc",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "vnAsH6y4rbREMTkOPuZf2",
								"name": "size",
								"brief": "",
								"defaultValue": "settings.SPRITE_BATCH_SIZE * 4",
								"scope": "instance",
								"type": "PropertyDoc",
								"description": "<p>The number of bufferable objects before a flush\noccurs automatically.</p>",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "NEsW01T2UWj6Nob-yWj8W",
								"name": "state",
								"brief": "<p>The WebGL state in which this renderer will work.</p>",
								"readonly": true,
								"scope": "instance",
								"type": "PropertyDoc",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "5dQDQEd8qOr5W7lysT05J",
								"name": "vertexSize",
								"brief": "",
								"defaultValue": "undefined",
								"readonly": true,
								"scope": "instance",
								"type": "PropertyDoc",
								"description": "<p>Size of data being buffered per vertex in the\nattribute buffers (in floats). By default, the\nbatch-renderer plugin uses 6:...",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "bTb4zauqbFg_Qf2H143nw",
								"name": "_shader",
								"brief": "<p>This shader is generated by <code>this.shaderGenerator</code>.</p>",
								"access": "protected",
								"defaultValue": "undefined",
								"scope": "instance",
								"type": "PropertyDoc",
								"description": "<p>It is generated specifically to handle the required\nnumber of textures being batched together.</p>",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "DZ4rYu2ukfV5jOTpuOBY6",
								"name": "geometryClass",
								"brief": "",
								"access": "protected",
								"defaultValue": "PIXI.BatchGeometry",
								"scope": "instance",
								"type": "PropertyDoc",
								"description": "<p>The class that represents the geometry of objects\nthat are going to be batched with this.</p>",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "-DpLIIZPAJxXUALk8cGIz",
								"name": "shaderGenerator",
								"brief": "",
								"access": "protected",
								"defaultValue": "undefined",
								"scope": "instance",
								"type": "PropertyDoc",
								"description": "<p>This is used to generate a shader that can\ncolor each vertex based on a <code>aTextureId</code>\nattribute that points to a...",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "rAJ0a1PE6bZv5VT7WxN4g",
								"name": "_aBuffers",
								"brief": "",
								"access": "private",
								"scope": "instance",
								"see": [
									"PIXI.AbstractBatchRenderer#getAttributeBuffer"
								],
								"type": "PropertyDoc",
								"description": "<p>Pool of <code>ViewableBuffer</code> objects that are sorted in\norder of increasing size. The flush method uses\nthe buffer ...",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "BgzKfaa6BORGNpPMyzwLn",
								"name": "_bufferedElements",
								"brief": "<p>Buffer of objects that are yet to be rendered.</p>",
								"access": "private",
								"scope": "instance",
								"type": "PropertyDoc",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "a4lJ2WGEMLEbzPhAFsd0q",
								"name": "_bufferedTextures",
								"brief": "",
								"access": "private",
								"scope": "instance",
								"type": "PropertyDoc",
								"description": "<p>Data for texture batch builder, helps to save a bit of CPU on a pass</p>",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "ChMrrzrWztddcS32WHQW3",
								"name": "_bufferSize",
								"brief": "",
								"access": "private",
								"defaultValue": "0",
								"scope": "instance",
								"type": "PropertyDoc",
								"description": "<p>Number of elements that are buffered and are\nwaiting to be flushed.</p>",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "PMKnZafmsGTYTEBw_Fjuj",
								"name": "_flushId",
								"brief": "",
								"access": "private",
								"defaultValue": "0",
								"scope": "instance",
								"type": "PropertyDoc",
								"description": "<p>A flush may occur multiple times in a single\nframe. On iOS devices or when\n<code>settings.CAN_UPLOAD_SAME_BUFFER</code> is...",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "M7c9DFoLFfTfpOnMvKkgo",
								"name": "_iBuffers",
								"brief": "",
								"access": "private",
								"scope": "instance",
								"see": [
									"PIXI.AbstractBatchRenderer#getIndexBuffer"
								],
								"type": "PropertyDoc",
								"description": "<p>Pool of <code>Uint16Array</code> objects that are sorted in\norder of increasing size. The flush method uses\nthe buffer wit...",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "EEoR6gm69m03sLhxy3DDj",
								"name": "_indexCount",
								"brief": "",
								"access": "private",
								"defaultValue": "0",
								"scope": "instance",
								"type": "PropertyDoc",
								"description": "<p>Total count of all indices used by the currently\nbuffered objects.</p>",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "bON8U6rwx3QtfEQTSSdo5",
								"name": "_packedGeometries",
								"brief": "",
								"access": "private",
								"scope": "instance",
								"see": [
									"PIXI.AbstractBatchRenderer.contextChange"
								],
								"type": "PropertyDoc",
								"description": "<p>Pool of <code>this.geometryClass</code> geometry objects\nthat store buffers. They are used to pass data\nto the shader on e...",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "mB85ehsIR22N_vQ0pjvyJ",
								"name": "_packedGeometryPoolSize",
								"brief": "",
								"access": "private",
								"defaultValue": "2",
								"scope": "instance",
								"type": "PropertyDoc",
								"description": "<p>Size of <code>this._packedGeometries</code>. It can be expanded\nif more than <code>this._packedGeometryPoolSize</code> flu...",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "xYtMKkQKoxEctF897HnyN",
								"name": "_vertexCount",
								"brief": "",
								"access": "private",
								"defaultValue": "0",
								"scope": "instance",
								"type": "PropertyDoc",
								"description": "<p>Total count of all vertices used by the currently\nbuffered objects.</p>",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "PyL5xiT5P0UGmdcyqSP_L",
								"name": "bindAndClearTexArray",
								"brief": "<p>Bind textures for current rendering</p>",
								"scope": "instance",
								"type": "MethodDoc",
								"params": [
									{
										"identifier": "texArray",
										"optional": false,
										"dataType": {
											"tokens": [
												{
													"value": "PIXI.BatchTextureArray",
													"kind": "canonical"
												},
												{
													"value": "PIXI.BatchTextureArray",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									}
								],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "pJwqSsByBaFFglpR4U4uq",
								"name": "buildDrawCalls",
								"brief": "<p>Populating drawcalls for rendering</p>",
								"scope": "instance",
								"type": "MethodDoc",
								"params": [
									{
										"identifier": "texArray",
										"optional": false,
										"dataType": {
											"tokens": [
												{
													"value": "PIXI.BatchTextureArray",
													"kind": "canonical"
												},
												{
													"value": "PIXI.BatchTextureArray",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									},
									{
										"identifier": "start",
										"optional": false,
										"dataType": {
											"tokens": [
												{
													"value": "number",
													"kind": "canonical"
												},
												{
													"value": "number",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									},
									{
										"identifier": "finish",
										"optional": false,
										"dataType": {
											"tokens": [
												{
													"value": "number",
													"kind": "canonical"
												},
												{
													"value": "number",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									}
								],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "kkSFGlwS53d4B1qKZgX-u",
								"name": "constructor",
								"brief": "",
								"scope": "instance",
								"type": "MethodDoc",
								"description": "<p>This will hook onto the renderer's <code>contextChange</code>\nand <code>prerender</code> signals.</p>",
								"params": [
									{
										"identifier": "renderer",
										"optional": false,
										"description": "<p>The renderer this works for.</p>",
										"dataType": {
											"tokens": [
												{
													"value": "PIXI.Renderer",
													"kind": "canonical"
												},
												{
													"value": "PIXI.Renderer",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									}
								],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "e3uB4W7soxAaptNOuTIGr",
								"name": "contextChange",
								"brief": "<p>Handles the <code>contextChange</code> signal.</p>",
								"scope": "instance",
								"type": "MethodDoc",
								"description": "<p>It calculates <code>this.MAX_TEXTURES</code> and allocating the\npacked-geometry object pool.</p>",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "PPBJjEd2zIUnbwAO3oIAo",
								"name": "destroy",
								"brief": "<p>Destroys this <code>AbstractBatchRenderer</code>. It cannot be used again.</p>",
								"scope": "instance",
								"type": "MethodDoc",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "kgJiz0gO5xMhcU8bjf2PG",
								"name": "flush",
								"brief": "<p>Renders the content <em>now</em> and empties the current batch.</p>",
								"scope": "instance",
								"type": "MethodDoc",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "Zg_POEu5vEntb0-T17v5v",
								"name": "initFlushBuffers",
								"brief": "<p>Makes sure that static and dynamic flush pooled objects have correct dimensions</p>",
								"scope": "instance",
								"type": "MethodDoc",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "_J5G2erk1Bmdg3S6D5_wA",
								"name": "onPrerender",
								"brief": "<p>Handles the <code>prerender</code> signal.</p>",
								"scope": "instance",
								"type": "MethodDoc",
								"description": "<p>It ensures that flushes start from the first geometry\nobject again.</p>",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "quHNNhQdw1pCZ4bk6GEZ4",
								"name": "packInterleavedGeometry",
								"brief": "",
								"scope": "instance",
								"type": "MethodDoc",
								"description": "<p>Takes the four batching parameters of <code>element</code>, interleaves\nand pushes them into the batching attribute/index ...",
								"params": [
									{
										"identifier": "element",
										"optional": false,
										"description": "<p>element being rendered</p>",
										"dataType": {
											"tokens": [
												{
													"value": "PIXI.Sprite",
													"kind": "canonical"
												},
												{
													"value": "PIXI.Sprite",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									},
									{
										"identifier": "attributeBuffer",
										"optional": false,
										"description": "<p>attribute buffer.</p>",
										"dataType": {
											"tokens": [
												{
													"value": "PIXI.ViewableBuffer",
													"kind": "canonical"
												},
												{
													"value": "PIXI.ViewableBuffer",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									},
									{
										"identifier": "indexBuffer",
										"optional": false,
										"description": "<p>index buffer</p>",
										"dataType": {
											"tokens": [
												{
													"value": "Uint16Array",
													"kind": "canonical"
												},
												{
													"value": "Uint16Array",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									},
									{
										"identifier": "aIndex",
										"optional": false,
										"description": "<p>number of floats already in the attribute buffer</p>",
										"dataType": {
											"tokens": [
												{
													"value": "number",
													"kind": "canonical"
												},
												{
													"value": "number",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									},
									{
										"identifier": "iIndex",
										"optional": false,
										"description": "<p>number of indices already in <code>indexBuffer</code></p>",
										"dataType": {
											"tokens": [
												{
													"value": "number",
													"kind": "canonical"
												},
												{
													"value": "number",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									}
								],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "b2GSRvSdpwUO_5WaudqhA",
								"name": "render",
								"brief": "",
								"scope": "instance",
								"type": "MethodDoc",
								"description": "<p>Buffers the &quot;batchable&quot; object. It need not be rendered\nimmediately.</p>",
								"params": [
									{
										"identifier": "element",
										"optional": false,
										"description": "<p>the element to render when\nusing this renderer</p>",
										"dataType": {
											"tokens": [
												{
													"value": "PIXI.DisplayObject",
													"kind": "canonical"
												},
												{
													"value": "PIXI.DisplayObject",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									}
								],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "pcI6jzBQPnXhKYWO5ky9K",
								"name": "start",
								"brief": "<p>Starts a new sprite batch.</p>",
								"scope": "instance",
								"type": "MethodDoc",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "8L1SpqwFVT9Fl1dP2Rbur",
								"name": "stop",
								"brief": "<p>Stops and flushes the current batch.</p>",
								"scope": "instance",
								"type": "MethodDoc",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "l4DqwQs7ZDzhSKded7hUH",
								"name": "getAttributeBuffer",
								"brief": "",
								"access": "private",
								"scope": "instance",
								"type": "MethodDoc",
								"description": "<p>Fetches an attribute buffer from <code>this._aBuffers</code> that\ncan hold atleast <code>size</code> floats.</p>",
								"params": [
									{
										"identifier": "size",
										"optional": false,
										"description": "<p>minimum capacity required</p>",
										"dataType": {
											"tokens": [
												{
													"value": "number",
													"kind": "canonical"
												},
												{
													"value": "number",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									}
								],
								"returns": [
									{
										"description": "<ul>\n<li>buffer than can hold atleast <code>size</code> floats</li>\n</ul>",
										"dataType": {
											"tokens": [
												{
													"value": "ViewableBuffer",
													"kind": "canonical"
												},
												{
													"value": "ViewableBuffer",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									}
								],
								"extends": [],
								"implements": []
							},
							{
								"id": "EW_ooezxhrOAeV0Y79gRm",
								"name": "getIndexBuffer",
								"brief": "",
								"access": "private",
								"scope": "instance",
								"type": "MethodDoc",
								"description": "<p>Fetches an index buffer from <code>this._iBuffers</code> that can\nhas atleast <code>size</code> capacity.</p>",
								"params": [
									{
										"identifier": "size",
										"optional": false,
										"description": "<p>minimum required capacity</p>",
										"dataType": {
											"tokens": [
												{
													"value": "number",
													"kind": "canonical"
												},
												{
													"value": "number",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									}
								],
								"returns": [
									{
										"description": "<ul>\n<li>buffer that can fit <code>size</code>\nindices.</li>\n</ul>",
										"dataType": {
											"tokens": [
												{
													"value": "Uint16Array",
													"kind": "canonical"
												},
												{
													"value": "Uint16Array",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									}
								],
								"extends": [],
								"implements": []
							}
						]
					},
					{
						"id": "cwGvrGd5t_RnT5tBqcHZe",
						"name": "TRANSFORM_MODE",
						"brief": "<p>Constants that specify the transform type.</p>",
						"deprecated": "since 5.0.0",
						"scope": "static",
						"type": "EnumDoc",
						"params": [],
						"returns": [],
						"extends": [],
						"implements": [],
						"members": [
							{
								"id": "wtTvzvDAWb9-pa_rfiq2O",
								"name": "DYNAMIC",
								"brief": "",
								"access": "public",
								"scope": "static",
								"type": "PropertyDoc"
							},
							{
								"id": "fXWiGdaP16dHbHgNXRsr4",
								"name": "STATIC",
								"brief": "",
								"access": "public",
								"scope": "static",
								"type": "PropertyDoc"
							}
						]
					},
					{
						"id": "wlnjrqkQQLTvCm9O-x1RN",
						"name": "",
						"brief": "",
						"type": "TypedefDoc",
						"params": [],
						"returns": [],
						"extends": [],
						"implements": [],
						"members": [
							{
								"id": "Sl59QEWx9HyRI0h5w6pqG",
								"name": "destroy",
								"brief": "",
								"access": "public",
								"scope": "static",
								"type": "PropertyDoc",
								"description": "<p>Called when destroying Application, scoped to Application instance</p>"
							},
							{
								"id": "GqFqCT4rg8b-jIsOsbcz-",
								"name": "init",
								"brief": "",
								"access": "public",
								"scope": "static",
								"type": "PropertyDoc",
								"description": "<p>Called when Application is constructed, scoped to Application instance.\nPasses in <code>options</code> as the only argumen..."
							}
						]
					},
					{
						"id": "TLSdhAV1ffwAWv6aQwUOX",
						"name": "SVG_SIZE",
						"brief": "",
						"deprecated": "since 5.0.0",
						"scope": "static",
						"see": [
							"PIXI.resources.SVGResource.SVG_SIZE"
						],
						"type": "PropertyDoc",
						"params": [],
						"returns": [],
						"extends": [],
						"implements": []
					}
				]
			},
			{
				"id": "Olpd408wISCukV_XHO64m",
				"name": "R",
				"brief": "<p>A namespace dedicated to road manipulation utilites.</p>",
				"readonly": true,
				"type": "NSDoc",
				"params": [],
				"returns": [],
				"extends": [],
				"implements": [],
				"members": [
					{
						"id": "W9-8klghF1p29Bx-hkytm",
						"name": "Road",
						"brief": "<p>This is another road class.</p>",
						"type": "ClassDoc",
						"params": [],
						"returns": [],
						"extends": [],
						"implements": [],
						"members": [
							{
								"id": "JmWnCjmXfgwX358bjHSlP",
								"name": "constructor",
								"brief": "<p>This is another road class.</p>",
								"access": "public",
								"scope": "instance",
								"type": "MethodDoc",
								"params": [],
								"returns": []
							}
						]
					},
					{
						"id": "Poea-WfFrBKuQB2NX-suQ",
						"name": "DEFAULT_LANES",
						"brief": "<p>The default no. of lanes per one side of road</p>",
						"defaultValue": "4",
						"scope": "static",
						"type": "PropertyDoc",
						"params": [],
						"returns": [],
						"extends": [],
						"implements": []
					},
					{
						"id": "hvhm-AzDTz2r0iWGHbiT0",
						"name": "buildRoad",
						"brief": "<p>Builds a road</p>",
						"scope": "instance",
						"type": "MethodDoc",
						"params": [
							{
								"identifier": "address",
								"optional": false,
								"dataType": {
									"tokens": [
										{
											"value": "string",
											"kind": "canonical"
										}
									],
									"template": "string"
								}
							}
						],
						"returns": [
							{
								"dataType": {
									"tokens": [
										{
											"value": "ExampleFactory",
											"kind": "canonical"
										},
										{
											"value": "ExampleFactory",
											"kind": "link"
										}
									],
									"template": "%1"
								}
							}
						],
						"extends": [],
						"implements": []
					}
				]
			},
			{
				"id": "kk3dVCRsU6bYbrcEWUfQ5",
				"name": "Ts",
				"brief": "",
				"type": "NSDoc",
				"params": [],
				"returns": [],
				"extends": [],
				"implements": [],
				"members": [
					{
						"id": "U-Eq8hsmCXy-FqADD5l3V",
						"name": "Transaction",
						"brief": "",
						"type": "ClassDoc",
						"params": [],
						"returns": [],
						"extends": [],
						"implements": [],
						"members": [
							{
								"id": "8kim2DETL4anprIICThUq",
								"name": "constructor",
								"brief": "",
								"access": "public",
								"scope": "instance",
								"type": "MethodDoc",
								"params": [],
								"returns": []
							}
						]
					}
				]
			},
			{
				"id": "w51xf1-yz6yX55UHjulSK",
				"name": "Bean",
				"brief": "<p>Bean class</p>",
				"type": "ClassDoc",
				"params": [],
				"returns": [],
				"extends": [],
				"implements": [],
				"members": [
					{
						"id": "XKwCMk7T_pGVx_YtYWust",
						"name": "constructor",
						"brief": "<p>Bean class</p>",
						"access": "public",
						"scope": "instance",
						"type": "MethodDoc",
						"params": [],
						"returns": []
					},
					{
						"id": "Li2NcBwgspg7hyMXRzuf2",
						"name": "roast",
						"brief": "<p>(optional) roasting method</p>",
						"abstract": true,
						"scope": "instance",
						"type": "MethodDoc",
						"params": [],
						"returns": [
							{
								"dataType": {
									"tokens": [
										{
											"value": "void",
											"kind": "canonical"
										}
									],
									"template": "void"
								}
							}
						],
						"extends": [],
						"implements": []
					}
				]
			},
			{
				"id": "6iELSNyw3gGWfnh-_aPR6",
				"name": "Car",
				"brief": "<p><em>Simulation</em> for a automobile that can drive on a manifold surface.</p>",
				"type": "ClassDoc",
				"description": "<pre class=\"hljs\"><code><span class=\"hljs-keyword\">const</span> car = <span class=\"hljs-keyword\">new</span> Car({ <span class...",
				"params": [],
				"returns": [],
				"extends": [
					"PhysicalObject"
				],
				"implements": [],
				"members": [
					{
						"id": "sAwevtx8nExsRF_oCNeDs",
						"name": "DEFAULT_DRIVE_SHIFT",
						"brief": "",
						"defaultValue": "\"manual\"",
						"scope": "static",
						"type": "PropertyDoc",
						"params": [],
						"returns": [],
						"extends": [],
						"implements": []
					},
					{
						"id": "saNtS6sfFiu68O4XbLS03",
						"name": "bounds",
						"brief": "",
						"scope": "instance",
						"type": "PropertyDoc",
						"description": "<p>The mesh enclosing this object. By default, it is a &quot;point&quot; object at the its own\nposition.</p>",
						"params": [],
						"returns": [],
						"extends": [],
						"implements": []
					},
					{
						"id": "ZyIJCxmY2lijgKztvBXAW",
						"name": "interactions",
						"brief": "<p>All causal interactions with other objects</p>",
						"scope": "instance",
						"type": "PropertyDoc",
						"params": [],
						"returns": [],
						"extends": [],
						"implements": []
					},
					{
						"id": "SOGm7edWQBq11sAziEBX4",
						"name": "mass",
						"brief": "<p>The mass of this object in kilograms.</p>",
						"defaultValue": "0",
						"scope": "instance",
						"type": "PropertyDoc",
						"params": [],
						"returns": [],
						"extends": [],
						"implements": []
					},
					{
						"id": "_VZlXKYZDR-HkMTBP81Of",
						"name": "model",
						"brief": "",
						"access": "public",
						"defaultValue": "\"TEST\"",
						"scope": "instance",
						"type": "PropertyDoc",
						"params": [],
						"returns": [],
						"extends": [],
						"implements": []
					},
					{
						"id": "eIEG69THdoHYhzhxf54Di",
						"name": "position",
						"brief": "<p>The absolute position of this object's center of mass (in the universal reference frame)</p>",
						"defaultValue": "[0, 0, 0]",
						"scope": "instance",
						"type": "PropertyDoc",
						"params": [],
						"returns": [],
						"extends": [],
						"implements": []
					},
					{
						"id": "7V20SurABr19IpjYKb9KH",
						"name": "velocity",
						"brief": "<p>The absolute velocity of this object (in the universal reference frame)</p>",
						"defaultValue": "[0, 0, 0]",
						"scope": "instance",
						"type": "PropertyDoc",
						"params": [],
						"returns": [],
						"extends": [],
						"implements": []
					},
					{
						"id": "sdMzhyyL02RHBWxU7SxF2",
						"name": "vin",
						"brief": "",
						"defaultValue": "0",
						"scope": "instance",
						"type": "PropertyDoc",
						"params": [],
						"returns": [],
						"extends": [],
						"implements": []
					},
					{
						"id": "AUQVILrbXpN_iErWoO6Wn",
						"name": "registerRetail",
						"brief": "<p>Register a retail dealer for buying a car from</p>",
						"scope": "static",
						"type": "MethodDoc",
						"params": [
							{
								"identifier": "name",
								"optional": false,
								"dataType": {
									"tokens": [
										{
											"value": "string",
											"kind": "canonical"
										}
									],
									"template": "string"
								}
							}
						],
						"returns": [],
						"extends": [],
						"implements": []
					},
					{
						"id": "UWDbRgfO83oNx4OaPb70L",
						"name": "constructor",
						"brief": "",
						"scope": "instance",
						"type": "MethodDoc",
						"params": [
							{
								"identifier": "model",
								"optional": false,
								"default": "\"TEST\"",
								"dataType": {
									"tokens": [
										{
											"value": "string",
											"kind": "canonical"
										}
									],
									"template": "string"
								}
							}
						],
						"returns": [],
						"extends": [],
						"implements": []
					},
					{
						"id": "1X28BgitgtOGJXgnvNWh7",
						"name": "onCrash",
						"brief": "",
						"examples": [
							{
								"caption": "",
								"code": "\n car.onCrash((car) => console.logicalAssignment(car.id + \" crashed!\"))\n"
							}
						],
						"scope": "instance",
						"type": "MethodDoc",
						"params": [
							{
								"identifier": "callback",
								"optional": false,
								"dataType": {
									"tokens": [
										{
											"value": "Function",
											"kind": "canonical"
										}
									],
									"template": "Function"
								}
							},
							{
								"identifier": "callback.name",
								"dataType": {
									"tokens": [
										{
											"value": "string",
											"kind": "canonical"
										}
									],
									"template": "string"
								}
							}
						],
						"returns": [],
						"extends": [],
						"implements": []
					}
				]
			},
			{
				"id": "fDDjp63rZMAnXz5Aob8oc",
				"name": "CoffeeBean",
				"brief": "<p>This class illustrates how you can create a Java-bean like component in JavaScript</p>",
				"type": "ClassDoc",
				"params": [],
				"returns": [],
				"extends": [
					"Bean"
				],
				"implements": [],
				"members": [
					{
						"id": "vlAaC51_oyU-5Yds5npfj",
						"name": "maturity",
						"brief": "",
						"scope": "instance",
						"type": "PropertyDoc",
						"params": [],
						"returns": [],
						"extends": [],
						"implements": []
					},
					{
						"id": "OHW8wa4EH4xVu4H6LaIQf",
						"name": "roasted",
						"brief": "",
						"scope": "instance",
						"type": "PropertyDoc",
						"params": [],
						"returns": [],
						"extends": [],
						"implements": []
					},
					{
						"id": "PilZ9v7yILbBECcRu6cz2",
						"name": "constructor",
						"brief": "",
						"scope": "instance",
						"type": "MethodDoc",
						"params": [
							{
								"identifier": "options",
								"optional": true,
								"dataType": {
									"tokens": [
										{
											"value": "object",
											"kind": "canonical"
										}
									],
									"template": "object"
								}
							},
							{
								"identifier": "options.roasted",
								"optional": true,
								"description": "<p>whether the bean is <code>roasted</code></p>",
								"dataType": {
									"tokens": [
										{
											"value": "boolean",
											"kind": "canonical"
										}
									],
									"template": "boolean"
								}
							},
							{
								"identifier": "options.maturity",
								"optional": true,
								"dataType": {
									"tokens": [
										{
											"value": "number",
											"kind": "canonical"
										},
										{
											"value": "number",
											"kind": "canonical"
										}
									],
									"template": "%1"
								}
							}
						],
						"returns": [],
						"extends": [],
						"implements": []
					},
					{
						"id": "stqDYWJSJ-3nyAcNzKS_l",
						"name": "roast",
						"brief": "<p>Roast this coffee bean.</p>",
						"scope": "instance",
						"type": "MethodDoc",
						"description": "<p>NOTE: You cannot re-roast coffee beans and an error will be thrown if you try to\nroast a roasted coffee bean.</p>",
						"params": [],
						"returns": [],
						"extends": [],
						"implements": []
					}
				]
			},
			{
				"id": "s6BnpwML7gxYzbhLB-8AP",
				"name": "ExampleFactory",
				"type": "ClassDoc",
				"description": "<p>{@link ExampleFactory} can be used to build examples.</p>\n<pre class=\"hljs\"><code><span class=\"hljs-comment\">// <span clas...",
				"params": [
					{
						"identifier": "context",
						"optional": true,
						"default": "null",
						"description": "<p>A custom context for the factory.</p>",
						"dataType": {
							"tokens": [
								{
									"value": "ExampleContext",
									"kind": "canonical"
								},
								{
									"value": "ExampleContext",
									"kind": "canonical"
								}
							],
							"template": "%1"
						}
					}
				],
				"returns": [],
				"extends": [],
				"implements": [],
				"members": [
					{
						"id": "iyHgiRwUAlPkOZK2fIX_S",
						"name": "getInstance",
						"brief": "<p>Gets a lazily-initialized, shared singleton instance of {@link ExampleFactory}.</p>",
						"scope": "static",
						"type": "MethodDoc",
						"params": [],
						"returns": [
							{
								"dataType": {
									"tokens": [
										{
											"value": "ExampleFactory",
											"kind": "canonical"
										},
										{
											"value": "ExampleFactory",
											"kind": "link"
										}
									],
									"template": "%1"
								}
							}
						],
						"extends": [],
						"implements": []
					},
					{
						"id": "gSuFmw6cqSa-P0uoUl3uQ",
						"name": "build",
						"brief": "<p>Build the road.</p>",
						"scope": "instance",
						"type": "MethodDoc",
						"params": [],
						"returns": [],
						"extends": [],
						"implements": []
					},
					{
						"id": "FQiC7Rd_bC3-iA6501RgP",
						"name": "constructor",
						"brief": "<p>This constructor should only be used for custom contexts.</p>",
						"access": "public",
						"scope": "instance",
						"type": "MethodDoc",
						"params": [
							{
								"identifier": "context",
								"optional": true,
								"default": "null",
								"description": "<p>A custom context for the factory.</p>",
								"dataType": {
									"tokens": [
										{
											"value": "ExampleContext",
											"kind": "canonical"
										},
										{
											"value": "ExampleContext",
											"kind": "canonical"
										}
									],
									"template": "%1"
								}
							}
						],
						"returns": []
					},
					{
						"id": "PJ7fxJS13b-Jj5LdZsqPk",
						"name": "getContext",
						"brief": "<p>Get the context of this factory.</p>",
						"scope": "instance",
						"type": "MethodDoc",
						"params": [],
						"returns": [
							{
								"dataType": {
									"tokens": [
										{
											"value": "ExampleContext",
											"kind": "canonical"
										},
										{
											"value": "ExampleContext",
											"kind": "canonical"
										}
									],
									"template": "%1"
								}
							}
						],
						"extends": [],
						"implements": []
					}
				]
			},
			{
				"id": "lKCbok3iDFSS_WBpgTwYp",
				"name": "Gravity",
				"brief": "<p>This class shouldn't be documented!</p>",
				"type": "ClassDoc",
				"params": [],
				"returns": [],
				"extends": [
					"PhysicalInteraction"
				],
				"implements": [],
				"members": [
					{
						"id": "3WFiHxwtkfEbkWdplrsIZ",
						"name": "constructor",
						"brief": "<p>This class shouldn't be documented!</p>",
						"access": "public",
						"scope": "instance",
						"type": "MethodDoc",
						"params": [],
						"returns": []
					},
					{
						"id": "DUAylJ8QjI9nxGJgkrWE8",
						"name": "force",
						"brief": "<p>This method should be overriden to calculate the force at the given instant.</p>",
						"scope": "instance",
						"type": "MethodDoc",
						"params": [],
						"returns": [
							{
								"dataType": {
									"tokens": [
										{
											"value": "Vector<3>",
											"kind": "canonical"
										},
										{
											"value": "Vector",
											"kind": "link"
										},
										{
											"value": "3",
											"kind": "canonical"
										}
									],
									"template": "%1<%2>"
								}
							}
						],
						"extends": [],
						"implements": []
					}
				]
			},
			{
				"id": "_MKMru31f5YR-XrpKJ0tE",
				"name": "PhysicalInteraction",
				"brief": "",
				"readonly": true,
				"type": "ClassDoc",
				"description": "<p>A physical interaction is a force causes object positions to be re-evaulated each frame based on\nforce's magnitude.</p>",
				"params": [],
				"returns": [],
				"extends": [],
				"implements": [],
				"members": [
					{
						"id": "eVCqyLGcIzp4rZC8wRCoB",
						"name": "GRAVITATIONAL_CONSTANT",
						"brief": "",
						"defaultValue": "1",
						"scope": "static",
						"type": "PropertyDoc",
						"params": [],
						"returns": [],
						"extends": [],
						"implements": []
					},
					{
						"id": "DHVGN5ORBLzGzb_2nZG-L",
						"name": "createGravity",
						"brief": "<p>Creates a graviational force</p>",
						"scope": "static",
						"type": "MethodDoc",
						"params": [
							{
								"identifier": "objects",
								"optional": false,
								"dataType": {
									"tokens": [
										{
											"value": "Tuple<PhysicalObject, 2>",
											"kind": "canonical"
										},
										{
											"value": "Tuple",
											"kind": "canonical"
										},
										{
											"value": "PhysicalObject",
											"kind": "link"
										},
										{
											"value": "2",
											"kind": "canonical"
										}
									],
									"template": "%1<%3, %2>"
								}
							}
						],
						"returns": [
							{
								"dataType": {
									"tokens": [
										{
											"value": "PhysicalInteraction",
											"kind": "canonical"
										},
										{
											"value": "PhysicalInteraction",
											"kind": "link"
										}
									],
									"template": "%1"
								}
							}
						],
						"extends": [],
						"implements": []
					},
					{
						"id": "osanftF9lL_9k9K3Wdtro",
						"name": "force",
						"brief": "<p>This method should be overriden to calculate the force at the given instant.</p>",
						"scope": "instance",
						"type": "MethodDoc",
						"params": [],
						"returns": [
							{
								"dataType": {
									"tokens": [
										{
											"value": "Vector<3>",
											"kind": "canonical"
										},
										{
											"value": "Vector",
											"kind": "link"
										},
										{
											"value": "3",
											"kind": "canonical"
										}
									],
									"template": "%1<%2>"
								}
							}
						],
						"extends": [],
						"implements": []
					}
				]
			},
			{
				"id": "sCOp8alenkknSRHfZZLIk",
				"name": "PhysicalObject",
				"brief": "",
				"type": "ClassDoc",
				"description": "<p>Represents a physical-object and its intrinsic properties. This is useful for approximating\nextended objects as a uniform,...",
				"params": [],
				"returns": [],
				"extends": [],
				"implements": [],
				"members": [
					{
						"id": "WDDNCdMQSwgZwjUdEfqyR",
						"name": "bounds",
						"brief": "",
						"scope": "instance",
						"type": "PropertyDoc",
						"description": "<p>The mesh enclosing this object. By default, it is a &quot;point&quot; object at the its own\nposition.</p>",
						"params": [],
						"returns": [],
						"extends": [],
						"implements": []
					},
					{
						"id": "Q877KaUg-oDc6y4Qt-r5J",
						"name": "interactions",
						"brief": "<p>All causal interactions with other objects</p>",
						"scope": "instance",
						"type": "PropertyDoc",
						"params": [],
						"returns": [],
						"extends": [],
						"implements": []
					},
					{
						"id": "14IXQ_S9cm2pqlJfWJ1v9",
						"name": "mass",
						"brief": "<p>The mass of this object in kilograms.</p>",
						"defaultValue": "0",
						"scope": "instance",
						"type": "PropertyDoc",
						"params": [],
						"returns": [],
						"extends": [],
						"implements": []
					},
					{
						"id": "iU9lJcWx0K_SKIlueOHlC",
						"name": "position",
						"brief": "<p>The absolute position of this object's center of mass (in the universal reference frame)</p>",
						"defaultValue": "[0, 0, 0]",
						"scope": "instance",
						"type": "PropertyDoc",
						"params": [],
						"returns": [],
						"extends": [],
						"implements": []
					},
					{
						"id": "B3cMSXEAbbTUPlVROEHi-",
						"name": "velocity",
						"brief": "<p>The absolute velocity of this object (in the universal reference frame)</p>",
						"defaultValue": "[0, 0, 0]",
						"scope": "instance",
						"type": "PropertyDoc",
						"params": [],
						"returns": [],
						"extends": [],
						"implements": []
					}
				]
			},
			{
				"id": "qh0e-Rmmv0_Djyn_REaHt",
				"name": "Vector",
				"brief": "",
				"type": "ClassDoc",
				"params": [],
				"returns": [],
				"extends": [
					"Array"
				],
				"implements": [],
				"members": [
					{
						"id": "KmlaTfZjCq1mSpFK9UcXb",
						"name": "dimensions",
						"brief": "",
						"scope": "instance",
						"type": "PropertyDoc",
						"description": "<p>The no. of components of this vector</p>",
						"params": [],
						"returns": [],
						"extends": [],
						"implements": []
					},
					{
						"id": "eDHlTPM17pNUd2Y1Ls0ae",
						"name": "add",
						"brief": "<p>Add <code>vec</code> to this</p>",
						"scope": "instance",
						"type": "MethodDoc",
						"params": [
							{
								"identifier": "vec",
								"optional": false,
								"dataType": {
									"tokens": [
										{
											"value": "Vector",
											"kind": "canonical"
										},
										{
											"value": "Vector",
											"kind": "link"
										}
									],
									"template": "%1"
								}
							}
						],
						"returns": [],
						"extends": [],
						"implements": []
					},
					{
						"id": "lKEN8yVzHoOodlIKnU97s",
						"name": "equalTo",
						"brief": "<p>Whether this and <code>vec</code> are equal vectors</p>",
						"scope": "instance",
						"type": "MethodDoc",
						"params": [
							{
								"identifier": "vec",
								"optional": false,
								"dataType": {
									"tokens": [
										{
											"value": "Vector",
											"kind": "canonical"
										},
										{
											"value": "Vector",
											"kind": "link"
										}
									],
									"template": "%1"
								}
							}
						],
						"returns": [
							{
								"dataType": {
									"tokens": [
										{
											"value": "boolean",
											"kind": "canonical"
										}
									],
									"template": "boolean"
								}
							}
						],
						"extends": [],
						"implements": []
					},
					{
						"id": "dftYxZwQko_4DtOoqW_cb",
						"name": "isCompat",
						"brief": "",
						"scope": "instance",
						"type": "MethodDoc",
						"description": "<p>Whether this and <code>vec</code> are compatible vectors (same dimensions)</p>",
						"params": [
							{
								"identifier": "vec",
								"optional": false,
								"dataType": {
									"tokens": [
										{
											"value": "Vector",
											"kind": "canonical"
										},
										{
											"value": "Vector",
											"kind": "link"
										}
									],
									"template": "%1"
								}
							}
						],
						"returns": [
							{
								"dataType": {
									"tokens": [
										{
											"value": "boolean",
											"kind": "canonical"
										}
									],
									"template": "boolean"
								}
							}
						],
						"extends": [],
						"implements": []
					}
				]
			},
			{
				"id": "jH-sGhwlzzAaLHdiTPdnW",
				"name": "CAR_MAKES",
				"brief": "",
				"see": [
					"CarDealer"
				],
				"type": "EnumDoc",
				"description": "<p>These are the possible types of car makes.</p>",
				"params": [],
				"returns": [],
				"extends": [],
				"implements": [],
				"members": [
					{
						"id": "uYqOpOH-LVnnwXtaTm2YH",
						"name": "FERRARI",
						"brief": "",
						"access": "public",
						"scope": "static",
						"type": "PropertyDoc"
					},
					{
						"id": "hdxaiabplC4Ryo8YzU8pI",
						"name": "FORD",
						"brief": "",
						"access": "public",
						"scope": "static",
						"type": "PropertyDoc"
					},
					{
						"id": "Tf11dPZsjR8OzaulL7yUB",
						"name": "GENERAL_MOTORS",
						"brief": "",
						"access": "public",
						"scope": "static",
						"type": "PropertyDoc"
					},
					{
						"id": "L7F-S_9OZvdXlvv47M_R4",
						"name": "JAGUAR",
						"brief": "",
						"access": "public",
						"scope": "static",
						"type": "PropertyDoc"
					},
					{
						"id": "-gkm28QM1RDA8PcrzIAsm",
						"name": "KIA",
						"brief": "",
						"access": "public",
						"scope": "static",
						"type": "PropertyDoc"
					},
					{
						"id": "mQ0LMrcwEfe7VG9kWP1cP",
						"name": "LAMBORGHINI",
						"brief": "",
						"access": "public",
						"scope": "static",
						"type": "PropertyDoc"
					},
					{
						"id": "qcTxujFS_008jatajhzIb",
						"name": "TOYOTA",
						"brief": "",
						"access": "public",
						"scope": "static",
						"type": "PropertyDoc",
						"description": "<p>toyota make</p>"
					}
				]
			},
			{
				"id": "Pzhpl9eu7vd0VLpGj0XMF",
				"name": "VectorArray",
				"brief": "",
				"type": "TypedefDoc",
				"description": "<p>A 3D vector</p>",
				"params": [],
				"returns": [],
				"extends": [],
				"implements": [],
				"members": [
					{
						"id": "5AGU2WI8s0NmfsvU8XGIE",
						"name": "meta",
						"brief": "",
						"access": "public",
						"scope": "static",
						"type": "PropertyDoc"
					}
				]
			},
			{
				"id": "PorYMD4cUYgouWoej7dvA",
				"name": "CarDealer",
				"brief": "<p>This is the interface for dealing with car dealers.</p>",
				"type": "InterfaceDoc",
				"params": [],
				"returns": [],
				"extends": [],
				"implements": [],
				"members": [
					{
						"id": "SbcbeECh4n3Ytx4xVGNp9",
						"name": "closeTransaction",
						"brief": "<p>Close transaction. If you respond to the counteroffer, then it won't be closed.</p>",
						"type": "MethodDoc",
						"params": [
							{
								"identifier": "trans",
								"optional": false,
								"dataType": {
									"tokens": [
										{
											"value": "Transaction",
											"kind": "canonical"
										},
										{
											"value": "Ts.Transaction",
											"kind": "link"
										}
									],
									"template": "%1"
								}
							},
							{
								"identifier": "counteroffer",
								"optional": false,
								"dataType": {
									"tokens": [
										{
											"value": "(...t: Transaction) => void",
											"kind": "canonical"
										},
										{
											"value": "Ts.Transaction",
											"kind": "link"
										}
									],
									"template": "(...t: %1) => void"
								}
							}
						],
						"returns": [
							{
								"dataType": {
									"tokens": [
										{
											"value": "trans is Transaction",
											"kind": "canonical"
										},
										{
											"value": "Ts.Transaction",
											"kind": "link"
										}
									],
									"template": "trans is %1"
								}
							}
						],
						"extends": [],
						"implements": []
					},
					{
						"id": "XvwlP-jtmPXXzKBoT8a48",
						"name": "initiateTransaction",
						"brief": "<p>Initiate a transaction/negotiation with a car dealer</p>",
						"type": "MethodDoc",
						"params": [
							{
								"identifier": "x",
								"optional": true,
								"description": "<p>info</p>",
								"dataType": {
									"tokens": [
										{
											"value": "object",
											"kind": "canonical"
										}
									],
									"template": "object"
								}
							}
						],
						"returns": [
							{
								"dataType": {
									"tokens": [
										{
											"value": "typeof Transaction",
											"kind": "canonical"
										},
										{
											"value": "Ts.Transaction",
											"kind": "link"
										}
									],
									"template": "typeof %1"
								}
							}
						],
						"extends": [],
						"implements": []
					},
					{
						"id": "m1kY3itvgEQQi_ZC5vKRs",
						"name": "offerAsk",
						"brief": "<p>Offer a price to sell the car.</p>",
						"type": "MethodDoc",
						"description": "<p>NOTE: This is invalid behaviour if you are the buyer in the transaction.</p>",
						"params": [
							{
								"identifier": "on",
								"optional": false,
								"dataType": {
									"tokens": [
										{
											"value": "Transaction",
											"kind": "canonical"
										},
										{
											"value": "Ts.Transaction",
											"kind": "link"
										}
									],
									"template": "%1"
								}
							},
							{
								"identifier": "counteroffer",
								"optional": true,
								"dataType": {
									"tokens": [
										{
											"value": "(t: Car) => void",
											"kind": "canonical"
										},
										{
											"value": "Car",
											"kind": "link"
										}
									],
									"template": "(t: %1) => void"
								}
							},
							{
								"identifier": "test",
								"optional": false,
								"dataType": {
									"tokens": [
										{
											"value": "{ [testProperty in keyof keyof] }: number",
											"kind": "canonical"
										}
									],
									"template": "{ [testProperty in keyof keyof] }: number"
								}
							}
						],
						"returns": [
							{
								"description": "<p>type inference is working</p>",
								"dataType": {
									"tokens": [
										{
											"value": "boolean",
											"kind": "canonical"
										}
									],
									"template": "boolean"
								}
							}
						],
						"extends": [],
						"implements": []
					},
					{
						"id": "ezK4x1PJu20eqzgskVGsC",
						"name": "offerBid",
						"brief": "<p>Offer a price to buy the car.</p>",
						"type": "MethodDoc",
						"description": "<p>NOTE: This is invalid behaviour if you are the seller in the transaction.</p>",
						"params": [
							{
								"identifier": "on",
								"optional": true,
								"dataType": {
									"tokens": [
										{
											"value": "{ t : Transaction, [id: string]: Transaction[] }",
											"kind": "canonical"
										},
										{
											"value": "Ts.Transaction",
											"kind": "link"
										},
										{
											"value": "Ts.Transaction",
											"kind": "link"
										}
									],
									"template": "{ t : %1, [id: string]: %2[] }"
								}
							},
							{
								"identifier": "counteroffer",
								"optional": true,
								"variadic": true,
								"dataType": {
									"tokens": [
										{
											"value": "Car | Vector",
											"kind": "canonical"
										},
										{
											"value": "Car",
											"kind": "link"
										},
										{
											"value": "Vector",
											"kind": "link"
										}
									],
									"template": "%1 | %2"
								}
							}
						],
						"returns": [
							{
								"dataType": {
									"tokens": [
										{
											"value": "boolean",
											"kind": "canonical"
										}
									],
									"template": "boolean"
								}
							}
						],
						"extends": [],
						"implements": []
					}
				]
			},
			{
				"id": "u8t27SlFTK0fC2QJsrp3r",
				"name": "installBean",
				"brief": "<p>Install a bean class</p>",
				"type": "FunctionDoc",
				"params": [
					{
						"identifier": "bean",
						"optional": false,
						"description": "<p>the bean class</p>",
						"dataType": {
							"tokens": [
								{
									"value": "{ new (): Bean }",
									"kind": "canonical"
								},
								{
									"value": "Bean",
									"kind": "link"
								}
							],
							"template": "{ new (): %1 }"
						}
					}
				],
				"returns": [
					{
						"dataType": {
							"tokens": [
								{
									"value": "void",
									"kind": "canonical"
								}
							],
							"template": "void"
						}
					}
				],
				"extends": [],
				"implements": []
			},
			{
				"id": "rEU50poPNvf9IGEabuQjk",
				"name": "isPhysicalObject",
				"brief": "",
				"authors": [
					"Shukant K. Pal &lt;shukantpal@outlook.com&gt;"
				],
				"copyright": "Shukant K. Pal (C) 2020",
				"license": "MIT",
				"see": [
					"PhysicalObject"
				],
				"since": "2020",
				"type": "FunctionDoc",
				"description": "<p>Checks whether the object is an instance of {@code PhysicalObject}.</p>",
				"params": [
					{
						"identifier": "object",
						"optional": false,
						"dataType": {
							"tokens": [
								{
									"value": "Object",
									"kind": "canonical"
								}
							],
							"template": "Object"
						}
					}
				],
				"returns": [
					{
						"dataType": {
							"tokens": [
								{
									"value": "boolean",
									"kind": "canonical"
								}
							],
							"template": "boolean"
						}
					}
				],
				"extends": [],
				"implements": []
			}
		]
	},
	"registry": {
		"pkg-IuQXsIvPeV8AjaqiGNNF2": {
			"uri": "/example-documentation/@webdoc/example.html"
		},
		"UdTLcDAQWSKwg-ryFyxW_": {
			"uri": "/example-documentation/@webdoc/example/PIXI.html"
		},
		"y1oMFK1UcO0NaY3Sm9-ho": {
			"uri": "/example-documentation/@webdoc/example/PIXI/utils.html"
		},
		"WKVTahlEnu0u2k_SzILHc": {
			"uri": "/example-documentation/@webdoc/example/PIXI/utils/skipHello.html"
		},
		"BH280dbn58WCU1IZegrwg": {
			"uri": "/example-documentation/@webdoc/example/PIXI/TilingSprite.html"
		},
		"NxdAeXJpqRfpd5LFro573": {
			"uri": "/example-documentation/@webdoc/example/PIXI/TilingSprite.html#constructor"
		},
		"7JTiykV6166fnzlGVSAQp": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractRenderer.html"
		},
		"q6ClisOip07BlVetonQnQ": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractRenderer.html#backgroundColor"
		},
		"L3G6I4MYCc3grxQFvHL51": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractRenderer.html#constructor"
		},
		"cUJI9mPdhYwft-eZMoBjt": {
			"uri": "/example-documentation/@webdoc/example/PIXI/ObjectRenderer.html"
		},
		"emwOBZwPOutB2dkpTrfbo": {
			"uri": "/example-documentation/@webdoc/example/PIXI/ObjectRenderer.html#renderer"
		},
		"WDAwDhYvqGL_qF9RH20Ho": {
			"uri": "/example-documentation/@webdoc/example/PIXI/ObjectRenderer.html#constructor"
		},
		"6KPf1vonKQAHe4vn05K6f": {
			"uri": "/example-documentation/@webdoc/example/PIXI/ObjectRenderer.html#destroy"
		},
		"zfW6WOFczTim6pOPbRoVf": {
			"uri": "/example-documentation/@webdoc/example/PIXI/ObjectRenderer.html#flush"
		},
		"-kkTZqOMMYQPv4W6uuMS_": {
			"uri": "/example-documentation/@webdoc/example/PIXI/ObjectRenderer.html#render"
		},
		"MeOrm-1UEdE07WQUMZ0VN": {
			"uri": "/example-documentation/@webdoc/example/PIXI/ObjectRenderer.html#start"
		},
		"hg9B72PUOcsRwTJQw8HjE": {
			"uri": "/example-documentation/@webdoc/example/PIXI/ObjectRenderer.html#stop"
		},
		"_T3T2MS5ExLOV-V8gLdCg": {
			"uri": "/example-documentation/@webdoc/example/PIXI/System.html"
		},
		"UIHQuQFIcv0za3FiH1xha": {
			"uri": "/example-documentation/@webdoc/example/PIXI/System.html#renderer"
		},
		"hn_UnSDroczSHclQU0GFr": {
			"uri": "/example-documentation/@webdoc/example/PIXI/System.html#constructor"
		},
		"04oQMV0PnyyF6yjUGrFbC": {
			"uri": "/example-documentation/@webdoc/example/PIXI/System.html#destroy"
		},
		"Ix1upJdEyP0K9AyGEzGj1": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html"
		},
		"gqg4_sfxQyAGWLViPV3NV": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#_drawCallPool"
		},
		"LoAjf-is0dqfnu2xKEC4p": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#_textureArrayPool"
		},
		"CmU9pUU-ICJzuCCtuxok4": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#bufferSize"
		},
		"FXA6U-orP7SnaVmdq92JJ": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#MAX_TEXTURES"
		},
		"GaYIHZtaBw16a7FXrlguG": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#renderer"
		},
		"vnAsH6y4rbREMTkOPuZf2": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#size"
		},
		"NEsW01T2UWj6Nob-yWj8W": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#state"
		},
		"5dQDQEd8qOr5W7lysT05J": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#vertexSize"
		},
		"bTb4zauqbFg_Qf2H143nw": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#_shader"
		},
		"DZ4rYu2ukfV5jOTpuOBY6": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#geometryClass"
		},
		"-DpLIIZPAJxXUALk8cGIz": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#shaderGenerator"
		},
		"rAJ0a1PE6bZv5VT7WxN4g": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#_aBuffers"
		},
		"BgzKfaa6BORGNpPMyzwLn": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#_bufferedElements"
		},
		"a4lJ2WGEMLEbzPhAFsd0q": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#_bufferedTextures"
		},
		"ChMrrzrWztddcS32WHQW3": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#_bufferSize"
		},
		"PMKnZafmsGTYTEBw_Fjuj": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#_flushId"
		},
		"M7c9DFoLFfTfpOnMvKkgo": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#_iBuffers"
		},
		"EEoR6gm69m03sLhxy3DDj": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#_indexCount"
		},
		"bON8U6rwx3QtfEQTSSdo5": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#_packedGeometries"
		},
		"mB85ehsIR22N_vQ0pjvyJ": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#_packedGeometryPoolSize"
		},
		"xYtMKkQKoxEctF897HnyN": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#_vertexCount"
		},
		"PyL5xiT5P0UGmdcyqSP_L": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#bindAndClearTexArray"
		},
		"pJwqSsByBaFFglpR4U4uq": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#buildDrawCalls"
		},
		"kkSFGlwS53d4B1qKZgX-u": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#constructor"
		},
		"e3uB4W7soxAaptNOuTIGr": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#contextChange"
		},
		"PPBJjEd2zIUnbwAO3oIAo": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#destroy"
		},
		"kgJiz0gO5xMhcU8bjf2PG": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#flush"
		},
		"Zg_POEu5vEntb0-T17v5v": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#initFlushBuffers"
		},
		"_J5G2erk1Bmdg3S6D5_wA": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#onPrerender"
		},
		"quHNNhQdw1pCZ4bk6GEZ4": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#packInterleavedGeometry"
		},
		"b2GSRvSdpwUO_5WaudqhA": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#render"
		},
		"pcI6jzBQPnXhKYWO5ky9K": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#start"
		},
		"8L1SpqwFVT9Fl1dP2Rbur": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#stop"
		},
		"l4DqwQs7ZDzhSKded7hUH": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#getAttributeBuffer"
		},
		"EW_ooezxhrOAeV0Y79gRm": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#getIndexBuffer"
		},
		"cwGvrGd5t_RnT5tBqcHZe": {
			"uri": "/example-documentation/@webdoc/example/PIXI/TRANSFORM_MODE.html"
		},
		"wtTvzvDAWb9-pa_rfiq2O": {
			"uri": "/example-documentation/@webdoc/example/PIXI/TRANSFORM_MODE.html#DYNAMIC"
		},
		"fXWiGdaP16dHbHgNXRsr4": {
			"uri": "/example-documentation/@webdoc/example/PIXI/TRANSFORM_MODE.html#STATIC"
		},
		"wlnjrqkQQLTvCm9O-x1RN": {
			"uri": "/example-documentation/@webdoc/example/PIXI/.html"
		},
		"Sl59QEWx9HyRI0h5w6pqG": {
			"uri": "/example-documentation/@webdoc/example/PIXI/.html#destroy"
		},
		"GqFqCT4rg8b-jIsOsbcz-": {
			"uri": "/example-documentation/@webdoc/example/PIXI/.html#init"
		},
		"TLSdhAV1ffwAWv6aQwUOX": {
			"uri": "/example-documentation/@webdoc/example/PIXI.html#SVG_SIZE"
		},
		"Olpd408wISCukV_XHO64m": {
			"uri": "/example-documentation/@webdoc/example/R.html"
		},
		"W9-8klghF1p29Bx-hkytm": {
			"uri": "/example-documentation/@webdoc/example/R/Road.html"
		},
		"JmWnCjmXfgwX358bjHSlP": {
			"uri": "/example-documentation/@webdoc/example/R/Road.html#constructor"
		},
		"Poea-WfFrBKuQB2NX-suQ": {
			"uri": "/example-documentation/@webdoc/example/R.html#DEFAULT_LANES"
		},
		"hvhm-AzDTz2r0iWGHbiT0": {
			"uri": "/example-documentation/@webdoc/example/R.html#buildRoad"
		},
		"kk3dVCRsU6bYbrcEWUfQ5": {
			"uri": "/example-documentation/@webdoc/example/Ts.html"
		},
		"U-Eq8hsmCXy-FqADD5l3V": {
			"uri": "/example-documentation/@webdoc/example/Ts/Transaction.html"
		},
		"8kim2DETL4anprIICThUq": {
			"uri": "/example-documentation/@webdoc/example/Ts/Transaction.html#constructor"
		},
		"w51xf1-yz6yX55UHjulSK": {
			"uri": "/example-documentation/@webdoc/example/Bean.html"
		},
		"XKwCMk7T_pGVx_YtYWust": {
			"uri": "/example-documentation/@webdoc/example/Bean.html#constructor"
		},
		"Li2NcBwgspg7hyMXRzuf2": {
			"uri": "/example-documentation/@webdoc/example/Bean.html#roast"
		},
		"6iELSNyw3gGWfnh-_aPR6": {
			"uri": "/example-documentation/@webdoc/example/Car.html"
		},
		"sAwevtx8nExsRF_oCNeDs": {
			"uri": "/example-documentation/@webdoc/example/Car.html#DEFAULT_DRIVE_SHIFT"
		},
		"saNtS6sfFiu68O4XbLS03": {
			"uri": "/example-documentation/@webdoc/example/Car.html#bounds"
		},
		"ZyIJCxmY2lijgKztvBXAW": {
			"uri": "/example-documentation/@webdoc/example/Car.html#interactions"
		},
		"SOGm7edWQBq11sAziEBX4": {
			"uri": "/example-documentation/@webdoc/example/Car.html#mass"
		},
		"_VZlXKYZDR-HkMTBP81Of": {
			"uri": "/example-documentation/@webdoc/example/Car.html#model"
		},
		"eIEG69THdoHYhzhxf54Di": {
			"uri": "/example-documentation/@webdoc/example/Car.html#position"
		},
		"7V20SurABr19IpjYKb9KH": {
			"uri": "/example-documentation/@webdoc/example/Car.html#velocity"
		},
		"sdMzhyyL02RHBWxU7SxF2": {
			"uri": "/example-documentation/@webdoc/example/Car.html#vin"
		},
		"AUQVILrbXpN_iErWoO6Wn": {
			"uri": "/example-documentation/@webdoc/example/Car.html#registerRetail"
		},
		"UWDbRgfO83oNx4OaPb70L": {
			"uri": "/example-documentation/@webdoc/example/Car.html#constructor"
		},
		"1X28BgitgtOGJXgnvNWh7": {
			"uri": "/example-documentation/@webdoc/example/Car.html#onCrash"
		},
		"fDDjp63rZMAnXz5Aob8oc": {
			"uri": "/example-documentation/@webdoc/example/CoffeeBean.html"
		},
		"vlAaC51_oyU-5Yds5npfj": {
			"uri": "/example-documentation/@webdoc/example/CoffeeBean.html#maturity"
		},
		"OHW8wa4EH4xVu4H6LaIQf": {
			"uri": "/example-documentation/@webdoc/example/CoffeeBean.html#roasted"
		},
		"PilZ9v7yILbBECcRu6cz2": {
			"uri": "/example-documentation/@webdoc/example/CoffeeBean.html#constructor"
		},
		"stqDYWJSJ-3nyAcNzKS_l": {
			"uri": "/example-documentation/@webdoc/example/CoffeeBean.html#roast"
		},
		"s6BnpwML7gxYzbhLB-8AP": {
			"uri": "/example-documentation/@webdoc/example/ExampleFactory.html"
		},
		"iyHgiRwUAlPkOZK2fIX_S": {
			"uri": "/example-documentation/@webdoc/example/ExampleFactory.html#getInstance"
		},
		"gSuFmw6cqSa-P0uoUl3uQ": {
			"uri": "/example-documentation/@webdoc/example/ExampleFactory.html#build"
		},
		"FQiC7Rd_bC3-iA6501RgP": {
			"uri": "/example-documentation/@webdoc/example/ExampleFactory.html#constructor"
		},
		"PJ7fxJS13b-Jj5LdZsqPk": {
			"uri": "/example-documentation/@webdoc/example/ExampleFactory.html#getContext"
		},
		"lKCbok3iDFSS_WBpgTwYp": {
			"uri": "/example-documentation/@webdoc/example/Gravity.html"
		},
		"3WFiHxwtkfEbkWdplrsIZ": {
			"uri": "/example-documentation/@webdoc/example/Gravity.html#constructor"
		},
		"DUAylJ8QjI9nxGJgkrWE8": {
			"uri": "/example-documentation/@webdoc/example/Gravity.html#force"
		},
		"_MKMru31f5YR-XrpKJ0tE": {
			"uri": "/example-documentation/@webdoc/example/PhysicalInteraction.html"
		},
		"eVCqyLGcIzp4rZC8wRCoB": {
			"uri": "/example-documentation/@webdoc/example/PhysicalInteraction.html#GRAVITATIONAL_CONSTANT"
		},
		"DHVGN5ORBLzGzb_2nZG-L": {
			"uri": "/example-documentation/@webdoc/example/PhysicalInteraction.html#createGravity"
		},
		"osanftF9lL_9k9K3Wdtro": {
			"uri": "/example-documentation/@webdoc/example/PhysicalInteraction.html#force"
		},
		"sCOp8alenkknSRHfZZLIk": {
			"uri": "/example-documentation/@webdoc/example/PhysicalObject.html"
		},
		"WDDNCdMQSwgZwjUdEfqyR": {
			"uri": "/example-documentation/@webdoc/example/PhysicalObject.html#bounds"
		},
		"Q877KaUg-oDc6y4Qt-r5J": {
			"uri": "/example-documentation/@webdoc/example/PhysicalObject.html#interactions"
		},
		"14IXQ_S9cm2pqlJfWJ1v9": {
			"uri": "/example-documentation/@webdoc/example/PhysicalObject.html#mass"
		},
		"iU9lJcWx0K_SKIlueOHlC": {
			"uri": "/example-documentation/@webdoc/example/PhysicalObject.html#position"
		},
		"B3cMSXEAbbTUPlVROEHi-": {
			"uri": "/example-documentation/@webdoc/example/PhysicalObject.html#velocity"
		},
		"qh0e-Rmmv0_Djyn_REaHt": {
			"uri": "/example-documentation/@webdoc/example/Vector.html"
		},
		"KmlaTfZjCq1mSpFK9UcXb": {
			"uri": "/example-documentation/@webdoc/example/Vector.html#dimensions"
		},
		"eDHlTPM17pNUd2Y1Ls0ae": {
			"uri": "/example-documentation/@webdoc/example/Vector.html#add"
		},
		"lKEN8yVzHoOodlIKnU97s": {
			"uri": "/example-documentation/@webdoc/example/Vector.html#equalTo"
		},
		"dftYxZwQko_4DtOoqW_cb": {
			"uri": "/example-documentation/@webdoc/example/Vector.html#isCompat"
		},
		"jH-sGhwlzzAaLHdiTPdnW": {
			"uri": "/example-documentation/@webdoc/example/CAR_MAKES.html"
		},
		"uYqOpOH-LVnnwXtaTm2YH": {
			"uri": "/example-documentation/@webdoc/example/CAR_MAKES.html#FERRARI"
		},
		"hdxaiabplC4Ryo8YzU8pI": {
			"uri": "/example-documentation/@webdoc/example/CAR_MAKES.html#FORD"
		},
		"Tf11dPZsjR8OzaulL7yUB": {
			"uri": "/example-documentation/@webdoc/example/CAR_MAKES.html#GENERAL_MOTORS"
		},
		"L7F-S_9OZvdXlvv47M_R4": {
			"uri": "/example-documentation/@webdoc/example/CAR_MAKES.html#JAGUAR"
		},
		"-gkm28QM1RDA8PcrzIAsm": {
			"uri": "/example-documentation/@webdoc/example/CAR_MAKES.html#KIA"
		},
		"mQ0LMrcwEfe7VG9kWP1cP": {
			"uri": "/example-documentation/@webdoc/example/CAR_MAKES.html#LAMBORGHINI"
		},
		"qcTxujFS_008jatajhzIb": {
			"uri": "/example-documentation/@webdoc/example/CAR_MAKES.html#TOYOTA"
		},
		"Pzhpl9eu7vd0VLpGj0XMF": {
			"uri": "/example-documentation/@webdoc/example/VectorArray.html"
		},
		"5AGU2WI8s0NmfsvU8XGIE": {
			"uri": "/example-documentation/@webdoc/example/VectorArray.html#meta"
		},
		"PorYMD4cUYgouWoej7dvA": {
			"uri": "/example-documentation/@webdoc/example/CarDealer.html"
		},
		"SbcbeECh4n3Ytx4xVGNp9": {
			"uri": "/example-documentation/@webdoc/example/CarDealer.html#closeTransaction"
		},
		"XvwlP-jtmPXXzKBoT8a48": {
			"uri": "/example-documentation/@webdoc/example/CarDealer.html#initiateTransaction"
		},
		"m1kY3itvgEQQi_ZC5vKRs": {
			"uri": "/example-documentation/@webdoc/example/CarDealer.html#offerAsk"
		},
		"ezK4x1PJu20eqzgskVGsC": {
			"uri": "/example-documentation/@webdoc/example/CarDealer.html#offerBid"
		},
		"u8t27SlFTK0fC2QJsrp3r": {
			"uri": "/example-documentation/@webdoc/example/installBean.html"
		},
		"rEU50poPNvf9IGEabuQjk": {
			"uri": "/example-documentation/@webdoc/example/isPhysicalObject.html"
		}
	}
}