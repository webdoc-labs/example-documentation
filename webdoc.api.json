{
	"version": "1.0.0",
	"metadata": {
		"linker": "(unsigned)",
		"siteDomain": "https://webdoc-labs.github.io",
		"siteRoot": "example-documentation"
	},
	"root": {
		"id": "root-0eyFaZnMOYJUAzMod72xo",
		"name": "",
		"type": "RootDoc",
		"members": [
			{
				"id": "kyvTRVf5gopIvJjJbtfzq",
				"name": "PIXI",
				"brief": "",
				"type": "NSDoc",
				"params": [],
				"returns": [],
				"extends": [],
				"implements": [],
				"members": [
					{
						"id": "5Hmjkj8h14YlbiYJyoYQj",
						"name": "utils",
						"brief": "",
						"defaultValue": "false",
						"scope": "static",
						"type": "NSDoc",
						"params": [],
						"returns": [],
						"extends": [],
						"implements": [],
						"members": [
							{
								"id": "OqcVs10l0LTN8c54VWHx3",
								"name": "skipHello",
								"brief": "<p>Skips the hello message of renderers that are created after this is run.</p>",
								"deprecated": true,
								"type": "FunctionDoc",
								"params": [],
								"returns": [
									{
										"dataType": {
											"tokens": [
												{
													"value": "void",
													"kind": "canonical"
												}
											],
											"template": "void"
										}
									}
								],
								"extends": [],
								"implements": []
							}
						]
					},
					{
						"id": "DffmscPRG0NTD9mkyxExq",
						"name": "TilingSprite",
						"brief": "",
						"deprecated": "since 5.0.0",
						"scope": "static",
						"see": [
							"PIXI.TilingSprite"
						],
						"type": "ClassDoc",
						"params": [],
						"returns": [],
						"extends": [],
						"implements": [],
						"members": [
							{
								"id": "_3eLdOkqn5EmVaFyQkpgg",
								"name": "constructor",
								"brief": "",
								"access": "public",
								"scope": "instance",
								"type": "MethodDoc",
								"params": [],
								"returns": []
							}
						]
					},
					{
						"id": "ovca4Coj4dCsSIRWji_GT",
						"name": "AbstractRenderer",
						"brief": "",
						"type": "ClassDoc",
						"params": [],
						"returns": [],
						"extends": [],
						"implements": [],
						"members": [
							{
								"id": "YvJ-mmkOvff_lZp-KNxha",
								"name": "backgroundColor",
								"brief": "<p>The background color to fill if not transparent</p>",
								"scope": "instance",
								"type": "PropertyDoc",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "vNCBYJDAipmiRQ8elbPRA",
								"name": "constructor",
								"brief": "",
								"access": "public",
								"scope": "instance",
								"type": "MethodDoc",
								"params": [],
								"returns": []
							}
						]
					},
					{
						"id": "P2gnlSpLicvxWhvfkqfLO",
						"name": "ObjectRenderer",
						"brief": "<p>Base for a common object renderer that can be used as a system renderer plugin.</p>",
						"type": "ClassDoc",
						"params": [],
						"returns": [],
						"extends": [
							"PIXI.System"
						],
						"implements": [],
						"members": [
							{
								"id": "9c01SahNZR755qGk6w_Lc",
								"name": "renderer",
								"brief": "<p>The renderer this manager works for.</p>",
								"scope": "instance",
								"type": "PropertyDoc",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "K-RhNhDwyF_Zfg5tepaNg",
								"name": "constructor",
								"brief": "",
								"scope": "instance",
								"type": "MethodDoc",
								"params": [
									{
										"identifier": "renderer",
										"optional": false,
										"description": "<p>The renderer this manager works for.</p>",
										"dataType": {
											"tokens": [
												{
													"value": "PIXI.Renderer",
													"kind": "canonical"
												},
												{
													"value": "PIXI.Renderer",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									}
								],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "ppCd_JBH1Vb_tIB4D6h4v",
								"name": "destroy",
								"brief": "",
								"scope": "instance",
								"type": "MethodDoc",
								"description": "<p>Generic destruction method that frees all resources. This\nshould be called by subclasses.</p>",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "Yuizvt0MN4FmIndnnJznY",
								"name": "flush",
								"brief": "",
								"scope": "instance",
								"type": "MethodDoc",
								"description": "<p>Stub method that should be used to empty the current\nbatch by rendering objects now.</p>",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "sljEW_PBOA_LDLWV38vNn",
								"name": "render",
								"brief": "",
								"scope": "instance",
								"type": "MethodDoc",
								"description": "<p>Keeps the object to render. It doesn't have to be\nrendered immediately.</p>",
								"params": [
									{
										"identifier": "object",
										"optional": false,
										"description": "<p>The object to render.</p>",
										"dataType": {
											"tokens": [
												{
													"value": "PIXI.DisplayObject",
													"kind": "canonical"
												},
												{
													"value": "PIXI.DisplayObject",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									}
								],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "WUgHIzNtp4h9-hzwIqhiz",
								"name": "start",
								"brief": "",
								"scope": "instance",
								"type": "MethodDoc",
								"description": "<p>Stub method that initializes any state required before\nrendering starts. It is different from the <code>prerender</code>\ns...",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "S2LmBSsGAcp8nnaGmGpBZ",
								"name": "stop",
								"brief": "",
								"scope": "instance",
								"type": "MethodDoc",
								"description": "<p>Stops the renderer. It should free up any state and\nbecome dormant.</p>",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							}
						]
					},
					{
						"id": "LnrBVjyZ7SLpXclHzL7eq",
						"name": "System",
						"brief": "<p>System is a base class used for extending systems used by the {@link PIXI.AbstractRenderer}.</p>",
						"see": [
							"PIXI.Renderer#addSystem"
						],
						"type": "ClassDoc",
						"description": "<p>Search more here: {@link https://www.google.com/}</p>",
						"params": [],
						"returns": [],
						"extends": [],
						"implements": [],
						"members": [
							{
								"id": "ZheKec2dNrcDIBe1Iju4-",
								"name": "renderer",
								"brief": "<p>The renderer this manager works for.</p>",
								"scope": "instance",
								"type": "PropertyDoc",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "jkeTG0MONs3DC4aFLJ_qQ",
								"name": "constructor",
								"brief": "",
								"scope": "instance",
								"type": "MethodDoc",
								"params": [
									{
										"identifier": "renderer",
										"optional": false,
										"description": "<p>The renderer this manager works for.</p>",
										"dataType": {
											"tokens": [
												{
													"value": "PIXI.Renderer",
													"kind": "canonical"
												},
												{
													"value": "PIXI.Renderer",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									}
								],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "gh4rez1yNTmn5SddamgZO",
								"name": "destroy",
								"brief": "<p>Generic destroy methods to be overridden by the subclass</p>",
								"scope": "instance",
								"type": "MethodDoc",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							}
						]
					},
					{
						"id": "iI-LoN5aRaM48ymQ-sZjZ",
						"name": "AbstractBatchRenderer",
						"brief": "<p>Renderer dedicated to drawing and batching sprites.</p>",
						"access": "protected",
						"readonly": true,
						"type": "ClassDoc",
						"description": "<p>This is the default batch renderer. It buffers objects\nwith texture-based geometries and renders them in\nbatches. It uploa...",
						"params": [],
						"returns": [],
						"extends": [
							"PIXI.ObjectRenderer"
						],
						"implements": [],
						"members": [
							{
								"id": "M__ZKW8-sAv0OUs4K6ycy",
								"name": "_drawCallPool",
								"brief": "",
								"scope": "static",
								"type": "PropertyDoc",
								"description": "<p>Pool of <code>BatchDrawCall</code> objects that <code>flush</code> used\nto create &quot;batches&quot; of the objects being...",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "MCFXJY9KWqgXGlIjcg_Hw",
								"name": "_textureArrayPool",
								"brief": "",
								"scope": "static",
								"type": "PropertyDoc",
								"description": "<p>Pool of <code>BatchDrawCall</code> objects that <code>flush</code> used\nto create &quot;batches&quot; of the objects being...",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "GYVWeiuOmvlL7oscFFuqA",
								"name": "bufferSize",
								"brief": "",
								"scope": "instance",
								"type": "PropertyDoc",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "FaGHF-Ac48_kvEyt1hQ9x",
								"name": "MAX_TEXTURES",
								"brief": "",
								"defaultValue": "1",
								"readonly": true,
								"scope": "instance",
								"see": [
									"PIXI.AbstractBatchRenderer#contextChange"
								],
								"type": "PropertyDoc",
								"description": "<p>Maximum number of textures that can be uploaded to\nthe GPU under the current context. It is initialized\nproperly in <code>...",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "5OOsKoFK5tVZWsixYCPpp",
								"name": "renderer",
								"brief": "<p>The renderer this manager works for.</p>",
								"scope": "instance",
								"type": "PropertyDoc",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "kfCXqjpzVFrrEW1c2Iet4",
								"name": "size",
								"brief": "",
								"defaultValue": "settings.SPRITE_BATCH_SIZE * 4",
								"scope": "instance",
								"type": "PropertyDoc",
								"description": "<p>The number of bufferable objects before a flush\noccurs automatically.</p>",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "gk_v673Cw0vbj6e1VModl",
								"name": "state",
								"brief": "<p>The WebGL state in which this renderer will work.</p>",
								"readonly": true,
								"scope": "instance",
								"type": "PropertyDoc",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "uLEugbMrjIaHQ1SOGi8m8",
								"name": "vertexSize",
								"brief": "",
								"defaultValue": "undefined",
								"readonly": true,
								"scope": "instance",
								"type": "PropertyDoc",
								"description": "<p>Size of data being buffered per vertex in the\nattribute buffers (in floats). By default, the\nbatch-renderer plugin uses 6:...",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "ZYZQvq1jsGxr6ISgzb-vr",
								"name": "_shader",
								"brief": "<p>This shader is generated by <code>this.shaderGenerator</code>.</p>",
								"access": "protected",
								"defaultValue": "undefined",
								"scope": "instance",
								"type": "PropertyDoc",
								"description": "<p>It is generated specifically to handle the required\nnumber of textures being batched together.</p>",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "TlyN2Mac-mQ72TKsktDr2",
								"name": "geometryClass",
								"brief": "",
								"access": "protected",
								"defaultValue": "PIXI.BatchGeometry",
								"scope": "instance",
								"type": "PropertyDoc",
								"description": "<p>The class that represents the geometry of objects\nthat are going to be batched with this.</p>",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "0HnEJezqBYdeX1UvZMvI9",
								"name": "shaderGenerator",
								"brief": "",
								"access": "protected",
								"defaultValue": "undefined",
								"scope": "instance",
								"type": "PropertyDoc",
								"description": "<p>This is used to generate a shader that can\ncolor each vertex based on a <code>aTextureId</code>\nattribute that points to a...",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "ncOp-dZOuDK4DhucgaEGa",
								"name": "_aBuffers",
								"brief": "",
								"access": "private",
								"scope": "instance",
								"see": [
									"PIXI.AbstractBatchRenderer#getAttributeBuffer"
								],
								"type": "PropertyDoc",
								"description": "<p>Pool of <code>ViewableBuffer</code> objects that are sorted in\norder of increasing size. The flush method uses\nthe buffer ...",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "94cR2aBWcLbXFb1ecBU-N",
								"name": "_bufferedElements",
								"brief": "<p>Buffer of objects that are yet to be rendered.</p>",
								"access": "private",
								"scope": "instance",
								"type": "PropertyDoc",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "PhQFxhwB8CyU4g-lBf7AO",
								"name": "_bufferedTextures",
								"brief": "",
								"access": "private",
								"scope": "instance",
								"type": "PropertyDoc",
								"description": "<p>Data for texture batch builder, helps to save a bit of CPU on a pass</p>",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "oc2MFINhgjNVC2Z4Dw2b0",
								"name": "_bufferSize",
								"brief": "",
								"access": "private",
								"defaultValue": "0",
								"scope": "instance",
								"type": "PropertyDoc",
								"description": "<p>Number of elements that are buffered and are\nwaiting to be flushed.</p>",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "FCFmGmcjiZgmVtgMLZeVa",
								"name": "_flushId",
								"brief": "",
								"access": "private",
								"defaultValue": "0",
								"scope": "instance",
								"type": "PropertyDoc",
								"description": "<p>A flush may occur multiple times in a single\nframe. On iOS devices or when\n<code>settings.CAN_UPLOAD_SAME_BUFFER</code> is...",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "qgSikHhqp0wwfKG3PW2wt",
								"name": "_iBuffers",
								"brief": "",
								"access": "private",
								"scope": "instance",
								"see": [
									"PIXI.AbstractBatchRenderer#getIndexBuffer"
								],
								"type": "PropertyDoc",
								"description": "<p>Pool of <code>Uint16Array</code> objects that are sorted in\norder of increasing size. The flush method uses\nthe buffer wit...",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "KUf33XoDotEqP9KVP7vvk",
								"name": "_indexCount",
								"brief": "",
								"access": "private",
								"defaultValue": "0",
								"scope": "instance",
								"type": "PropertyDoc",
								"description": "<p>Total count of all indices used by the currently\nbuffered objects.</p>",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "ypMWak5AvAH4HfnnV__gV",
								"name": "_packedGeometries",
								"brief": "",
								"access": "private",
								"scope": "instance",
								"see": [
									"PIXI.AbstractBatchRenderer.contextChange"
								],
								"type": "PropertyDoc",
								"description": "<p>Pool of <code>this.geometryClass</code> geometry objects\nthat store buffers. They are used to pass data\nto the shader on e...",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "y1MfKU9zv87TFbCxHPN0D",
								"name": "_packedGeometryPoolSize",
								"brief": "",
								"access": "private",
								"defaultValue": "2",
								"scope": "instance",
								"type": "PropertyDoc",
								"description": "<p>Size of <code>this._packedGeometries</code>. It can be expanded\nif more than <code>this._packedGeometryPoolSize</code> flu...",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "6h0RK1CvWcGC887K3U4tP",
								"name": "_vertexCount",
								"brief": "",
								"access": "private",
								"defaultValue": "0",
								"scope": "instance",
								"type": "PropertyDoc",
								"description": "<p>Total count of all vertices used by the currently\nbuffered objects.</p>",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "bpyTysqlv-o2UZyWXHluP",
								"name": "bindAndClearTexArray",
								"brief": "<p>Bind textures for current rendering</p>",
								"scope": "instance",
								"type": "MethodDoc",
								"params": [
									{
										"identifier": "texArray",
										"optional": false,
										"dataType": {
											"tokens": [
												{
													"value": "PIXI.BatchTextureArray",
													"kind": "canonical"
												},
												{
													"value": "PIXI.BatchTextureArray",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									}
								],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "JZNr8yhDeE0n_YMFXbcAR",
								"name": "buildDrawCalls",
								"brief": "<p>Populating drawcalls for rendering</p>",
								"scope": "instance",
								"type": "MethodDoc",
								"params": [
									{
										"identifier": "texArray",
										"optional": false,
										"dataType": {
											"tokens": [
												{
													"value": "PIXI.BatchTextureArray",
													"kind": "canonical"
												},
												{
													"value": "PIXI.BatchTextureArray",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									},
									{
										"identifier": "start",
										"optional": false,
										"dataType": {
											"tokens": [
												{
													"value": "number",
													"kind": "canonical"
												},
												{
													"value": "number",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									},
									{
										"identifier": "finish",
										"optional": false,
										"dataType": {
											"tokens": [
												{
													"value": "number",
													"kind": "canonical"
												},
												{
													"value": "number",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									}
								],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "EnrZgRDRlq8u_HEk0dCMN",
								"name": "constructor",
								"brief": "",
								"scope": "instance",
								"type": "MethodDoc",
								"description": "<p>This will hook onto the renderer's <code>contextChange</code>\nand <code>prerender</code> signals.</p>",
								"params": [
									{
										"identifier": "renderer",
										"optional": false,
										"description": "<p>The renderer this works for.</p>",
										"dataType": {
											"tokens": [
												{
													"value": "PIXI.Renderer",
													"kind": "canonical"
												},
												{
													"value": "PIXI.Renderer",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									}
								],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "eT5qbLbLrvx7MjAwjxczh",
								"name": "contextChange",
								"brief": "<p>Handles the <code>contextChange</code> signal.</p>",
								"scope": "instance",
								"type": "MethodDoc",
								"description": "<p>It calculates <code>this.MAX_TEXTURES</code> and allocating the\npacked-geometry object pool.</p>",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "-ougllGRHkBEMC5oZyswz",
								"name": "destroy",
								"brief": "<p>Destroys this <code>AbstractBatchRenderer</code>. It cannot be used again.</p>",
								"scope": "instance",
								"type": "MethodDoc",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "7mTba_7Pz72sorHLk5nsl",
								"name": "flush",
								"brief": "<p>Renders the content <em>now</em> and empties the current batch.</p>",
								"scope": "instance",
								"type": "MethodDoc",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "HuhIhB-r11EY1OEuLq_QF",
								"name": "initFlushBuffers",
								"brief": "<p>Makes sure that static and dynamic flush pooled objects have correct dimensions</p>",
								"scope": "instance",
								"type": "MethodDoc",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "6FCPalZPF5v9N-IFaxlU2",
								"name": "onPrerender",
								"brief": "<p>Handles the <code>prerender</code> signal.</p>",
								"scope": "instance",
								"type": "MethodDoc",
								"description": "<p>It ensures that flushes start from the first geometry\nobject again.</p>",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "F-m2Q3G-ZEWrpXg39QssT",
								"name": "packInterleavedGeometry",
								"brief": "",
								"scope": "instance",
								"type": "MethodDoc",
								"description": "<p>Takes the four batching parameters of <code>element</code>, interleaves\nand pushes them into the batching attribute/index ...",
								"params": [
									{
										"identifier": "element",
										"optional": false,
										"description": "<p>element being rendered</p>",
										"dataType": {
											"tokens": [
												{
													"value": "PIXI.Sprite",
													"kind": "canonical"
												},
												{
													"value": "PIXI.Sprite",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									},
									{
										"identifier": "attributeBuffer",
										"optional": false,
										"description": "<p>attribute buffer.</p>",
										"dataType": {
											"tokens": [
												{
													"value": "PIXI.ViewableBuffer",
													"kind": "canonical"
												},
												{
													"value": "PIXI.ViewableBuffer",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									},
									{
										"identifier": "indexBuffer",
										"optional": false,
										"description": "<p>index buffer</p>",
										"dataType": {
											"tokens": [
												{
													"value": "Uint16Array",
													"kind": "canonical"
												},
												{
													"value": "Uint16Array",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									},
									{
										"identifier": "aIndex",
										"optional": false,
										"description": "<p>number of floats already in the attribute buffer</p>",
										"dataType": {
											"tokens": [
												{
													"value": "number",
													"kind": "canonical"
												},
												{
													"value": "number",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									},
									{
										"identifier": "iIndex",
										"optional": false,
										"description": "<p>number of indices already in <code>indexBuffer</code></p>",
										"dataType": {
											"tokens": [
												{
													"value": "number",
													"kind": "canonical"
												},
												{
													"value": "number",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									}
								],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "ObSF84ssVHTwNSlm0mGua",
								"name": "render",
								"brief": "",
								"scope": "instance",
								"type": "MethodDoc",
								"description": "<p>Buffers the &quot;batchable&quot; object. It need not be rendered\nimmediately.</p>",
								"params": [
									{
										"identifier": "element",
										"optional": false,
										"description": "<p>the element to render when\nusing this renderer</p>",
										"dataType": {
											"tokens": [
												{
													"value": "PIXI.DisplayObject",
													"kind": "canonical"
												},
												{
													"value": "PIXI.DisplayObject",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									}
								],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "cXWsNdwhxC5s44K2h9MSm",
								"name": "start",
								"brief": "<p>Starts a new sprite batch.</p>",
								"scope": "instance",
								"type": "MethodDoc",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "TigWE1-dGUwdoJ0CLOufb",
								"name": "stop",
								"brief": "<p>Stops and flushes the current batch.</p>",
								"scope": "instance",
								"type": "MethodDoc",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "FdBbs_PlclzBlB3goCWUC",
								"name": "getAttributeBuffer",
								"brief": "",
								"access": "private",
								"scope": "instance",
								"type": "MethodDoc",
								"description": "<p>Fetches an attribute buffer from <code>this._aBuffers</code> that\ncan hold atleast <code>size</code> floats.</p>",
								"params": [
									{
										"identifier": "size",
										"optional": false,
										"description": "<p>minimum capacity required</p>",
										"dataType": {
											"tokens": [
												{
													"value": "number",
													"kind": "canonical"
												},
												{
													"value": "number",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									}
								],
								"returns": [
									{
										"description": "<ul>\n<li>buffer than can hold atleast <code>size</code> floats</li>\n</ul>",
										"dataType": {
											"tokens": [
												{
													"value": "ViewableBuffer",
													"kind": "canonical"
												},
												{
													"value": "ViewableBuffer",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									}
								],
								"extends": [],
								"implements": []
							},
							{
								"id": "tqXGpPEjaMZk3Kxqm5oWo",
								"name": "getIndexBuffer",
								"brief": "",
								"access": "private",
								"scope": "instance",
								"type": "MethodDoc",
								"description": "<p>Fetches an index buffer from <code>this._iBuffers</code> that can\nhas atleast <code>size</code> capacity.</p>",
								"params": [
									{
										"identifier": "size",
										"optional": false,
										"description": "<p>minimum required capacity</p>",
										"dataType": {
											"tokens": [
												{
													"value": "number",
													"kind": "canonical"
												},
												{
													"value": "number",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									}
								],
								"returns": [
									{
										"description": "<ul>\n<li>buffer that can fit <code>size</code>\nindices.</li>\n</ul>",
										"dataType": {
											"tokens": [
												{
													"value": "Uint16Array",
													"kind": "canonical"
												},
												{
													"value": "Uint16Array",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									}
								],
								"extends": [],
								"implements": []
							}
						]
					},
					{
						"id": "bA5dh8xjvVg5VsHicOk_q",
						"name": "TRANSFORM_MODE",
						"brief": "<p>Constants that specify the transform type.</p>",
						"deprecated": "since 5.0.0",
						"scope": "static",
						"type": "EnumDoc",
						"params": [],
						"returns": [],
						"extends": [],
						"implements": [],
						"members": [
							{
								"id": "_2FdPk17NRARYqztR6w4X",
								"name": "DYNAMIC",
								"brief": "",
								"access": "public",
								"scope": "static",
								"type": "PropertyDoc"
							},
							{
								"id": "HtHt89U1cA6VkGDb99q53",
								"name": "STATIC",
								"brief": "",
								"access": "public",
								"scope": "static",
								"type": "PropertyDoc"
							}
						]
					},
					{
						"id": "Y_zmvnR2OJTiCk3IS07Sl",
						"name": "",
						"brief": "",
						"type": "TypedefDoc",
						"params": [],
						"returns": [],
						"extends": [],
						"implements": [],
						"members": [
							{
								"id": "SgEXBwToghcShvcDPZIuV",
								"name": "destroy",
								"brief": "",
								"access": "public",
								"scope": "static",
								"type": "PropertyDoc",
								"description": "<p>Called when destroying Application, scoped to Application instance</p>"
							},
							{
								"id": "RmLOPvQpz3FjYgiaWUwjB",
								"name": "init",
								"brief": "",
								"access": "public",
								"scope": "static",
								"type": "PropertyDoc",
								"description": "<p>Called when Application is constructed, scoped to Application instance.\nPasses in <code>options</code> as the only argumen..."
							}
						]
					},
					{
						"id": "QZC5knJBxBVjAfUfPDYT9",
						"name": "SVG_SIZE",
						"brief": "",
						"deprecated": "since 5.0.0",
						"scope": "static",
						"see": [
							"PIXI.resources.SVGResource.SVG_SIZE"
						],
						"type": "PropertyDoc",
						"params": [],
						"returns": [],
						"extends": [],
						"implements": []
					}
				]
			},
			{
				"id": "RVdnehRu4AZN1LLtA-p2W",
				"name": "R",
				"brief": "<p>A namespace dedicated to road manipulation utilites.</p>",
				"readonly": true,
				"type": "NSDoc",
				"params": [],
				"returns": [],
				"extends": [],
				"implements": [],
				"members": [
					{
						"id": "JLVMeaCrf5oW4HaCz0ZG-",
						"name": "Road",
						"brief": "<p>This is another road class.</p>",
						"type": "ClassDoc",
						"params": [],
						"returns": [],
						"extends": [],
						"implements": [],
						"members": [
							{
								"id": "_HQP8L8wUVsuiy6NvV1Ts",
								"name": "constructor",
								"brief": "<p>This is another road class.</p>",
								"access": "public",
								"scope": "instance",
								"type": "MethodDoc",
								"params": [],
								"returns": []
							}
						]
					},
					{
						"id": "V3rSD6T8V5qo3nz3RgSb3",
						"name": "DEFAULT_LANES",
						"brief": "<p>The default no. of lanes per one side of road</p>",
						"defaultValue": "4",
						"scope": "static",
						"type": "PropertyDoc",
						"params": [],
						"returns": [],
						"extends": [],
						"implements": []
					},
					{
						"id": "fg-p_kI-MUBwHCwhaxKgB",
						"name": "buildRoad",
						"brief": "<p>Builds a road</p>",
						"scope": "instance",
						"type": "MethodDoc",
						"params": [
							{
								"identifier": "address",
								"optional": false,
								"dataType": {
									"tokens": [
										{
											"value": "string",
											"kind": "canonical"
										}
									],
									"template": "string"
								}
							}
						],
						"returns": [
							{
								"dataType": {
									"tokens": [
										{
											"value": "ExampleFactory",
											"kind": "canonical"
										},
										{
											"value": "ExampleFactory",
											"kind": "link"
										}
									],
									"template": "%1"
								}
							}
						],
						"extends": [],
						"implements": []
					}
				]
			},
			{
				"id": "ABCNtIqqMEZZu0xgEUO_V",
				"name": "Ts",
				"brief": "",
				"type": "NSDoc",
				"params": [],
				"returns": [],
				"extends": [],
				"implements": [],
				"members": [
					{
						"id": "biW4o-aDffHxDHVNzMOnR",
						"name": "Transaction",
						"brief": "",
						"type": "ClassDoc",
						"params": [],
						"returns": [],
						"extends": [],
						"implements": [],
						"members": [
							{
								"id": "INDtN5k80LrFERlQ_A3Gi",
								"name": "constructor",
								"brief": "",
								"access": "public",
								"scope": "instance",
								"type": "MethodDoc",
								"params": [],
								"returns": []
							}
						]
					},
					{
						"id": "FhYUcxMvMKqf5QKijGqvM",
						"name": "Banana",
						"brief": "<p>Banana</p>",
						"type": "TypedefDoc",
						"params": [],
						"returns": [],
						"extends": [],
						"implements": [],
						"members": [
							{
								"id": "fNd3n8YSTnJjV4br4McST",
								"name": "color",
								"brief": "<p>Color of banana</p>",
								"type": "PropertyDoc",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "QlIquzJj4SfgJniYJrwhA",
								"name": "peels",
								"brief": "<p>Peels in banana</p>",
								"type": "PropertyDoc",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "kzQvkse8zKJo24YMz73lj",
								"name": "usage",
								"brief": "<p>Analytics around how many people have interacted with this banana</p>",
								"type": "PropertyDoc",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "GB4NL0LMhsteV9IVI6tuY",
								"name": "ripe",
								"brief": "<p>Evaluate if banana is ripe for eating</p>",
								"type": "MethodDoc",
								"params": [],
								"returns": [
									{
										"dataType": {
											"tokens": [
												{
													"value": "boolean",
													"kind": "canonical"
												}
											],
											"template": "boolean"
										}
									}
								],
								"extends": [],
								"implements": []
							},
							{
								"id": "2BApOWC-nlr66UJEHaols",
								"name": "rotten",
								"brief": "<p>Check if banana has rotten</p>",
								"type": "MethodDoc",
								"params": [],
								"returns": [
									{
										"dataType": {
											"tokens": [
												{
													"value": "boolean",
													"kind": "canonical"
												}
											],
											"template": "boolean"
										}
									}
								],
								"extends": [],
								"implements": []
							}
						]
					}
				]
			},
			{
				"id": "7KvluYRdEDZzEvEZSE6nA",
				"name": "Bean",
				"brief": "<p>Bean class</p>",
				"type": "ClassDoc",
				"params": [],
				"returns": [],
				"extends": [],
				"implements": [],
				"members": [
					{
						"id": "O_65ZQKb5Duk1b_dUVlVK",
						"name": "constructor",
						"brief": "<p>Bean class</p>",
						"access": "public",
						"scope": "instance",
						"type": "MethodDoc",
						"params": [],
						"returns": []
					},
					{
						"id": "9c_uRDDgI0LsOWRIL2xim",
						"name": "roast",
						"brief": "<p>(optional) roasting method</p>",
						"abstract": true,
						"scope": "instance",
						"type": "MethodDoc",
						"params": [],
						"returns": [
							{
								"dataType": {
									"tokens": [
										{
											"value": "void",
											"kind": "canonical"
										}
									],
									"template": "void"
								}
							}
						],
						"extends": [],
						"implements": []
					}
				]
			},
			{
				"id": "PUzKIhuFDkz7OaiDDq1Fq",
				"name": "Car",
				"brief": "<p><em>Simulation</em> for a automobile that can drive on a manifold surface.</p>",
				"type": "ClassDoc",
				"description": "<pre class=\"hljs\"><code><span class=\"hljs-keyword\">const</span> car = <span class=\"hljs-keyword\">new</span> Car({ <span class...",
				"params": [],
				"returns": [],
				"extends": [
					"PhysicalObject"
				],
				"implements": [],
				"members": [
					{
						"id": "IamDhx6wEgrPvOUZgxNsa",
						"name": "DEFAULT_DRIVE_SHIFT",
						"brief": "",
						"defaultValue": "\"manual\"",
						"scope": "static",
						"type": "PropertyDoc",
						"params": [],
						"returns": [],
						"extends": [],
						"implements": []
					},
					{
						"id": "SGGvv0dmQxZQdCZ7vvSTW",
						"name": "bounds",
						"brief": "",
						"scope": "instance",
						"type": "PropertyDoc",
						"description": "<p>The mesh enclosing this object. By default, it is a &quot;point&quot; object at the its own\nposition.</p>",
						"params": [],
						"returns": [],
						"extends": [],
						"implements": []
					},
					{
						"id": "nhL9wfDa02tZjOmytc574",
						"name": "interactions",
						"brief": "<p>All causal interactions with other objects</p>",
						"scope": "instance",
						"type": "PropertyDoc",
						"params": [],
						"returns": [],
						"extends": [],
						"implements": []
					},
					{
						"id": "sEdGNJU3XJ4B7WxC0ipIC",
						"name": "mass",
						"brief": "<p>The mass of this object in kilograms.</p>",
						"defaultValue": "0",
						"scope": "instance",
						"type": "PropertyDoc",
						"params": [],
						"returns": [],
						"extends": [],
						"implements": []
					},
					{
						"id": "iiVyKmd5wD7yeAHIZ7eW8",
						"name": "model",
						"brief": "",
						"access": "public",
						"defaultValue": "\"TEST\"",
						"scope": "instance",
						"type": "PropertyDoc",
						"params": [],
						"returns": [],
						"extends": [],
						"implements": []
					},
					{
						"id": "gl35sopB0DzNzpN6W9Qrf",
						"name": "position",
						"brief": "<p>The absolute position of this object's center of mass (in the universal reference frame)</p>",
						"defaultValue": "[0, 0, 0]",
						"scope": "instance",
						"type": "PropertyDoc",
						"params": [],
						"returns": [],
						"extends": [],
						"implements": []
					},
					{
						"id": "DySvoYUUqm9EnsM36d3PD",
						"name": "velocity",
						"brief": "<p>The absolute velocity of this object (in the universal reference frame)</p>",
						"defaultValue": "[0, 0, 0]",
						"scope": "instance",
						"type": "PropertyDoc",
						"params": [],
						"returns": [],
						"extends": [],
						"implements": []
					},
					{
						"id": "KK6h9F0PnFkOz9gK5Lb0x",
						"name": "vin",
						"brief": "",
						"defaultValue": "0",
						"scope": "instance",
						"type": "PropertyDoc",
						"params": [],
						"returns": [],
						"extends": [],
						"implements": []
					},
					{
						"id": "KnsGGHnF9kZZ57QsZSbde",
						"name": "registerRetail",
						"brief": "<p>Register a retail dealer for buying a car from</p>",
						"scope": "static",
						"type": "MethodDoc",
						"params": [
							{
								"identifier": "name",
								"optional": false,
								"dataType": {
									"tokens": [
										{
											"value": "string",
											"kind": "canonical"
										}
									],
									"template": "string"
								}
							}
						],
						"returns": [],
						"extends": [],
						"implements": []
					},
					{
						"id": "3xCcbFzavVkixMRm7Ew7-",
						"name": "constructor",
						"brief": "",
						"scope": "instance",
						"type": "MethodDoc",
						"params": [
							{
								"identifier": "model",
								"optional": false,
								"default": "\"TEST\"",
								"dataType": {
									"tokens": [
										{
											"value": "string",
											"kind": "canonical"
										}
									],
									"template": "string"
								}
							}
						],
						"returns": [],
						"extends": [],
						"implements": []
					},
					{
						"id": "mtm4-UBDJFeqQ5vR8pon7",
						"name": "onCrash",
						"brief": "",
						"examples": [
							{
								"caption": "",
								"code": "\n car.onCrash((car) => console.logicalAssignment(car.id + \" crashed!\"))\n"
							}
						],
						"scope": "instance",
						"type": "MethodDoc",
						"params": [
							{
								"identifier": "callback",
								"optional": false,
								"dataType": {
									"tokens": [
										{
											"value": "Function",
											"kind": "canonical"
										}
									],
									"template": "Function"
								}
							},
							{
								"identifier": "callback.name",
								"dataType": {
									"tokens": [
										{
											"value": "string",
											"kind": "canonical"
										}
									],
									"template": "string"
								}
							}
						],
						"returns": [],
						"extends": [],
						"implements": []
					}
				]
			},
			{
				"id": "gzsu0Tzeme7-bO2FkinqN",
				"name": "CoffeeBean",
				"brief": "<p>This class illustrates how you can create a Java-bean like component in JavaScript</p>",
				"type": "ClassDoc",
				"params": [],
				"returns": [],
				"extends": [
					"Bean"
				],
				"implements": [],
				"members": [
					{
						"id": "adYMtDB1u7B62JzHTT7JH",
						"name": "maturity",
						"brief": "",
						"scope": "instance",
						"type": "PropertyDoc",
						"params": [],
						"returns": [],
						"extends": [],
						"implements": []
					},
					{
						"id": "f-t6NXHBUwyc4lRtaUaon",
						"name": "roasted",
						"brief": "",
						"scope": "instance",
						"type": "PropertyDoc",
						"params": [],
						"returns": [],
						"extends": [],
						"implements": []
					},
					{
						"id": "vFkDy2WG_l_KwTQFOrQ4v",
						"name": "constructor",
						"brief": "",
						"scope": "instance",
						"type": "MethodDoc",
						"params": [
							{
								"identifier": "options",
								"optional": true,
								"dataType": {
									"tokens": [
										{
											"value": "object",
											"kind": "canonical"
										}
									],
									"template": "object"
								}
							},
							{
								"identifier": "options.roasted",
								"optional": true,
								"description": "<p>whether the bean is <code>roasted</code></p>",
								"dataType": {
									"tokens": [
										{
											"value": "boolean",
											"kind": "canonical"
										}
									],
									"template": "boolean"
								}
							},
							{
								"identifier": "options.maturity",
								"optional": true,
								"dataType": {
									"tokens": [
										{
											"value": "number",
											"kind": "canonical"
										},
										{
											"value": "number",
											"kind": "canonical"
										}
									],
									"template": "%1"
								}
							}
						],
						"returns": [],
						"extends": [],
						"implements": []
					},
					{
						"id": "s-ZQ0PPqmx-LEDQxPQEsr",
						"name": "roast",
						"brief": "<p>Roast this coffee bean.</p>",
						"scope": "instance",
						"type": "MethodDoc",
						"description": "<p>NOTE: You cannot re-roast coffee beans and an error will be thrown if you try to\nroast a roasted coffee bean.</p>",
						"params": [],
						"returns": [],
						"extends": [],
						"implements": []
					}
				]
			},
			{
				"id": "ZK-2XKCi5Tb0OLZ1sgE7S",
				"name": "ExampleFactory",
				"type": "ClassDoc",
				"description": "<p>{@link ExampleFactory} can be used to build examples.</p>\n<pre class=\"hljs\"><code><span class=\"hljs-comment\">// <span clas...",
				"params": [
					{
						"identifier": "context",
						"optional": true,
						"default": "null",
						"description": "<p>A custom context for the factory.</p>",
						"dataType": {
							"tokens": [
								{
									"value": "ExampleContext",
									"kind": "canonical"
								},
								{
									"value": "ExampleContext",
									"kind": "canonical"
								}
							],
							"template": "%1"
						}
					}
				],
				"returns": [],
				"extends": [],
				"implements": [],
				"members": [
					{
						"id": "v9IU7n9UfimHgheQG34JV",
						"name": "getInstance",
						"brief": "<p>Gets a lazily-initialized, shared singleton instance of {@link ExampleFactory}.</p>",
						"scope": "static",
						"type": "MethodDoc",
						"params": [],
						"returns": [
							{
								"dataType": {
									"tokens": [
										{
											"value": "ExampleFactory",
											"kind": "canonical"
										},
										{
											"value": "ExampleFactory",
											"kind": "link"
										}
									],
									"template": "%1"
								}
							}
						],
						"extends": [],
						"implements": []
					},
					{
						"id": "6OI7BuZXr_ZUdEaA-SEwj",
						"name": "build",
						"brief": "<p>Build the road.</p>",
						"scope": "instance",
						"type": "MethodDoc",
						"params": [],
						"returns": [],
						"extends": [],
						"implements": []
					},
					{
						"id": "0skMBxOT9QOMUA0ikfcGL",
						"name": "constructor",
						"brief": "<p>This constructor should only be used for custom contexts.</p>",
						"access": "public",
						"scope": "instance",
						"type": "MethodDoc",
						"params": [
							{
								"identifier": "context",
								"optional": true,
								"default": "null",
								"description": "<p>A custom context for the factory.</p>",
								"dataType": {
									"tokens": [
										{
											"value": "ExampleContext",
											"kind": "canonical"
										},
										{
											"value": "ExampleContext",
											"kind": "canonical"
										}
									],
									"template": "%1"
								}
							}
						],
						"returns": []
					},
					{
						"id": "xHiihxUy1FyG7cfWEQwbZ",
						"name": "getContext",
						"brief": "<p>Get the context of this factory.</p>",
						"scope": "instance",
						"type": "MethodDoc",
						"params": [],
						"returns": [
							{
								"dataType": {
									"tokens": [
										{
											"value": "ExampleContext",
											"kind": "canonical"
										},
										{
											"value": "ExampleContext",
											"kind": "canonical"
										}
									],
									"template": "%1"
								}
							}
						],
						"extends": [],
						"implements": []
					}
				]
			},
			{
				"id": "Ezv0ZXnMVbydybxIVGISj",
				"name": "Gravity",
				"brief": "<p>This class shouldn't be documented!</p>",
				"type": "ClassDoc",
				"params": [],
				"returns": [],
				"extends": [
					"PhysicalInteraction"
				],
				"implements": [],
				"members": [
					{
						"id": "5tsDDSYOvvpktSknXyznu",
						"name": "constructor",
						"brief": "<p>This class shouldn't be documented!</p>",
						"access": "public",
						"scope": "instance",
						"type": "MethodDoc",
						"params": [],
						"returns": []
					},
					{
						"id": "_QJrxW3Pz-YBIKM1k7T5a",
						"name": "force",
						"brief": "<p>This method should be overriden to calculate the force at the given instant.</p>",
						"scope": "instance",
						"type": "MethodDoc",
						"params": [],
						"returns": [
							{
								"dataType": {
									"tokens": [
										{
											"value": "Vector<3>",
											"kind": "canonical"
										},
										{
											"value": "Vector",
											"kind": "link"
										},
										{
											"value": "3",
											"kind": "canonical"
										}
									],
									"template": "%1<%2>"
								}
							}
						],
						"extends": [],
						"implements": []
					}
				]
			},
			{
				"id": "bnbiinMJyVtMhrplZVTux",
				"name": "PhysicalInteraction",
				"brief": "",
				"readonly": true,
				"type": "ClassDoc",
				"description": "<p>A physical interaction is a force causes object positions to be re-evaulated each frame based on\nforce's magnitude.</p>",
				"params": [],
				"returns": [],
				"extends": [],
				"implements": [],
				"members": [
					{
						"id": "UZ7Daaoj1J8VdgAE85ZT9",
						"name": "GRAVITATIONAL_CONSTANT",
						"brief": "",
						"defaultValue": "1",
						"scope": "static",
						"type": "PropertyDoc",
						"params": [],
						"returns": [],
						"extends": [],
						"implements": []
					},
					{
						"id": "akamIDfFlSH6ZSbA_YyKS",
						"name": "createGravity",
						"brief": "<p>Creates a graviational force</p>",
						"scope": "static",
						"type": "MethodDoc",
						"params": [
							{
								"identifier": "objects",
								"optional": false,
								"dataType": {
									"tokens": [
										{
											"value": "Tuple<PhysicalObject, 2>",
											"kind": "canonical"
										},
										{
											"value": "Tuple",
											"kind": "canonical"
										},
										{
											"value": "PhysicalObject",
											"kind": "link"
										},
										{
											"value": "2",
											"kind": "canonical"
										}
									],
									"template": "%1<%3, %2>"
								}
							}
						],
						"returns": [
							{
								"dataType": {
									"tokens": [
										{
											"value": "PhysicalInteraction",
											"kind": "canonical"
										},
										{
											"value": "PhysicalInteraction",
											"kind": "link"
										}
									],
									"template": "%1"
								}
							}
						],
						"extends": [],
						"implements": []
					},
					{
						"id": "2_PAHgqXFQ-pe1M8KnafY",
						"name": "force",
						"brief": "<p>This method should be overriden to calculate the force at the given instant.</p>",
						"scope": "instance",
						"type": "MethodDoc",
						"params": [],
						"returns": [
							{
								"dataType": {
									"tokens": [
										{
											"value": "Vector<3>",
											"kind": "canonical"
										},
										{
											"value": "Vector",
											"kind": "link"
										},
										{
											"value": "3",
											"kind": "canonical"
										}
									],
									"template": "%1<%2>"
								}
							}
						],
						"extends": [],
						"implements": []
					}
				]
			},
			{
				"id": "k4jpjfgV5USKSZPThZrt-",
				"name": "PhysicalObject",
				"brief": "",
				"type": "ClassDoc",
				"description": "<p>Represents a physical-object and its intrinsic properties. This is useful for approximating\nextended objects as a uniform,...",
				"params": [],
				"returns": [],
				"extends": [],
				"implements": [],
				"members": [
					{
						"id": "t9qzzTWB0ZMnC357qLYIT",
						"name": "bounds",
						"brief": "",
						"scope": "instance",
						"type": "PropertyDoc",
						"description": "<p>The mesh enclosing this object. By default, it is a &quot;point&quot; object at the its own\nposition.</p>",
						"params": [],
						"returns": [],
						"extends": [],
						"implements": []
					},
					{
						"id": "nS9k1XQoTLuhU6-vqVj0A",
						"name": "interactions",
						"brief": "<p>All causal interactions with other objects</p>",
						"scope": "instance",
						"type": "PropertyDoc",
						"params": [],
						"returns": [],
						"extends": [],
						"implements": []
					},
					{
						"id": "ToONEXIcV6pre5SQvjmtn",
						"name": "mass",
						"brief": "<p>The mass of this object in kilograms.</p>",
						"defaultValue": "0",
						"scope": "instance",
						"type": "PropertyDoc",
						"params": [],
						"returns": [],
						"extends": [],
						"implements": []
					},
					{
						"id": "Tfx-BEiZOLLVxycdt1xdN",
						"name": "position",
						"brief": "<p>The absolute position of this object's center of mass (in the universal reference frame)</p>",
						"defaultValue": "[0, 0, 0]",
						"scope": "instance",
						"type": "PropertyDoc",
						"params": [],
						"returns": [],
						"extends": [],
						"implements": []
					},
					{
						"id": "VxryQtkyfwHv2YFwSAxhB",
						"name": "velocity",
						"brief": "<p>The absolute velocity of this object (in the universal reference frame)</p>",
						"defaultValue": "[0, 0, 0]",
						"scope": "instance",
						"type": "PropertyDoc",
						"params": [],
						"returns": [],
						"extends": [],
						"implements": []
					}
				]
			},
			{
				"id": "8JJXxbcIycQmZ_a7iHvcG",
				"name": "Vector",
				"brief": "",
				"type": "ClassDoc",
				"params": [],
				"returns": [],
				"extends": [
					"Array"
				],
				"implements": [],
				"members": [
					{
						"id": "ZzB6gLKChvi5EXZU5nhHp",
						"name": "dimensions",
						"brief": "",
						"scope": "instance",
						"type": "PropertyDoc",
						"description": "<p>The no. of components of this vector</p>",
						"params": [],
						"returns": [],
						"extends": [],
						"implements": []
					},
					{
						"id": "5CotgW4PEkMmy5tw-l9xR",
						"name": "add",
						"brief": "<p>Add <code>vec</code> to this</p>",
						"scope": "instance",
						"type": "MethodDoc",
						"params": [
							{
								"identifier": "vec",
								"optional": false,
								"dataType": {
									"tokens": [
										{
											"value": "Vector",
											"kind": "canonical"
										},
										{
											"value": "Vector",
											"kind": "link"
										}
									],
									"template": "%1"
								}
							}
						],
						"returns": [],
						"extends": [],
						"implements": []
					},
					{
						"id": "SFpt4lPMOq8M9sVDLrz1i",
						"name": "equalTo",
						"brief": "<p>Whether this and <code>vec</code> are equal vectors</p>",
						"scope": "instance",
						"type": "MethodDoc",
						"params": [
							{
								"identifier": "vec",
								"optional": false,
								"dataType": {
									"tokens": [
										{
											"value": "Vector",
											"kind": "canonical"
										},
										{
											"value": "Vector",
											"kind": "link"
										}
									],
									"template": "%1"
								}
							}
						],
						"returns": [
							{
								"dataType": {
									"tokens": [
										{
											"value": "boolean",
											"kind": "canonical"
										}
									],
									"template": "boolean"
								}
							}
						],
						"extends": [],
						"implements": []
					},
					{
						"id": "Vey_DoU4xy9puACdCo4zH",
						"name": "isCompat",
						"brief": "",
						"scope": "instance",
						"type": "MethodDoc",
						"description": "<p>Whether this and <code>vec</code> are compatible vectors (same dimensions)</p>",
						"params": [
							{
								"identifier": "vec",
								"optional": false,
								"dataType": {
									"tokens": [
										{
											"value": "Vector",
											"kind": "canonical"
										},
										{
											"value": "Vector",
											"kind": "link"
										}
									],
									"template": "%1"
								}
							}
						],
						"returns": [
							{
								"dataType": {
									"tokens": [
										{
											"value": "boolean",
											"kind": "canonical"
										}
									],
									"template": "boolean"
								}
							}
						],
						"extends": [],
						"implements": []
					}
				]
			},
			{
				"id": "xLZUu06goI0EsIhPgwU4Z",
				"name": "CAR_MAKES",
				"brief": "",
				"see": [
					"CarDealer"
				],
				"type": "EnumDoc",
				"description": "<p>These are the possible types of car makes.</p>",
				"params": [],
				"returns": [],
				"extends": [],
				"implements": [],
				"members": [
					{
						"id": "U5I72YfByDcMlSJ9OaFjG",
						"name": "FERRARI",
						"brief": "",
						"access": "public",
						"scope": "static",
						"type": "PropertyDoc"
					},
					{
						"id": "QdQz_i8g1g7Gkhep4ApxK",
						"name": "FORD",
						"brief": "",
						"access": "public",
						"scope": "static",
						"type": "PropertyDoc"
					},
					{
						"id": "5CEpAGoy6gQosTAgL530B",
						"name": "GENERAL_MOTORS",
						"brief": "",
						"access": "public",
						"scope": "static",
						"type": "PropertyDoc"
					},
					{
						"id": "6ZB1FkZb_AEWdA0S03dUr",
						"name": "JAGUAR",
						"brief": "",
						"access": "public",
						"scope": "static",
						"type": "PropertyDoc"
					},
					{
						"id": "QfdbeU5qaKGIAmAs9yMMS",
						"name": "KIA",
						"brief": "",
						"access": "public",
						"scope": "static",
						"type": "PropertyDoc"
					},
					{
						"id": "3EPuluV3hOPiime7b4e6Q",
						"name": "LAMBORGHINI",
						"brief": "",
						"access": "public",
						"scope": "static",
						"type": "PropertyDoc"
					},
					{
						"id": "iVEA5NlyVbxSupFgSSKrj",
						"name": "TOYOTA",
						"brief": "",
						"access": "public",
						"scope": "static",
						"type": "PropertyDoc",
						"description": "<p>toyota make</p>"
					}
				]
			},
			{
				"id": "S6GGOen1iZ7NTd7u0H09A",
				"name": "VectorArray",
				"brief": "",
				"type": "TypedefDoc",
				"description": "<p>A 3D vector</p>",
				"params": [],
				"returns": [],
				"extends": [],
				"implements": [],
				"members": [
					{
						"id": "D5aHVr0sWTnS9HgYnvpTp",
						"name": "meta",
						"brief": "",
						"access": "public",
						"scope": "static",
						"type": "PropertyDoc"
					}
				]
			},
			{
				"id": "y1XyniqVZyr38FnIw3_G1",
				"name": "CarDealer",
				"brief": "<p>This is the interface for dealing with car dealers.</p>",
				"type": "InterfaceDoc",
				"params": [],
				"returns": [],
				"extends": [],
				"implements": [],
				"members": [
					{
						"id": "E_mOoBlaWyEN0c8CF9JeN",
						"name": "closeTransaction",
						"brief": "<p>Close transaction. If you respond to the counteroffer, then it won't be closed.</p>",
						"type": "MethodDoc",
						"params": [
							{
								"identifier": "trans",
								"optional": false,
								"dataType": {
									"tokens": [
										{
											"value": "Transaction",
											"kind": "canonical"
										},
										{
											"value": "Ts.Transaction",
											"kind": "link"
										}
									],
									"template": "%1"
								}
							},
							{
								"identifier": "counteroffer",
								"optional": false,
								"dataType": {
									"tokens": [
										{
											"value": "(...t: Transaction) => void",
											"kind": "canonical"
										},
										{
											"value": "Ts.Transaction",
											"kind": "link"
										}
									],
									"template": "(...t: %1) => void"
								}
							}
						],
						"returns": [
							{
								"dataType": {
									"tokens": [
										{
											"value": "trans is Transaction",
											"kind": "canonical"
										},
										{
											"value": "Ts.Transaction",
											"kind": "link"
										}
									],
									"template": "trans is %1"
								}
							}
						],
						"extends": [],
						"implements": []
					},
					{
						"id": "oVyAzMRSXo6NwdGLjYSvW",
						"name": "initiateTransaction",
						"brief": "<p>Initiate a transaction/negotiation with a car dealer</p>",
						"type": "MethodDoc",
						"params": [
							{
								"identifier": "x",
								"optional": true,
								"description": "<p>info</p>",
								"dataType": {
									"tokens": [
										{
											"value": "object",
											"kind": "canonical"
										}
									],
									"template": "object"
								}
							}
						],
						"returns": [
							{
								"dataType": {
									"tokens": [
										{
											"value": "typeof Transaction",
											"kind": "canonical"
										},
										{
											"value": "Ts.Transaction",
											"kind": "link"
										}
									],
									"template": "typeof %1"
								}
							}
						],
						"extends": [],
						"implements": []
					},
					{
						"id": "XmAkZpysCRemjpOgrVKiE",
						"name": "offerAsk",
						"brief": "<p>Offer a price to sell the car.</p>",
						"type": "MethodDoc",
						"description": "<p>NOTE: This is invalid behaviour if you are the buyer in the transaction.</p>",
						"params": [
							{
								"identifier": "on",
								"optional": false,
								"dataType": {
									"tokens": [
										{
											"value": "Transaction",
											"kind": "canonical"
										},
										{
											"value": "Ts.Transaction",
											"kind": "link"
										}
									],
									"template": "%1"
								}
							},
							{
								"identifier": "counteroffer",
								"optional": true,
								"dataType": {
									"tokens": [
										{
											"value": "(t: Car) => void",
											"kind": "canonical"
										},
										{
											"value": "Car",
											"kind": "link"
										}
									],
									"template": "(t: %1) => void"
								}
							},
							{
								"identifier": "test",
								"optional": false,
								"dataType": {
									"tokens": [
										{
											"value": "{ [testProperty in keyof keyof] }: number",
											"kind": "canonical"
										}
									],
									"template": "{ [testProperty in keyof keyof] }: number"
								}
							}
						],
						"returns": [
							{
								"description": "<p>type inference is working</p>",
								"dataType": {
									"tokens": [
										{
											"value": "boolean",
											"kind": "canonical"
										}
									],
									"template": "boolean"
								}
							}
						],
						"extends": [],
						"implements": []
					},
					{
						"id": "cXa0VkDY_Us8OvLdhh3KJ",
						"name": "offerBid",
						"brief": "<p>Offer a price to buy the car.</p>",
						"type": "MethodDoc",
						"description": "<p>NOTE: This is invalid behaviour if you are the seller in the transaction.</p>",
						"params": [
							{
								"identifier": "on",
								"optional": true,
								"dataType": {
									"tokens": [
										{
											"value": "{ t : Transaction, [id: string]: Transaction[] }",
											"kind": "canonical"
										},
										{
											"value": "Ts.Transaction",
											"kind": "link"
										},
										{
											"value": "Ts.Transaction",
											"kind": "link"
										}
									],
									"template": "{ t : %1, [id: string]: %2[] }"
								}
							},
							{
								"identifier": "counteroffer",
								"optional": true,
								"variadic": true,
								"dataType": {
									"tokens": [
										{
											"value": "Car | Vector",
											"kind": "canonical"
										},
										{
											"value": "Car",
											"kind": "link"
										},
										{
											"value": "Vector",
											"kind": "link"
										}
									],
									"template": "%1 | %2"
								}
							}
						],
						"returns": [
							{
								"dataType": {
									"tokens": [
										{
											"value": "boolean",
											"kind": "canonical"
										}
									],
									"template": "boolean"
								}
							}
						],
						"extends": [],
						"implements": []
					}
				]
			},
			{
				"id": "OBK1SiFqwW_NA6P354JhJ",
				"name": "installBean",
				"brief": "<p>Install a bean class</p>",
				"type": "FunctionDoc",
				"params": [
					{
						"identifier": "bean",
						"optional": false,
						"description": "<p>the bean class</p>",
						"dataType": {
							"tokens": [
								{
									"value": "{ new (): Bean }",
									"kind": "canonical"
								},
								{
									"value": "Bean",
									"kind": "link"
								}
							],
							"template": "{ new (): %1 }"
						}
					}
				],
				"returns": [
					{
						"dataType": {
							"tokens": [
								{
									"value": "void",
									"kind": "canonical"
								}
							],
							"template": "void"
						}
					}
				],
				"extends": [],
				"implements": []
			},
			{
				"id": "nmXCSrKrhIrxrz8sYcjmi",
				"name": "isPhysicalObject",
				"brief": "",
				"authors": [
					"Shukant K. Pal &lt;shukantpal@outlook.com&gt;"
				],
				"copyright": "Shukant K. Pal (C) 2020",
				"license": "MIT",
				"see": [
					"PhysicalObject"
				],
				"since": "2020",
				"type": "FunctionDoc",
				"description": "<p>Checks whether the object is an instance of {@code PhysicalObject}.</p>",
				"params": [
					{
						"identifier": "object",
						"optional": false,
						"dataType": {
							"tokens": [
								{
									"value": "Object",
									"kind": "canonical"
								}
							],
							"template": "Object"
						}
					}
				],
				"returns": [
					{
						"dataType": {
							"tokens": [
								{
									"value": "boolean",
									"kind": "canonical"
								}
							],
							"template": "boolean"
						}
					}
				],
				"extends": [],
				"implements": []
			}
		]
	},
	"registry": {
		"pkg-Dz_JejfI9ys-TlTvVhAD4": {
			"uri": "/example-documentation/@webdoc/example.html"
		},
		"tutorial-car": {
			"uri": "/example-documentation/tutorials/car.html"
		},
		"tutorial-road": {
			"uri": "/example-documentation/tutorials/road.html"
		},
		"tutorial-api-manifest": {
			"uri": "/example-documentation/tutorials/api-manifest.html"
		},
		"kyvTRVf5gopIvJjJbtfzq": {
			"uri": "/example-documentation/@webdoc/example/PIXI.html"
		},
		"5Hmjkj8h14YlbiYJyoYQj": {
			"uri": "/example-documentation/@webdoc/example/PIXI/utils.html"
		},
		"OqcVs10l0LTN8c54VWHx3": {
			"uri": "/example-documentation/@webdoc/example/PIXI/utils/skipHello.html"
		},
		"DffmscPRG0NTD9mkyxExq": {
			"uri": "/example-documentation/@webdoc/example/PIXI/TilingSprite.html"
		},
		"_3eLdOkqn5EmVaFyQkpgg": {
			"uri": "/example-documentation/@webdoc/example/PIXI/TilingSprite.html#constructor"
		},
		"ovca4Coj4dCsSIRWji_GT": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractRenderer.html"
		},
		"YvJ-mmkOvff_lZp-KNxha": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractRenderer.html#backgroundColor"
		},
		"vNCBYJDAipmiRQ8elbPRA": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractRenderer.html#constructor"
		},
		"P2gnlSpLicvxWhvfkqfLO": {
			"uri": "/example-documentation/@webdoc/example/PIXI/ObjectRenderer.html"
		},
		"9c01SahNZR755qGk6w_Lc": {
			"uri": "/example-documentation/@webdoc/example/PIXI/ObjectRenderer.html#renderer"
		},
		"K-RhNhDwyF_Zfg5tepaNg": {
			"uri": "/example-documentation/@webdoc/example/PIXI/ObjectRenderer.html#constructor"
		},
		"ppCd_JBH1Vb_tIB4D6h4v": {
			"uri": "/example-documentation/@webdoc/example/PIXI/ObjectRenderer.html#destroy"
		},
		"Yuizvt0MN4FmIndnnJznY": {
			"uri": "/example-documentation/@webdoc/example/PIXI/ObjectRenderer.html#flush"
		},
		"sljEW_PBOA_LDLWV38vNn": {
			"uri": "/example-documentation/@webdoc/example/PIXI/ObjectRenderer.html#render"
		},
		"WUgHIzNtp4h9-hzwIqhiz": {
			"uri": "/example-documentation/@webdoc/example/PIXI/ObjectRenderer.html#start"
		},
		"S2LmBSsGAcp8nnaGmGpBZ": {
			"uri": "/example-documentation/@webdoc/example/PIXI/ObjectRenderer.html#stop"
		},
		"LnrBVjyZ7SLpXclHzL7eq": {
			"uri": "/example-documentation/@webdoc/example/PIXI/System.html"
		},
		"ZheKec2dNrcDIBe1Iju4-": {
			"uri": "/example-documentation/@webdoc/example/PIXI/System.html#renderer"
		},
		"jkeTG0MONs3DC4aFLJ_qQ": {
			"uri": "/example-documentation/@webdoc/example/PIXI/System.html#constructor"
		},
		"gh4rez1yNTmn5SddamgZO": {
			"uri": "/example-documentation/@webdoc/example/PIXI/System.html#destroy"
		},
		"iI-LoN5aRaM48ymQ-sZjZ": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html"
		},
		"M__ZKW8-sAv0OUs4K6ycy": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#_drawCallPool"
		},
		"MCFXJY9KWqgXGlIjcg_Hw": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#_textureArrayPool"
		},
		"GYVWeiuOmvlL7oscFFuqA": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#bufferSize"
		},
		"FaGHF-Ac48_kvEyt1hQ9x": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#MAX_TEXTURES"
		},
		"5OOsKoFK5tVZWsixYCPpp": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#renderer"
		},
		"kfCXqjpzVFrrEW1c2Iet4": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#size"
		},
		"gk_v673Cw0vbj6e1VModl": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#state"
		},
		"uLEugbMrjIaHQ1SOGi8m8": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#vertexSize"
		},
		"ZYZQvq1jsGxr6ISgzb-vr": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#_shader"
		},
		"TlyN2Mac-mQ72TKsktDr2": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#geometryClass"
		},
		"0HnEJezqBYdeX1UvZMvI9": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#shaderGenerator"
		},
		"ncOp-dZOuDK4DhucgaEGa": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#_aBuffers"
		},
		"94cR2aBWcLbXFb1ecBU-N": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#_bufferedElements"
		},
		"PhQFxhwB8CyU4g-lBf7AO": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#_bufferedTextures"
		},
		"oc2MFINhgjNVC2Z4Dw2b0": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#_bufferSize"
		},
		"FCFmGmcjiZgmVtgMLZeVa": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#_flushId"
		},
		"qgSikHhqp0wwfKG3PW2wt": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#_iBuffers"
		},
		"KUf33XoDotEqP9KVP7vvk": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#_indexCount"
		},
		"ypMWak5AvAH4HfnnV__gV": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#_packedGeometries"
		},
		"y1MfKU9zv87TFbCxHPN0D": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#_packedGeometryPoolSize"
		},
		"6h0RK1CvWcGC887K3U4tP": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#_vertexCount"
		},
		"bpyTysqlv-o2UZyWXHluP": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#bindAndClearTexArray"
		},
		"JZNr8yhDeE0n_YMFXbcAR": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#buildDrawCalls"
		},
		"EnrZgRDRlq8u_HEk0dCMN": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#constructor"
		},
		"eT5qbLbLrvx7MjAwjxczh": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#contextChange"
		},
		"-ougllGRHkBEMC5oZyswz": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#destroy"
		},
		"7mTba_7Pz72sorHLk5nsl": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#flush"
		},
		"HuhIhB-r11EY1OEuLq_QF": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#initFlushBuffers"
		},
		"6FCPalZPF5v9N-IFaxlU2": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#onPrerender"
		},
		"F-m2Q3G-ZEWrpXg39QssT": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#packInterleavedGeometry"
		},
		"ObSF84ssVHTwNSlm0mGua": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#render"
		},
		"cXWsNdwhxC5s44K2h9MSm": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#start"
		},
		"TigWE1-dGUwdoJ0CLOufb": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#stop"
		},
		"FdBbs_PlclzBlB3goCWUC": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#getAttributeBuffer"
		},
		"tqXGpPEjaMZk3Kxqm5oWo": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#getIndexBuffer"
		},
		"bA5dh8xjvVg5VsHicOk_q": {
			"uri": "/example-documentation/@webdoc/example/PIXI/TRANSFORM_MODE.html"
		},
		"_2FdPk17NRARYqztR6w4X": {
			"uri": "/example-documentation/@webdoc/example/PIXI/TRANSFORM_MODE.html#DYNAMIC"
		},
		"HtHt89U1cA6VkGDb99q53": {
			"uri": "/example-documentation/@webdoc/example/PIXI/TRANSFORM_MODE.html#STATIC"
		},
		"Y_zmvnR2OJTiCk3IS07Sl": {
			"uri": "/example-documentation/@webdoc/example/PIXI/.html"
		},
		"SgEXBwToghcShvcDPZIuV": {
			"uri": "/example-documentation/@webdoc/example/PIXI/.html#destroy"
		},
		"RmLOPvQpz3FjYgiaWUwjB": {
			"uri": "/example-documentation/@webdoc/example/PIXI/.html#init"
		},
		"QZC5knJBxBVjAfUfPDYT9": {
			"uri": "/example-documentation/@webdoc/example/PIXI.html#SVG_SIZE"
		},
		"RVdnehRu4AZN1LLtA-p2W": {
			"uri": "/example-documentation/@webdoc/example/R.html"
		},
		"JLVMeaCrf5oW4HaCz0ZG-": {
			"uri": "/example-documentation/@webdoc/example/R/Road.html"
		},
		"_HQP8L8wUVsuiy6NvV1Ts": {
			"uri": "/example-documentation/@webdoc/example/R/Road.html#constructor"
		},
		"V3rSD6T8V5qo3nz3RgSb3": {
			"uri": "/example-documentation/@webdoc/example/R.html#DEFAULT_LANES"
		},
		"fg-p_kI-MUBwHCwhaxKgB": {
			"uri": "/example-documentation/@webdoc/example/R.html#buildRoad"
		},
		"ABCNtIqqMEZZu0xgEUO_V": {
			"uri": "/example-documentation/@webdoc/example/Ts.html"
		},
		"biW4o-aDffHxDHVNzMOnR": {
			"uri": "/example-documentation/@webdoc/example/Ts/Transaction.html"
		},
		"INDtN5k80LrFERlQ_A3Gi": {
			"uri": "/example-documentation/@webdoc/example/Ts/Transaction.html#constructor"
		},
		"FhYUcxMvMKqf5QKijGqvM": {
			"uri": "/example-documentation/@webdoc/example/Ts/Banana.html"
		},
		"fNd3n8YSTnJjV4br4McST": {
			"uri": "/example-documentation/@webdoc/example/Ts/Banana.html#color"
		},
		"QlIquzJj4SfgJniYJrwhA": {
			"uri": "/example-documentation/@webdoc/example/Ts/Banana.html#peels"
		},
		"kzQvkse8zKJo24YMz73lj": {
			"uri": "/example-documentation/@webdoc/example/Ts/Banana.html#usage"
		},
		"GB4NL0LMhsteV9IVI6tuY": {
			"uri": "/example-documentation/@webdoc/example/Ts/Banana.html#ripe"
		},
		"2BApOWC-nlr66UJEHaols": {
			"uri": "/example-documentation/@webdoc/example/Ts/Banana.html#rotten"
		},
		"7KvluYRdEDZzEvEZSE6nA": {
			"uri": "/example-documentation/@webdoc/example/Bean.html"
		},
		"O_65ZQKb5Duk1b_dUVlVK": {
			"uri": "/example-documentation/@webdoc/example/Bean.html#constructor"
		},
		"9c_uRDDgI0LsOWRIL2xim": {
			"uri": "/example-documentation/@webdoc/example/Bean.html#roast"
		},
		"PUzKIhuFDkz7OaiDDq1Fq": {
			"uri": "/example-documentation/@webdoc/example/Car.html"
		},
		"IamDhx6wEgrPvOUZgxNsa": {
			"uri": "/example-documentation/@webdoc/example/Car.html#DEFAULT_DRIVE_SHIFT"
		},
		"SGGvv0dmQxZQdCZ7vvSTW": {
			"uri": "/example-documentation/@webdoc/example/Car.html#bounds"
		},
		"nhL9wfDa02tZjOmytc574": {
			"uri": "/example-documentation/@webdoc/example/Car.html#interactions"
		},
		"sEdGNJU3XJ4B7WxC0ipIC": {
			"uri": "/example-documentation/@webdoc/example/Car.html#mass"
		},
		"iiVyKmd5wD7yeAHIZ7eW8": {
			"uri": "/example-documentation/@webdoc/example/Car.html#model"
		},
		"gl35sopB0DzNzpN6W9Qrf": {
			"uri": "/example-documentation/@webdoc/example/Car.html#position"
		},
		"DySvoYUUqm9EnsM36d3PD": {
			"uri": "/example-documentation/@webdoc/example/Car.html#velocity"
		},
		"KK6h9F0PnFkOz9gK5Lb0x": {
			"uri": "/example-documentation/@webdoc/example/Car.html#vin"
		},
		"KnsGGHnF9kZZ57QsZSbde": {
			"uri": "/example-documentation/@webdoc/example/Car.html#registerRetail"
		},
		"3xCcbFzavVkixMRm7Ew7-": {
			"uri": "/example-documentation/@webdoc/example/Car.html#constructor"
		},
		"mtm4-UBDJFeqQ5vR8pon7": {
			"uri": "/example-documentation/@webdoc/example/Car.html#onCrash"
		},
		"gzsu0Tzeme7-bO2FkinqN": {
			"uri": "/example-documentation/@webdoc/example/CoffeeBean.html"
		},
		"adYMtDB1u7B62JzHTT7JH": {
			"uri": "/example-documentation/@webdoc/example/CoffeeBean.html#maturity"
		},
		"f-t6NXHBUwyc4lRtaUaon": {
			"uri": "/example-documentation/@webdoc/example/CoffeeBean.html#roasted"
		},
		"vFkDy2WG_l_KwTQFOrQ4v": {
			"uri": "/example-documentation/@webdoc/example/CoffeeBean.html#constructor"
		},
		"s-ZQ0PPqmx-LEDQxPQEsr": {
			"uri": "/example-documentation/@webdoc/example/CoffeeBean.html#roast"
		},
		"ZK-2XKCi5Tb0OLZ1sgE7S": {
			"uri": "/example-documentation/@webdoc/example/ExampleFactory.html"
		},
		"v9IU7n9UfimHgheQG34JV": {
			"uri": "/example-documentation/@webdoc/example/ExampleFactory.html#getInstance"
		},
		"6OI7BuZXr_ZUdEaA-SEwj": {
			"uri": "/example-documentation/@webdoc/example/ExampleFactory.html#build"
		},
		"0skMBxOT9QOMUA0ikfcGL": {
			"uri": "/example-documentation/@webdoc/example/ExampleFactory.html#constructor"
		},
		"xHiihxUy1FyG7cfWEQwbZ": {
			"uri": "/example-documentation/@webdoc/example/ExampleFactory.html#getContext"
		},
		"Ezv0ZXnMVbydybxIVGISj": {
			"uri": "/example-documentation/@webdoc/example/Gravity.html"
		},
		"5tsDDSYOvvpktSknXyznu": {
			"uri": "/example-documentation/@webdoc/example/Gravity.html#constructor"
		},
		"_QJrxW3Pz-YBIKM1k7T5a": {
			"uri": "/example-documentation/@webdoc/example/Gravity.html#force"
		},
		"bnbiinMJyVtMhrplZVTux": {
			"uri": "/example-documentation/@webdoc/example/PhysicalInteraction.html"
		},
		"UZ7Daaoj1J8VdgAE85ZT9": {
			"uri": "/example-documentation/@webdoc/example/PhysicalInteraction.html#GRAVITATIONAL_CONSTANT"
		},
		"akamIDfFlSH6ZSbA_YyKS": {
			"uri": "/example-documentation/@webdoc/example/PhysicalInteraction.html#createGravity"
		},
		"2_PAHgqXFQ-pe1M8KnafY": {
			"uri": "/example-documentation/@webdoc/example/PhysicalInteraction.html#force"
		},
		"k4jpjfgV5USKSZPThZrt-": {
			"uri": "/example-documentation/@webdoc/example/PhysicalObject.html"
		},
		"t9qzzTWB0ZMnC357qLYIT": {
			"uri": "/example-documentation/@webdoc/example/PhysicalObject.html#bounds"
		},
		"nS9k1XQoTLuhU6-vqVj0A": {
			"uri": "/example-documentation/@webdoc/example/PhysicalObject.html#interactions"
		},
		"ToONEXIcV6pre5SQvjmtn": {
			"uri": "/example-documentation/@webdoc/example/PhysicalObject.html#mass"
		},
		"Tfx-BEiZOLLVxycdt1xdN": {
			"uri": "/example-documentation/@webdoc/example/PhysicalObject.html#position"
		},
		"VxryQtkyfwHv2YFwSAxhB": {
			"uri": "/example-documentation/@webdoc/example/PhysicalObject.html#velocity"
		},
		"8JJXxbcIycQmZ_a7iHvcG": {
			"uri": "/example-documentation/@webdoc/example/Vector.html"
		},
		"ZzB6gLKChvi5EXZU5nhHp": {
			"uri": "/example-documentation/@webdoc/example/Vector.html#dimensions"
		},
		"5CotgW4PEkMmy5tw-l9xR": {
			"uri": "/example-documentation/@webdoc/example/Vector.html#add"
		},
		"SFpt4lPMOq8M9sVDLrz1i": {
			"uri": "/example-documentation/@webdoc/example/Vector.html#equalTo"
		},
		"Vey_DoU4xy9puACdCo4zH": {
			"uri": "/example-documentation/@webdoc/example/Vector.html#isCompat"
		},
		"xLZUu06goI0EsIhPgwU4Z": {
			"uri": "/example-documentation/@webdoc/example/CAR_MAKES.html"
		},
		"U5I72YfByDcMlSJ9OaFjG": {
			"uri": "/example-documentation/@webdoc/example/CAR_MAKES.html#FERRARI"
		},
		"QdQz_i8g1g7Gkhep4ApxK": {
			"uri": "/example-documentation/@webdoc/example/CAR_MAKES.html#FORD"
		},
		"5CEpAGoy6gQosTAgL530B": {
			"uri": "/example-documentation/@webdoc/example/CAR_MAKES.html#GENERAL_MOTORS"
		},
		"6ZB1FkZb_AEWdA0S03dUr": {
			"uri": "/example-documentation/@webdoc/example/CAR_MAKES.html#JAGUAR"
		},
		"QfdbeU5qaKGIAmAs9yMMS": {
			"uri": "/example-documentation/@webdoc/example/CAR_MAKES.html#KIA"
		},
		"3EPuluV3hOPiime7b4e6Q": {
			"uri": "/example-documentation/@webdoc/example/CAR_MAKES.html#LAMBORGHINI"
		},
		"iVEA5NlyVbxSupFgSSKrj": {
			"uri": "/example-documentation/@webdoc/example/CAR_MAKES.html#TOYOTA"
		},
		"S6GGOen1iZ7NTd7u0H09A": {
			"uri": "/example-documentation/@webdoc/example/VectorArray.html"
		},
		"D5aHVr0sWTnS9HgYnvpTp": {
			"uri": "/example-documentation/@webdoc/example/VectorArray.html#meta"
		},
		"y1XyniqVZyr38FnIw3_G1": {
			"uri": "/example-documentation/@webdoc/example/CarDealer.html"
		},
		"E_mOoBlaWyEN0c8CF9JeN": {
			"uri": "/example-documentation/@webdoc/example/CarDealer.html#closeTransaction"
		},
		"oVyAzMRSXo6NwdGLjYSvW": {
			"uri": "/example-documentation/@webdoc/example/CarDealer.html#initiateTransaction"
		},
		"XmAkZpysCRemjpOgrVKiE": {
			"uri": "/example-documentation/@webdoc/example/CarDealer.html#offerAsk"
		},
		"cXa0VkDY_Us8OvLdhh3KJ": {
			"uri": "/example-documentation/@webdoc/example/CarDealer.html#offerBid"
		},
		"OBK1SiFqwW_NA6P354JhJ": {
			"uri": "/example-documentation/@webdoc/example/installBean.html"
		},
		"nmXCSrKrhIrxrz8sYcjmi": {
			"uri": "/example-documentation/@webdoc/example/isPhysicalObject.html"
		}
	}
}