{
	"version": "1.0.0",
	"metadata": {
		"linker": "(unsigned)",
		"siteDomain": "https://webdoc-labs.github.io",
		"siteRoot": "example-documentation"
	},
	"root": {
		"id": "root-uJ6Ly_1sBF-gRfxAIoEs5",
		"name": "",
		"type": "RootDoc",
		"members": [
			{
				"id": "bPLElHQ4x1WPxxFGZOXMn",
				"name": "PIXI",
				"brief": "",
				"type": "NSDoc",
				"params": [],
				"returns": [],
				"extends": [],
				"implements": [],
				"members": [
					{
						"id": "UjJGmZP_mhpx4vS8h_ORG",
						"name": "utils",
						"brief": "",
						"defaultValue": "false",
						"scope": "static",
						"type": "NSDoc",
						"params": [],
						"returns": [],
						"extends": [],
						"implements": [],
						"members": [
							{
								"id": "_lWrkopBd99RyRIipAfTK",
								"name": "skipHello",
								"brief": "<p>Skips the hello message of renderers that are created after this is run.</p>",
								"deprecated": true,
								"type": "FunctionDoc",
								"params": [],
								"returns": [
									{
										"dataType": {
											"tokens": [
												{
													"value": "void",
													"kind": "canonical"
												}
											],
											"template": "void"
										}
									}
								],
								"extends": [],
								"implements": []
							}
						]
					},
					{
						"id": "z0dzCU6Sev3Mb0uR-UtU1",
						"name": "TilingSprite",
						"brief": "",
						"deprecated": "since 5.0.0",
						"scope": "static",
						"see": [
							"PIXI.TilingSprite"
						],
						"type": "ClassDoc",
						"params": [],
						"returns": [],
						"extends": [],
						"implements": [],
						"members": [
							{
								"id": "czeR1ZfF3lHoIuWs4rqdr",
								"name": "constructor",
								"brief": "",
								"access": "public",
								"scope": "instance",
								"type": "MethodDoc",
								"params": [],
								"returns": []
							}
						]
					},
					{
						"id": "Si0vqrP7_GiL-iYOOfBbD",
						"name": "AbstractRenderer",
						"brief": "",
						"type": "ClassDoc",
						"params": [],
						"returns": [],
						"extends": [],
						"implements": [],
						"members": [
							{
								"id": "1hi3cj_XyjmjDIOdxKZ4k",
								"name": "backgroundColor",
								"brief": "<p>The background color to fill if not transparent</p>",
								"scope": "instance",
								"type": "PropertyDoc",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "VAO3NgWKASsaOkLn77W7l",
								"name": "constructor",
								"brief": "",
								"access": "public",
								"scope": "instance",
								"type": "MethodDoc",
								"params": [],
								"returns": []
							}
						]
					},
					{
						"id": "_9DkQTYt_miTJF7bMrd0q",
						"name": "ObjectRenderer",
						"brief": "<p>Base for a common object renderer that can be used as a system renderer plugin.</p>",
						"type": "ClassDoc",
						"params": [],
						"returns": [],
						"extends": [
							"PIXI.System"
						],
						"implements": [],
						"members": [
							{
								"id": "bx1wFxtAK2uwjIYolGhMc",
								"name": "renderer",
								"brief": "<p>The renderer this manager works for.</p>",
								"scope": "instance",
								"type": "PropertyDoc",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "-Gngu1CwDhDVCtvQmx1Gr",
								"name": "constructor",
								"brief": "",
								"scope": "instance",
								"type": "MethodDoc",
								"params": [
									{
										"identifier": "renderer",
										"optional": false,
										"description": "<p>The renderer this manager works for.</p>",
										"dataType": {
											"tokens": [
												{
													"value": "PIXI.Renderer",
													"kind": "canonical"
												},
												{
													"value": "PIXI.Renderer",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									}
								],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "LJ5qJbLT8SBKVWsmoM8g4",
								"name": "destroy",
								"brief": "",
								"scope": "instance",
								"type": "MethodDoc",
								"description": "<p>Generic destruction method that frees all resources. This\nshould be called by subclasses.</p>",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "GSl3ykGyUL1o57E7TrEVP",
								"name": "flush",
								"brief": "",
								"scope": "instance",
								"type": "MethodDoc",
								"description": "<p>Stub method that should be used to empty the current\nbatch by rendering objects now.</p>",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "uYDgkNLto6Eof0b7eGVeR",
								"name": "render",
								"brief": "",
								"scope": "instance",
								"type": "MethodDoc",
								"description": "<p>Keeps the object to render. It doesn't have to be\nrendered immediately.</p>",
								"params": [
									{
										"identifier": "object",
										"optional": false,
										"description": "<p>The object to render.</p>",
										"dataType": {
											"tokens": [
												{
													"value": "PIXI.DisplayObject",
													"kind": "canonical"
												},
												{
													"value": "PIXI.DisplayObject",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									}
								],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "nHhio93gwizPAQLSgYm90",
								"name": "start",
								"brief": "",
								"scope": "instance",
								"type": "MethodDoc",
								"description": "<p>Stub method that initializes any state required before\nrendering starts. It is different from the <code>prerender</code>\ns...",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "b2IIfPbMvNeodK80oHF3e",
								"name": "stop",
								"brief": "",
								"scope": "instance",
								"type": "MethodDoc",
								"description": "<p>Stops the renderer. It should free up any state and\nbecome dormant.</p>",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							}
						]
					},
					{
						"id": "rkgLTlDBLM1LtPe2-s6qk",
						"name": "System",
						"brief": "<p>System is a base class used for extending systems used by the {@link PIXI.AbstractRenderer}.</p>",
						"see": [
							"PIXI.Renderer#addSystem"
						],
						"type": "ClassDoc",
						"description": "<p>Search more here: {@link https://www.google.com/}</p>",
						"params": [],
						"returns": [],
						"extends": [],
						"implements": [],
						"members": [
							{
								"id": "qXacrswuPF2GO_LIyYZLx",
								"name": "renderer",
								"brief": "<p>The renderer this manager works for.</p>",
								"scope": "instance",
								"type": "PropertyDoc",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "e2hsttqjZ4AQJrM0n0Npx",
								"name": "constructor",
								"brief": "",
								"scope": "instance",
								"type": "MethodDoc",
								"params": [
									{
										"identifier": "renderer",
										"optional": false,
										"description": "<p>The renderer this manager works for.</p>",
										"dataType": {
											"tokens": [
												{
													"value": "PIXI.Renderer",
													"kind": "canonical"
												},
												{
													"value": "PIXI.Renderer",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									}
								],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "hblZ0y2dpzUrh8xPq6AOL",
								"name": "destroy",
								"brief": "<p>Generic destroy methods to be overridden by the subclass</p>",
								"scope": "instance",
								"type": "MethodDoc",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							}
						]
					},
					{
						"id": "IfNJikd3DDJ3lUYf2CZ7_",
						"name": "AbstractBatchRenderer",
						"brief": "<p>Renderer dedicated to drawing and batching sprites.</p>",
						"access": "protected",
						"readonly": true,
						"type": "ClassDoc",
						"description": "<p>This is the default batch renderer. It buffers objects\nwith texture-based geometries and renders them in\nbatches. It uploa...",
						"params": [],
						"returns": [],
						"extends": [
							"PIXI.ObjectRenderer"
						],
						"implements": [],
						"members": [
							{
								"id": "zAmTZbgKTs7ta-5c-Ginj",
								"name": "_drawCallPool",
								"brief": "",
								"scope": "static",
								"type": "PropertyDoc",
								"description": "<p>Pool of <code>BatchDrawCall</code> objects that <code>flush</code> used\nto create &quot;batches&quot; of the objects being...",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "jfD2RyaPjucNMV0iP_xZ4",
								"name": "_textureArrayPool",
								"brief": "",
								"scope": "static",
								"type": "PropertyDoc",
								"description": "<p>Pool of <code>BatchDrawCall</code> objects that <code>flush</code> used\nto create &quot;batches&quot; of the objects being...",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "PMgIz1ABGKkbEcn2YXHm0",
								"name": "bufferSize",
								"brief": "",
								"scope": "instance",
								"type": "PropertyDoc",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "NhKSGGlpZl1G3Wrtd2TQB",
								"name": "MAX_TEXTURES",
								"brief": "",
								"defaultValue": "1",
								"readonly": true,
								"scope": "instance",
								"see": [
									"PIXI.AbstractBatchRenderer#contextChange"
								],
								"type": "PropertyDoc",
								"description": "<p>Maximum number of textures that can be uploaded to\nthe GPU under the current context. It is initialized\nproperly in <code>...",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "2SXs72Zc1cHfH4-Vw7Fi2",
								"name": "renderer",
								"brief": "<p>The renderer this manager works for.</p>",
								"scope": "instance",
								"type": "PropertyDoc",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "4M84Q7e7_kMovjLaqb-sR",
								"name": "size",
								"brief": "",
								"defaultValue": "settings.SPRITE_BATCH_SIZE * 4",
								"scope": "instance",
								"type": "PropertyDoc",
								"description": "<p>The number of bufferable objects before a flush\noccurs automatically.</p>",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "B2b6VpuV-DFsk7RiMwtHI",
								"name": "state",
								"brief": "<p>The WebGL state in which this renderer will work.</p>",
								"readonly": true,
								"scope": "instance",
								"type": "PropertyDoc",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "YZiyrpvanbI-09KDXdZa_",
								"name": "vertexSize",
								"brief": "",
								"defaultValue": "undefined",
								"readonly": true,
								"scope": "instance",
								"type": "PropertyDoc",
								"description": "<p>Size of data being buffered per vertex in the\nattribute buffers (in floats). By default, the\nbatch-renderer plugin uses 6:...",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "GaYWL7ZlyvKZBS3vor_qH",
								"name": "_shader",
								"brief": "<p>This shader is generated by <code>this.shaderGenerator</code>.</p>",
								"access": "protected",
								"defaultValue": "undefined",
								"scope": "instance",
								"type": "PropertyDoc",
								"description": "<p>It is generated specifically to handle the required\nnumber of textures being batched together.</p>",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "j85IDjPnjFPX7_hWdM8WN",
								"name": "geometryClass",
								"brief": "",
								"access": "protected",
								"defaultValue": "PIXI.BatchGeometry",
								"scope": "instance",
								"type": "PropertyDoc",
								"description": "<p>The class that represents the geometry of objects\nthat are going to be batched with this.</p>",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "Pf-HZHfhtJsxzC6zhJ_8u",
								"name": "shaderGenerator",
								"brief": "",
								"access": "protected",
								"defaultValue": "undefined",
								"scope": "instance",
								"type": "PropertyDoc",
								"description": "<p>This is used to generate a shader that can\ncolor each vertex based on a <code>aTextureId</code>\nattribute that points to a...",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "90nKsFQAs33xxBB-QIFNh",
								"name": "_aBuffers",
								"brief": "",
								"access": "private",
								"scope": "instance",
								"see": [
									"PIXI.AbstractBatchRenderer#getAttributeBuffer"
								],
								"type": "PropertyDoc",
								"description": "<p>Pool of <code>ViewableBuffer</code> objects that are sorted in\norder of increasing size. The flush method uses\nthe buffer ...",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "B8Dtaf5ZMYEqcwSL_Tyq4",
								"name": "_bufferedElements",
								"brief": "<p>Buffer of objects that are yet to be rendered.</p>",
								"access": "private",
								"scope": "instance",
								"type": "PropertyDoc",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "4kyjUiuln4SnX6v_UQOTT",
								"name": "_bufferedTextures",
								"brief": "",
								"access": "private",
								"scope": "instance",
								"type": "PropertyDoc",
								"description": "<p>Data for texture batch builder, helps to save a bit of CPU on a pass</p>",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "PJOhHQRMANyzNdzJF62VA",
								"name": "_bufferSize",
								"brief": "",
								"access": "private",
								"defaultValue": "0",
								"scope": "instance",
								"type": "PropertyDoc",
								"description": "<p>Number of elements that are buffered and are\nwaiting to be flushed.</p>",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "Up_6kBoF7b7T2Ey7rS-yX",
								"name": "_flushId",
								"brief": "",
								"access": "private",
								"defaultValue": "0",
								"scope": "instance",
								"type": "PropertyDoc",
								"description": "<p>A flush may occur multiple times in a single\nframe. On iOS devices or when\n<code>settings.CAN_UPLOAD_SAME_BUFFER</code> is...",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "ynF8aKiz_7cbacX--o3Kl",
								"name": "_iBuffers",
								"brief": "",
								"access": "private",
								"scope": "instance",
								"see": [
									"PIXI.AbstractBatchRenderer#getIndexBuffer"
								],
								"type": "PropertyDoc",
								"description": "<p>Pool of <code>Uint16Array</code> objects that are sorted in\norder of increasing size. The flush method uses\nthe buffer wit...",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "kJL3hOCSMD1HsyoB1FoTF",
								"name": "_indexCount",
								"brief": "",
								"access": "private",
								"defaultValue": "0",
								"scope": "instance",
								"type": "PropertyDoc",
								"description": "<p>Total count of all indices used by the currently\nbuffered objects.</p>",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "FM08uXEqQ44joQi_529Qg",
								"name": "_packedGeometries",
								"brief": "",
								"access": "private",
								"scope": "instance",
								"see": [
									"PIXI.AbstractBatchRenderer.contextChange"
								],
								"type": "PropertyDoc",
								"description": "<p>Pool of <code>this.geometryClass</code> geometry objects\nthat store buffers. They are used to pass data\nto the shader on e...",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "Df9IQQ0zHVWUiNXtkUZNC",
								"name": "_packedGeometryPoolSize",
								"brief": "",
								"access": "private",
								"defaultValue": "2",
								"scope": "instance",
								"type": "PropertyDoc",
								"description": "<p>Size of <code>this._packedGeometries</code>. It can be expanded\nif more than <code>this._packedGeometryPoolSize</code> flu...",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "9oPgAAv8OL02kDNJDPrb4",
								"name": "_vertexCount",
								"brief": "",
								"access": "private",
								"defaultValue": "0",
								"scope": "instance",
								"type": "PropertyDoc",
								"description": "<p>Total count of all vertices used by the currently\nbuffered objects.</p>",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "u-pXDOjNbyGacG4ssOevC",
								"name": "bindAndClearTexArray",
								"brief": "<p>Bind textures for current rendering</p>",
								"scope": "instance",
								"type": "MethodDoc",
								"params": [
									{
										"identifier": "texArray",
										"optional": false,
										"dataType": {
											"tokens": [
												{
													"value": "PIXI.BatchTextureArray",
													"kind": "canonical"
												},
												{
													"value": "PIXI.BatchTextureArray",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									}
								],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "rtByEXyRdPgrY4tIkkfQm",
								"name": "buildDrawCalls",
								"brief": "<p>Populating drawcalls for rendering</p>",
								"scope": "instance",
								"type": "MethodDoc",
								"params": [
									{
										"identifier": "texArray",
										"optional": false,
										"dataType": {
											"tokens": [
												{
													"value": "PIXI.BatchTextureArray",
													"kind": "canonical"
												},
												{
													"value": "PIXI.BatchTextureArray",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									},
									{
										"identifier": "start",
										"optional": false,
										"dataType": {
											"tokens": [
												{
													"value": "number",
													"kind": "canonical"
												},
												{
													"value": "number",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									},
									{
										"identifier": "finish",
										"optional": false,
										"dataType": {
											"tokens": [
												{
													"value": "number",
													"kind": "canonical"
												},
												{
													"value": "number",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									}
								],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "9oSwYdVb3S5MX-ZzpFNkg",
								"name": "constructor",
								"brief": "",
								"scope": "instance",
								"type": "MethodDoc",
								"description": "<p>This will hook onto the renderer's <code>contextChange</code>\nand <code>prerender</code> signals.</p>",
								"params": [
									{
										"identifier": "renderer",
										"optional": false,
										"description": "<p>The renderer this works for.</p>",
										"dataType": {
											"tokens": [
												{
													"value": "PIXI.Renderer",
													"kind": "canonical"
												},
												{
													"value": "PIXI.Renderer",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									}
								],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "QbohSfpyjk6sVrXelsjlW",
								"name": "contextChange",
								"brief": "<p>Handles the <code>contextChange</code> signal.</p>",
								"scope": "instance",
								"type": "MethodDoc",
								"description": "<p>It calculates <code>this.MAX_TEXTURES</code> and allocating the\npacked-geometry object pool.</p>",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "IK9Lk0rqk1srw1-fJskIQ",
								"name": "destroy",
								"brief": "<p>Destroys this <code>AbstractBatchRenderer</code>. It cannot be used again.</p>",
								"scope": "instance",
								"type": "MethodDoc",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "r1u1OBOydUd2kGPcXdsr9",
								"name": "flush",
								"brief": "<p>Renders the content <em>now</em> and empties the current batch.</p>",
								"scope": "instance",
								"type": "MethodDoc",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "20mnwkSgMkke4ar78nOph",
								"name": "initFlushBuffers",
								"brief": "<p>Makes sure that static and dynamic flush pooled objects have correct dimensions</p>",
								"scope": "instance",
								"type": "MethodDoc",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "7rc4zUzuR08QV0vIQfvem",
								"name": "onPrerender",
								"brief": "<p>Handles the <code>prerender</code> signal.</p>",
								"scope": "instance",
								"type": "MethodDoc",
								"description": "<p>It ensures that flushes start from the first geometry\nobject again.</p>",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "IQ3YDVHXrTDC4NFgF-HUd",
								"name": "packInterleavedGeometry",
								"brief": "",
								"scope": "instance",
								"type": "MethodDoc",
								"description": "<p>Takes the four batching parameters of <code>element</code>, interleaves\nand pushes them into the batching attribute/index ...",
								"params": [
									{
										"identifier": "element",
										"optional": false,
										"description": "<p>element being rendered</p>",
										"dataType": {
											"tokens": [
												{
													"value": "PIXI.Sprite",
													"kind": "canonical"
												},
												{
													"value": "PIXI.Sprite",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									},
									{
										"identifier": "attributeBuffer",
										"optional": false,
										"description": "<p>attribute buffer.</p>",
										"dataType": {
											"tokens": [
												{
													"value": "PIXI.ViewableBuffer",
													"kind": "canonical"
												},
												{
													"value": "PIXI.ViewableBuffer",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									},
									{
										"identifier": "indexBuffer",
										"optional": false,
										"description": "<p>index buffer</p>",
										"dataType": {
											"tokens": [
												{
													"value": "Uint16Array",
													"kind": "canonical"
												},
												{
													"value": "Uint16Array",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									},
									{
										"identifier": "aIndex",
										"optional": false,
										"description": "<p>number of floats already in the attribute buffer</p>",
										"dataType": {
											"tokens": [
												{
													"value": "number",
													"kind": "canonical"
												},
												{
													"value": "number",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									},
									{
										"identifier": "iIndex",
										"optional": false,
										"description": "<p>number of indices already in <code>indexBuffer</code></p>",
										"dataType": {
											"tokens": [
												{
													"value": "number",
													"kind": "canonical"
												},
												{
													"value": "number",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									}
								],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "mzRor4lVKB0YmadvNgc4W",
								"name": "render",
								"brief": "",
								"scope": "instance",
								"type": "MethodDoc",
								"description": "<p>Buffers the &quot;batchable&quot; object. It need not be rendered\nimmediately.</p>",
								"params": [
									{
										"identifier": "element",
										"optional": false,
										"description": "<p>the element to render when\nusing this renderer</p>",
										"dataType": {
											"tokens": [
												{
													"value": "PIXI.DisplayObject",
													"kind": "canonical"
												},
												{
													"value": "PIXI.DisplayObject",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									}
								],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "fMi0bBKQh18SlYQd9AwQn",
								"name": "start",
								"brief": "<p>Starts a new sprite batch.</p>",
								"scope": "instance",
								"type": "MethodDoc",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "emPSsfrrSaNB_RMS0_JKI",
								"name": "stop",
								"brief": "<p>Stops and flushes the current batch.</p>",
								"scope": "instance",
								"type": "MethodDoc",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "9MzfCphg9rm9TX5D-DZ0M",
								"name": "getAttributeBuffer",
								"brief": "",
								"access": "private",
								"scope": "instance",
								"type": "MethodDoc",
								"description": "<p>Fetches an attribute buffer from <code>this._aBuffers</code> that\ncan hold atleast <code>size</code> floats.</p>",
								"params": [
									{
										"identifier": "size",
										"optional": false,
										"description": "<p>minimum capacity required</p>",
										"dataType": {
											"tokens": [
												{
													"value": "number",
													"kind": "canonical"
												},
												{
													"value": "number",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									}
								],
								"returns": [
									{
										"description": "<ul>\n<li>buffer than can hold atleast <code>size</code> floats</li>\n</ul>",
										"dataType": {
											"tokens": [
												{
													"value": "ViewableBuffer",
													"kind": "canonical"
												},
												{
													"value": "ViewableBuffer",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									}
								],
								"extends": [],
								"implements": []
							},
							{
								"id": "gZgWjy-76S4VHpzzW0H2M",
								"name": "getIndexBuffer",
								"brief": "",
								"access": "private",
								"scope": "instance",
								"type": "MethodDoc",
								"description": "<p>Fetches an index buffer from <code>this._iBuffers</code> that can\nhas atleast <code>size</code> capacity.</p>",
								"params": [
									{
										"identifier": "size",
										"optional": false,
										"description": "<p>minimum required capacity</p>",
										"dataType": {
											"tokens": [
												{
													"value": "number",
													"kind": "canonical"
												},
												{
													"value": "number",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									}
								],
								"returns": [
									{
										"description": "<ul>\n<li>buffer that can fit <code>size</code>\nindices.</li>\n</ul>",
										"dataType": {
											"tokens": [
												{
													"value": "Uint16Array",
													"kind": "canonical"
												},
												{
													"value": "Uint16Array",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									}
								],
								"extends": [],
								"implements": []
							}
						]
					},
					{
						"id": "Q5kyG02yV1JKQeaXUX5xe",
						"name": "TRANSFORM_MODE",
						"brief": "<p>Constants that specify the transform type.</p>",
						"deprecated": "since 5.0.0",
						"scope": "static",
						"type": "EnumDoc",
						"params": [],
						"returns": [],
						"extends": [],
						"implements": [],
						"members": [
							{
								"id": "Kle8FO8XBgG-3AmQoIhDu",
								"name": "DYNAMIC",
								"brief": "",
								"access": "public",
								"scope": "static",
								"type": "PropertyDoc"
							},
							{
								"id": "vl7L1zU-7wPRcFt_jntgO",
								"name": "STATIC",
								"brief": "",
								"access": "public",
								"scope": "static",
								"type": "PropertyDoc"
							}
						]
					},
					{
						"id": "-OAOhP54NSgWePGEzfKKf",
						"name": "",
						"brief": "",
						"type": "TypedefDoc",
						"params": [],
						"returns": [],
						"extends": [],
						"implements": [],
						"members": [
							{
								"id": "dtbU9VDmilHjlWuveOZUF",
								"name": "destroy",
								"brief": "",
								"access": "public",
								"scope": "static",
								"type": "PropertyDoc",
								"description": "<p>Called when destroying Application, scoped to Application instance</p>"
							},
							{
								"id": "HAfpWdI47T9GoLjF2w9wm",
								"name": "init",
								"brief": "",
								"access": "public",
								"scope": "static",
								"type": "PropertyDoc",
								"description": "<p>Called when Application is constructed, scoped to Application instance.\nPasses in <code>options</code> as the only argumen..."
							}
						]
					},
					{
						"id": "OP75Lfmc8gmkMAsP_Q5aV",
						"name": "SVG_SIZE",
						"brief": "",
						"deprecated": "since 5.0.0",
						"scope": "static",
						"see": [
							"PIXI.resources.SVGResource.SVG_SIZE"
						],
						"type": "PropertyDoc",
						"params": [],
						"returns": [],
						"extends": [],
						"implements": []
					}
				]
			},
			{
				"id": "rPk205T9n36s_rCSf5zPS",
				"name": "R",
				"brief": "<p>A namespace dedicated to road manipulation utilites.</p>",
				"readonly": true,
				"type": "NSDoc",
				"params": [],
				"returns": [],
				"extends": [],
				"implements": [],
				"members": [
					{
						"id": "rpHLzQGh-0ZT2N2OuHDDc",
						"name": "Road",
						"brief": "<p>This is another road class.</p>",
						"type": "ClassDoc",
						"params": [],
						"returns": [],
						"extends": [],
						"implements": [],
						"members": [
							{
								"id": "3lZp4iUnZ4mdMqIonXxzT",
								"name": "constructor",
								"brief": "<p>This is another road class.</p>",
								"access": "public",
								"scope": "instance",
								"type": "MethodDoc",
								"params": [],
								"returns": []
							}
						]
					},
					{
						"id": "EpVuXnpluGmmckAsMl7q-",
						"name": "DEFAULT_LANES",
						"brief": "<p>The default no. of lanes per one side of road</p>",
						"defaultValue": "4",
						"scope": "static",
						"type": "PropertyDoc",
						"params": [],
						"returns": [],
						"extends": [],
						"implements": []
					},
					{
						"id": "tX9S5BZdDMkbo5PjzFY_c",
						"name": "buildRoad",
						"brief": "<p>Builds a road</p>",
						"scope": "instance",
						"type": "MethodDoc",
						"params": [
							{
								"identifier": "address",
								"optional": false,
								"dataType": {
									"tokens": [
										{
											"value": "string",
											"kind": "canonical"
										}
									],
									"template": "string"
								}
							}
						],
						"returns": [
							{
								"dataType": {
									"tokens": [
										{
											"value": "ExampleFactory",
											"kind": "canonical"
										},
										{
											"value": "ExampleFactory",
											"kind": "link"
										}
									],
									"template": "%1"
								}
							}
						],
						"extends": [],
						"implements": []
					}
				]
			},
			{
				"id": "vB2S0D_3SDoIgboJC83m8",
				"name": "Ts",
				"brief": "",
				"type": "NSDoc",
				"params": [],
				"returns": [],
				"extends": [],
				"implements": [],
				"members": [
					{
						"id": "ch5Ct_4Y0s2T-iZ_7IYCi",
						"name": "Transaction",
						"brief": "",
						"type": "ClassDoc",
						"params": [],
						"returns": [],
						"extends": [],
						"implements": [],
						"members": [
							{
								"id": "sZcsA2XQ-C6aGAyo0ZvRo",
								"name": "constructor",
								"brief": "",
								"access": "public",
								"scope": "instance",
								"type": "MethodDoc",
								"params": [],
								"returns": []
							}
						]
					}
				]
			},
			{
				"id": "36-c8DU1YXwKVpbvRzLUJ",
				"name": "Bean",
				"brief": "<p>Bean class</p>",
				"type": "ClassDoc",
				"params": [],
				"returns": [],
				"extends": [],
				"implements": [],
				"members": [
					{
						"id": "N9yft_TBc8tzZQDwm0fWg",
						"name": "constructor",
						"brief": "<p>Bean class</p>",
						"access": "public",
						"scope": "instance",
						"type": "MethodDoc",
						"params": [],
						"returns": []
					},
					{
						"id": "SSQ5dtokkT4Xu9lZEaEGn",
						"name": "roast",
						"brief": "<p>(optional) roasting method</p>",
						"abstract": true,
						"scope": "instance",
						"type": "MethodDoc",
						"params": [],
						"returns": [
							{
								"dataType": {
									"tokens": [
										{
											"value": "void",
											"kind": "canonical"
										}
									],
									"template": "void"
								}
							}
						],
						"extends": [],
						"implements": []
					}
				]
			},
			{
				"id": "f23lbJJorisItnXeQB8gf",
				"name": "Car",
				"brief": "<p><em>Simulation</em> for a automobile that can drive on a manifold surface.</p>",
				"type": "ClassDoc",
				"description": "<pre class=\"hljs\"><code><span class=\"hljs-keyword\">const</span> car = <span class=\"hljs-keyword\">new</span> Car({ <span class...",
				"params": [],
				"returns": [],
				"extends": [
					"PhysicalObject"
				],
				"implements": [],
				"members": [
					{
						"id": "1tE9LRhwfFJ06-935Aq9_",
						"name": "DEFAULT_DRIVE_SHIFT",
						"brief": "",
						"defaultValue": "\"manual\"",
						"scope": "static",
						"type": "PropertyDoc",
						"params": [],
						"returns": [],
						"extends": [],
						"implements": []
					},
					{
						"id": "KN0ODIUh0-FJhbCVLleoS",
						"name": "bounds",
						"brief": "",
						"scope": "instance",
						"type": "PropertyDoc",
						"description": "<p>The mesh enclosing this object. By default, it is a &quot;point&quot; object at the its own\nposition.</p>",
						"params": [],
						"returns": [],
						"extends": [],
						"implements": []
					},
					{
						"id": "6lRrIVFTCnbxaQvM0Z2an",
						"name": "interactions",
						"brief": "<p>All causal interactions with other objects</p>",
						"scope": "instance",
						"type": "PropertyDoc",
						"params": [],
						"returns": [],
						"extends": [],
						"implements": []
					},
					{
						"id": "TzRChcvOz3th7dsyZx6e9",
						"name": "mass",
						"brief": "<p>The mass of this object in kilograms.</p>",
						"defaultValue": "0",
						"scope": "instance",
						"type": "PropertyDoc",
						"params": [],
						"returns": [],
						"extends": [],
						"implements": []
					},
					{
						"id": "rH-dPUYXvAggpPpBBOqYK",
						"name": "model",
						"brief": "",
						"access": "public",
						"defaultValue": "\"TEST\"",
						"scope": "instance",
						"type": "PropertyDoc",
						"params": [],
						"returns": [],
						"extends": [],
						"implements": []
					},
					{
						"id": "cfitMPbIkipy_QiIC_tLW",
						"name": "position",
						"brief": "<p>The absolute position of this object's center of mass (in the universal reference frame)</p>",
						"defaultValue": "[0, 0, 0]",
						"scope": "instance",
						"type": "PropertyDoc",
						"params": [],
						"returns": [],
						"extends": [],
						"implements": []
					},
					{
						"id": "l5tWBiiY5mKaKMl1UrP3w",
						"name": "velocity",
						"brief": "<p>The absolute velocity of this object (in the universal reference frame)</p>",
						"defaultValue": "[0, 0, 0]",
						"scope": "instance",
						"type": "PropertyDoc",
						"params": [],
						"returns": [],
						"extends": [],
						"implements": []
					},
					{
						"id": "iZopMkwo2foQOdeQyKAmI",
						"name": "vin",
						"brief": "",
						"defaultValue": "0",
						"scope": "instance",
						"type": "PropertyDoc",
						"params": [],
						"returns": [],
						"extends": [],
						"implements": []
					},
					{
						"id": "nJWGG9os4f2BAzbF7RKLn",
						"name": "registerRetail",
						"brief": "<p>Register a retail dealer for buying a car from</p>",
						"scope": "static",
						"type": "MethodDoc",
						"params": [
							{
								"identifier": "name",
								"optional": false,
								"dataType": {
									"tokens": [
										{
											"value": "string",
											"kind": "canonical"
										}
									],
									"template": "string"
								}
							}
						],
						"returns": [],
						"extends": [],
						"implements": []
					},
					{
						"id": "EJeFWv_AS_Z46v5zvJQ8W",
						"name": "constructor",
						"brief": "",
						"scope": "instance",
						"type": "MethodDoc",
						"params": [
							{
								"identifier": "model",
								"optional": false,
								"default": "\"TEST\"",
								"dataType": {
									"tokens": [
										{
											"value": "string",
											"kind": "canonical"
										}
									],
									"template": "string"
								}
							}
						],
						"returns": [],
						"extends": [],
						"implements": []
					},
					{
						"id": "RHkNSJO_Oq7NSOtC9FzSr",
						"name": "onCrash",
						"brief": "",
						"examples": [
							{
								"caption": "",
								"code": "\n car.onCrash((car) => console.logicalAssignment(car.id + \" crashed!\"))\n"
							}
						],
						"scope": "instance",
						"type": "MethodDoc",
						"params": [
							{
								"identifier": "callback",
								"optional": false,
								"dataType": {
									"tokens": [
										{
											"value": "Function",
											"kind": "canonical"
										}
									],
									"template": "Function"
								}
							},
							{
								"identifier": "callback.name",
								"dataType": {
									"tokens": [
										{
											"value": "string",
											"kind": "canonical"
										}
									],
									"template": "string"
								}
							}
						],
						"returns": [],
						"extends": [],
						"implements": []
					}
				]
			},
			{
				"id": "S2SncO6-CLgxBYYrEYM5-",
				"name": "CoffeeBean",
				"brief": "<p>This class illustrates how you can create a Java-bean like component in JavaScript</p>",
				"type": "ClassDoc",
				"params": [],
				"returns": [],
				"extends": [
					"Bean"
				],
				"implements": [],
				"members": [
					{
						"id": "msF5_6Xp3Hc0ZLc1xEe3W",
						"name": "maturity",
						"brief": "",
						"scope": "instance",
						"type": "PropertyDoc",
						"params": [],
						"returns": [],
						"extends": [],
						"implements": []
					},
					{
						"id": "WLiptBdK83ZUIgzBi8BRM",
						"name": "roasted",
						"brief": "",
						"scope": "instance",
						"type": "PropertyDoc",
						"params": [],
						"returns": [],
						"extends": [],
						"implements": []
					},
					{
						"id": "wVvi-FWkjSUSTwUb78XZ8",
						"name": "constructor",
						"brief": "",
						"scope": "instance",
						"type": "MethodDoc",
						"params": [
							{
								"identifier": "options",
								"optional": true,
								"dataType": {
									"tokens": [
										{
											"value": "object",
											"kind": "canonical"
										}
									],
									"template": "object"
								}
							},
							{
								"identifier": "options.roasted",
								"optional": true,
								"description": "<p>whether the bean is <code>roasted</code></p>",
								"dataType": {
									"tokens": [
										{
											"value": "boolean",
											"kind": "canonical"
										}
									],
									"template": "boolean"
								}
							},
							{
								"identifier": "options.maturity",
								"optional": true,
								"dataType": {
									"tokens": [
										{
											"value": "number",
											"kind": "canonical"
										},
										{
											"value": "number",
											"kind": "canonical"
										}
									],
									"template": "%1"
								}
							}
						],
						"returns": [],
						"extends": [],
						"implements": []
					},
					{
						"id": "5V94FfYexOE5rschXoMoe",
						"name": "roast",
						"brief": "<p>Roast this coffee bean.</p>",
						"scope": "instance",
						"type": "MethodDoc",
						"description": "<p>NOTE: You cannot re-roast coffee beans and an error will be thrown if you try to\nroast a roasted coffee bean.</p>",
						"params": [],
						"returns": [],
						"extends": [],
						"implements": []
					}
				]
			},
			{
				"id": "TpBUnweS7W6i61utEENXH",
				"name": "ExampleFactory",
				"type": "ClassDoc",
				"description": "<p>{@link ExampleFactory} can be used to build examples.</p>\n<pre class=\"hljs\"><code><span class=\"hljs-comment\">// <span clas...",
				"params": [
					{
						"identifier": "context",
						"optional": true,
						"default": "null",
						"description": "<p>A custom context for the factory.</p>",
						"dataType": {
							"tokens": [
								{
									"value": "ExampleContext",
									"kind": "canonical"
								},
								{
									"value": "ExampleContext",
									"kind": "canonical"
								}
							],
							"template": "%1"
						}
					}
				],
				"returns": [],
				"extends": [],
				"implements": [],
				"members": [
					{
						"id": "qt4IaH4YdojcMPMB3WTr8",
						"name": "getInstance",
						"brief": "<p>Gets a lazily-initialized, shared singleton instance of {@link ExampleFactory}.</p>",
						"scope": "static",
						"type": "MethodDoc",
						"params": [],
						"returns": [
							{
								"dataType": {
									"tokens": [
										{
											"value": "ExampleFactory",
											"kind": "canonical"
										},
										{
											"value": "ExampleFactory",
											"kind": "link"
										}
									],
									"template": "%1"
								}
							}
						],
						"extends": [],
						"implements": []
					},
					{
						"id": "9-rl2dW-pPTj32lfSMi9R",
						"name": "build",
						"brief": "<p>Build the road.</p>",
						"scope": "instance",
						"type": "MethodDoc",
						"params": [],
						"returns": [],
						"extends": [],
						"implements": []
					},
					{
						"id": "WvLMuSiWnylt1Z7wSZzoC",
						"name": "constructor",
						"brief": "<p>This constructor should only be used for custom contexts.</p>",
						"access": "public",
						"scope": "instance",
						"type": "MethodDoc",
						"params": [
							{
								"identifier": "context",
								"optional": true,
								"default": "null",
								"description": "<p>A custom context for the factory.</p>",
								"dataType": {
									"tokens": [
										{
											"value": "ExampleContext",
											"kind": "canonical"
										},
										{
											"value": "ExampleContext",
											"kind": "canonical"
										}
									],
									"template": "%1"
								}
							}
						],
						"returns": []
					},
					{
						"id": "-laic0_BqPslKURn8ERCe",
						"name": "getContext",
						"brief": "<p>Get the context of this factory.</p>",
						"scope": "instance",
						"type": "MethodDoc",
						"params": [],
						"returns": [
							{
								"dataType": {
									"tokens": [
										{
											"value": "ExampleContext",
											"kind": "canonical"
										},
										{
											"value": "ExampleContext",
											"kind": "canonical"
										}
									],
									"template": "%1"
								}
							}
						],
						"extends": [],
						"implements": []
					}
				]
			},
			{
				"id": "UXcFl7BRGYfTRl6MdCtxn",
				"name": "Gravity",
				"brief": "<p>This class shouldn't be documented!</p>",
				"type": "ClassDoc",
				"params": [],
				"returns": [],
				"extends": [
					"PhysicalInteraction"
				],
				"implements": [],
				"members": [
					{
						"id": "o1Z_4b2cN5fintwW5W5YP",
						"name": "constructor",
						"brief": "<p>This class shouldn't be documented!</p>",
						"access": "public",
						"scope": "instance",
						"type": "MethodDoc",
						"params": [],
						"returns": []
					},
					{
						"id": "awjnynROmF_zxqX4NnNgx",
						"name": "force",
						"brief": "<p>This method should be overriden to calculate the force at the given instant.</p>",
						"scope": "instance",
						"type": "MethodDoc",
						"params": [],
						"returns": [
							{
								"dataType": {
									"tokens": [
										{
											"value": "Vector<3>",
											"kind": "canonical"
										},
										{
											"value": "Vector",
											"kind": "link"
										},
										{
											"value": "3",
											"kind": "canonical"
										}
									],
									"template": "%1<%2>"
								}
							}
						],
						"extends": [],
						"implements": []
					}
				]
			},
			{
				"id": "8ATM13Tfo7WrKWr-KdrMB",
				"name": "PhysicalInteraction",
				"brief": "",
				"readonly": true,
				"type": "ClassDoc",
				"description": "<p>A physical interaction is a force causes object positions to be re-evaulated each frame based on\nforce's magnitude.</p>",
				"params": [],
				"returns": [],
				"extends": [],
				"implements": [],
				"members": [
					{
						"id": "xFFYwrOnbCnUFmGEuvt3M",
						"name": "GRAVITATIONAL_CONSTANT",
						"brief": "",
						"defaultValue": "1",
						"scope": "static",
						"type": "PropertyDoc",
						"params": [],
						"returns": [],
						"extends": [],
						"implements": []
					},
					{
						"id": "Hz8HiP7KVA8VYI0OAVMoE",
						"name": "createGravity",
						"brief": "<p>Creates a graviational force</p>",
						"scope": "static",
						"type": "MethodDoc",
						"params": [
							{
								"identifier": "objects",
								"optional": false,
								"dataType": {
									"tokens": [
										{
											"value": "Tuple<PhysicalObject, 2>",
											"kind": "canonical"
										},
										{
											"value": "Tuple",
											"kind": "canonical"
										},
										{
											"value": "PhysicalObject",
											"kind": "link"
										},
										{
											"value": "2",
											"kind": "canonical"
										}
									],
									"template": "%1<%3, %2>"
								}
							}
						],
						"returns": [
							{
								"dataType": {
									"tokens": [
										{
											"value": "PhysicalInteraction",
											"kind": "canonical"
										},
										{
											"value": "PhysicalInteraction",
											"kind": "link"
										}
									],
									"template": "%1"
								}
							}
						],
						"extends": [],
						"implements": []
					},
					{
						"id": "L2GxfUk7Uz8N_U_gqfLel",
						"name": "force",
						"brief": "<p>This method should be overriden to calculate the force at the given instant.</p>",
						"scope": "instance",
						"type": "MethodDoc",
						"params": [],
						"returns": [
							{
								"dataType": {
									"tokens": [
										{
											"value": "Vector<3>",
											"kind": "canonical"
										},
										{
											"value": "Vector",
											"kind": "link"
										},
										{
											"value": "3",
											"kind": "canonical"
										}
									],
									"template": "%1<%2>"
								}
							}
						],
						"extends": [],
						"implements": []
					}
				]
			},
			{
				"id": "2dAjkMLLxGY88b1O1lZj3",
				"name": "PhysicalObject",
				"brief": "",
				"type": "ClassDoc",
				"description": "<p>Represents a physical-object and its intrinsic properties. This is useful for approximating\nextended objects as a uniform,...",
				"params": [],
				"returns": [],
				"extends": [],
				"implements": [],
				"members": [
					{
						"id": "0vZQcr4Uz-BpLeQ2gUFZf",
						"name": "bounds",
						"brief": "",
						"scope": "instance",
						"type": "PropertyDoc",
						"description": "<p>The mesh enclosing this object. By default, it is a &quot;point&quot; object at the its own\nposition.</p>",
						"params": [],
						"returns": [],
						"extends": [],
						"implements": []
					},
					{
						"id": "wZytUrv7OnopwTXvsyfn1",
						"name": "interactions",
						"brief": "<p>All causal interactions with other objects</p>",
						"scope": "instance",
						"type": "PropertyDoc",
						"params": [],
						"returns": [],
						"extends": [],
						"implements": []
					},
					{
						"id": "oDZyAHbKeBzkW-FPr4iyO",
						"name": "mass",
						"brief": "<p>The mass of this object in kilograms.</p>",
						"defaultValue": "0",
						"scope": "instance",
						"type": "PropertyDoc",
						"params": [],
						"returns": [],
						"extends": [],
						"implements": []
					},
					{
						"id": "L-NB3LgO4ZPiGGQSlTyNw",
						"name": "position",
						"brief": "<p>The absolute position of this object's center of mass (in the universal reference frame)</p>",
						"defaultValue": "[0, 0, 0]",
						"scope": "instance",
						"type": "PropertyDoc",
						"params": [],
						"returns": [],
						"extends": [],
						"implements": []
					},
					{
						"id": "vdWF1UKQjv18J_UudBTR0",
						"name": "velocity",
						"brief": "<p>The absolute velocity of this object (in the universal reference frame)</p>",
						"defaultValue": "[0, 0, 0]",
						"scope": "instance",
						"type": "PropertyDoc",
						"params": [],
						"returns": [],
						"extends": [],
						"implements": []
					}
				]
			},
			{
				"id": "du_tHggmzkLYPMPLy4UP9",
				"name": "Vector",
				"brief": "",
				"type": "ClassDoc",
				"params": [],
				"returns": [],
				"extends": [
					"Array"
				],
				"implements": [],
				"members": [
					{
						"id": "aQae9Diy6nw3-Vn1HIovi",
						"name": "dimensions",
						"brief": "",
						"scope": "instance",
						"type": "PropertyDoc",
						"description": "<p>The no. of components of this vector</p>",
						"params": [],
						"returns": [],
						"extends": [],
						"implements": []
					},
					{
						"id": "w530Q83gMUlJirOHondT0",
						"name": "add",
						"brief": "<p>Add <code>vec</code> to this</p>",
						"scope": "instance",
						"type": "MethodDoc",
						"params": [
							{
								"identifier": "vec",
								"optional": false,
								"dataType": {
									"tokens": [
										{
											"value": "Vector",
											"kind": "canonical"
										},
										{
											"value": "Vector",
											"kind": "link"
										}
									],
									"template": "%1"
								}
							}
						],
						"returns": [],
						"extends": [],
						"implements": []
					},
					{
						"id": "1N-hFx2dKrmCF2vz4Dq7y",
						"name": "equalTo",
						"brief": "<p>Whether this and <code>vec</code> are equal vectors</p>",
						"scope": "instance",
						"type": "MethodDoc",
						"params": [
							{
								"identifier": "vec",
								"optional": false,
								"dataType": {
									"tokens": [
										{
											"value": "Vector",
											"kind": "canonical"
										},
										{
											"value": "Vector",
											"kind": "link"
										}
									],
									"template": "%1"
								}
							}
						],
						"returns": [
							{
								"dataType": {
									"tokens": [
										{
											"value": "boolean",
											"kind": "canonical"
										}
									],
									"template": "boolean"
								}
							}
						],
						"extends": [],
						"implements": []
					},
					{
						"id": "kA-GK_w8PY2bD4BD35vaf",
						"name": "isCompat",
						"brief": "",
						"scope": "instance",
						"type": "MethodDoc",
						"description": "<p>Whether this and <code>vec</code> are compatible vectors (same dimensions)</p>",
						"params": [
							{
								"identifier": "vec",
								"optional": false,
								"dataType": {
									"tokens": [
										{
											"value": "Vector",
											"kind": "canonical"
										},
										{
											"value": "Vector",
											"kind": "link"
										}
									],
									"template": "%1"
								}
							}
						],
						"returns": [
							{
								"dataType": {
									"tokens": [
										{
											"value": "boolean",
											"kind": "canonical"
										}
									],
									"template": "boolean"
								}
							}
						],
						"extends": [],
						"implements": []
					}
				]
			},
			{
				"id": "mHQjyI2Wpj9XuJUx1UeUR",
				"name": "CAR_MAKES",
				"brief": "",
				"see": [
					"CarDealer"
				],
				"type": "EnumDoc",
				"description": "<p>These are the possible types of car makes.</p>",
				"params": [],
				"returns": [],
				"extends": [],
				"implements": [],
				"members": [
					{
						"id": "W8qWCsxcg7JK3pgxtQduK",
						"name": "FERRARI",
						"brief": "",
						"access": "public",
						"scope": "static",
						"type": "PropertyDoc"
					},
					{
						"id": "4V10np5mBZLG9-VraI1R6",
						"name": "FORD",
						"brief": "",
						"access": "public",
						"scope": "static",
						"type": "PropertyDoc"
					},
					{
						"id": "oyqpiWxMdp-SoWwwsPpYT",
						"name": "GENERAL_MOTORS",
						"brief": "",
						"access": "public",
						"scope": "static",
						"type": "PropertyDoc"
					},
					{
						"id": "r7F02sQF2_PQqfQ-bgczi",
						"name": "JAGUAR",
						"brief": "",
						"access": "public",
						"scope": "static",
						"type": "PropertyDoc"
					},
					{
						"id": "Quw0I9HapB1ixxa7rRn7q",
						"name": "KIA",
						"brief": "",
						"access": "public",
						"scope": "static",
						"type": "PropertyDoc"
					},
					{
						"id": "9PfxoDVWWlUtJcoG0gTKw",
						"name": "LAMBORGHINI",
						"brief": "",
						"access": "public",
						"scope": "static",
						"type": "PropertyDoc"
					},
					{
						"id": "5-E4-svOnEeXWm-f6NR8K",
						"name": "TOYOTA",
						"brief": "",
						"access": "public",
						"scope": "static",
						"type": "PropertyDoc",
						"description": "<p>toyota make</p>"
					}
				]
			},
			{
				"id": "Qm4tSlJMkOC_BdtuKBeKo",
				"name": "VectorArray",
				"brief": "",
				"type": "TypedefDoc",
				"description": "<p>A 3D vector</p>",
				"params": [],
				"returns": [],
				"extends": [],
				"implements": [],
				"members": [
					{
						"id": "x0GuAIcHsPdjtsygKTC-H",
						"name": "meta",
						"brief": "",
						"access": "public",
						"scope": "static",
						"type": "PropertyDoc"
					}
				]
			},
			{
				"id": "xfG-0GRDe58PQRBsvxLjR",
				"name": "CarDealer",
				"brief": "<p>This is the interface for dealing with car dealers.</p>",
				"type": "InterfaceDoc",
				"params": [],
				"returns": [],
				"extends": [],
				"implements": [],
				"members": [
					{
						"id": "VMThYUarF-h-PL4DFo6OS",
						"name": "closeTransaction",
						"brief": "<p>Close transaction. If you respond to the counteroffer, then it won't be closed.</p>",
						"type": "MethodDoc",
						"params": [
							{
								"identifier": "trans",
								"optional": false,
								"dataType": {
									"tokens": [
										{
											"value": "Transaction",
											"kind": "canonical"
										},
										{
											"value": "Ts.Transaction",
											"kind": "link"
										}
									],
									"template": "%1"
								}
							},
							{
								"identifier": "counteroffer",
								"optional": false,
								"dataType": {
									"tokens": [
										{
											"value": "(...t: Transaction) => void",
											"kind": "canonical"
										},
										{
											"value": "Ts.Transaction",
											"kind": "link"
										}
									],
									"template": "(...t: %1) => void"
								}
							}
						],
						"returns": [
							{
								"dataType": {
									"tokens": [
										{
											"value": "trans is Transaction",
											"kind": "canonical"
										},
										{
											"value": "Ts.Transaction",
											"kind": "link"
										}
									],
									"template": "trans is %1"
								}
							}
						],
						"extends": [],
						"implements": []
					},
					{
						"id": "y3hQfhdrs9qDYYQAM46TY",
						"name": "initiateTransaction",
						"brief": "<p>Initiate a transaction/negotiation with a car dealer</p>",
						"type": "MethodDoc",
						"params": [
							{
								"identifier": "x",
								"optional": true,
								"description": "<p>info</p>",
								"dataType": {
									"tokens": [
										{
											"value": "object",
											"kind": "canonical"
										}
									],
									"template": "object"
								}
							}
						],
						"returns": [
							{
								"dataType": {
									"tokens": [
										{
											"value": "typeof Transaction",
											"kind": "canonical"
										},
										{
											"value": "Ts.Transaction",
											"kind": "link"
										}
									],
									"template": "typeof %1"
								}
							}
						],
						"extends": [],
						"implements": []
					},
					{
						"id": "RevCCrP2e77X2C1JxOWbn",
						"name": "offerAsk",
						"brief": "<p>Offer a price to sell the car.</p>",
						"type": "MethodDoc",
						"description": "<p>NOTE: This is invalid behaviour if you are the buyer in the transaction.</p>",
						"params": [
							{
								"identifier": "on",
								"optional": false,
								"dataType": {
									"tokens": [
										{
											"value": "Transaction",
											"kind": "canonical"
										},
										{
											"value": "Ts.Transaction",
											"kind": "link"
										}
									],
									"template": "%1"
								}
							},
							{
								"identifier": "counteroffer",
								"optional": true,
								"dataType": {
									"tokens": [
										{
											"value": "(t: Car) => void",
											"kind": "canonical"
										},
										{
											"value": "Car",
											"kind": "link"
										}
									],
									"template": "(t: %1) => void"
								}
							},
							{
								"identifier": "test",
								"optional": false,
								"dataType": {
									"tokens": [
										{
											"value": "{ [testProperty in keyof keyof] }: number",
											"kind": "canonical"
										}
									],
									"template": "{ [testProperty in keyof keyof] }: number"
								}
							}
						],
						"returns": [
							{
								"description": "<p>type inference is working</p>",
								"dataType": {
									"tokens": [
										{
											"value": "boolean",
											"kind": "canonical"
										}
									],
									"template": "boolean"
								}
							}
						],
						"extends": [],
						"implements": []
					},
					{
						"id": "y9LwI0FkyhWBtauUnks6u",
						"name": "offerBid",
						"brief": "<p>Offer a price to buy the car.</p>",
						"type": "MethodDoc",
						"description": "<p>NOTE: This is invalid behaviour if you are the seller in the transaction.</p>",
						"params": [
							{
								"identifier": "on",
								"optional": true,
								"dataType": {
									"tokens": [
										{
											"value": "{ t : Transaction, [id: string]: Transaction[] }",
											"kind": "canonical"
										},
										{
											"value": "Ts.Transaction",
											"kind": "link"
										},
										{
											"value": "Ts.Transaction",
											"kind": "link"
										}
									],
									"template": "{ t : %1, [id: string]: %2[] }"
								}
							},
							{
								"identifier": "counteroffer",
								"optional": true,
								"variadic": true,
								"dataType": {
									"tokens": [
										{
											"value": "Car | Vector",
											"kind": "canonical"
										},
										{
											"value": "Car",
											"kind": "link"
										},
										{
											"value": "Vector",
											"kind": "link"
										}
									],
									"template": "%1 | %2"
								}
							}
						],
						"returns": [
							{
								"dataType": {
									"tokens": [
										{
											"value": "boolean",
											"kind": "canonical"
										}
									],
									"template": "boolean"
								}
							}
						],
						"extends": [],
						"implements": []
					}
				]
			},
			{
				"id": "_pN8IgdPm_A3u0UGieVH-",
				"name": "installBean",
				"brief": "<p>Install a bean class</p>",
				"type": "FunctionDoc",
				"params": [
					{
						"identifier": "bean",
						"optional": false,
						"description": "<p>the bean class</p>",
						"dataType": {
							"tokens": [
								{
									"value": "{ new (): Bean }",
									"kind": "canonical"
								},
								{
									"value": "Bean",
									"kind": "link"
								}
							],
							"template": "{ new (): %1 }"
						}
					}
				],
				"returns": [
					{
						"dataType": {
							"tokens": [
								{
									"value": "void",
									"kind": "canonical"
								}
							],
							"template": "void"
						}
					}
				],
				"extends": [],
				"implements": []
			},
			{
				"id": "qH7CbTfOg1cUD4-UCnfkh",
				"name": "isPhysicalObject",
				"brief": "",
				"authors": [
					"Shukant K. Pal &lt;shukantpal@outlook.com&gt;"
				],
				"copyright": "Shukant K. Pal (C) 2020",
				"license": "MIT",
				"see": [
					"PhysicalObject"
				],
				"since": "2020",
				"type": "FunctionDoc",
				"description": "<p>Checks whether the object is an instance of {@code PhysicalObject}.</p>",
				"params": [
					{
						"identifier": "object",
						"optional": false,
						"dataType": {
							"tokens": [
								{
									"value": "Object",
									"kind": "canonical"
								}
							],
							"template": "Object"
						}
					}
				],
				"returns": [
					{
						"dataType": {
							"tokens": [
								{
									"value": "boolean",
									"kind": "canonical"
								}
							],
							"template": "boolean"
						}
					}
				],
				"extends": [],
				"implements": []
			}
		]
	},
	"registry": {
		"pkg-tnWePIy8zg32J95Djn_rU": {
			"uri": "/example-documentation/@webdoc/example.html"
		},
		"tutorial-car": {
			"uri": "/example-documentation/tutorials/car.html"
		},
		"tutorial-road": {
			"uri": "/example-documentation/tutorials/road.html"
		},
		"tutorial-api-manifest": {
			"uri": "/example-documentation/tutorials/api-manifest.html"
		},
		"bPLElHQ4x1WPxxFGZOXMn": {
			"uri": "/example-documentation/@webdoc/example/PIXI.html"
		},
		"UjJGmZP_mhpx4vS8h_ORG": {
			"uri": "/example-documentation/@webdoc/example/PIXI/utils.html"
		},
		"_lWrkopBd99RyRIipAfTK": {
			"uri": "/example-documentation/@webdoc/example/PIXI/utils/skipHello.html"
		},
		"z0dzCU6Sev3Mb0uR-UtU1": {
			"uri": "/example-documentation/@webdoc/example/PIXI/TilingSprite.html"
		},
		"czeR1ZfF3lHoIuWs4rqdr": {
			"uri": "/example-documentation/@webdoc/example/PIXI/TilingSprite.html#constructor"
		},
		"Si0vqrP7_GiL-iYOOfBbD": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractRenderer.html"
		},
		"1hi3cj_XyjmjDIOdxKZ4k": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractRenderer.html#backgroundColor"
		},
		"VAO3NgWKASsaOkLn77W7l": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractRenderer.html#constructor"
		},
		"_9DkQTYt_miTJF7bMrd0q": {
			"uri": "/example-documentation/@webdoc/example/PIXI/ObjectRenderer.html"
		},
		"bx1wFxtAK2uwjIYolGhMc": {
			"uri": "/example-documentation/@webdoc/example/PIXI/ObjectRenderer.html#renderer"
		},
		"-Gngu1CwDhDVCtvQmx1Gr": {
			"uri": "/example-documentation/@webdoc/example/PIXI/ObjectRenderer.html#constructor"
		},
		"LJ5qJbLT8SBKVWsmoM8g4": {
			"uri": "/example-documentation/@webdoc/example/PIXI/ObjectRenderer.html#destroy"
		},
		"GSl3ykGyUL1o57E7TrEVP": {
			"uri": "/example-documentation/@webdoc/example/PIXI/ObjectRenderer.html#flush"
		},
		"uYDgkNLto6Eof0b7eGVeR": {
			"uri": "/example-documentation/@webdoc/example/PIXI/ObjectRenderer.html#render"
		},
		"nHhio93gwizPAQLSgYm90": {
			"uri": "/example-documentation/@webdoc/example/PIXI/ObjectRenderer.html#start"
		},
		"b2IIfPbMvNeodK80oHF3e": {
			"uri": "/example-documentation/@webdoc/example/PIXI/ObjectRenderer.html#stop"
		},
		"rkgLTlDBLM1LtPe2-s6qk": {
			"uri": "/example-documentation/@webdoc/example/PIXI/System.html"
		},
		"qXacrswuPF2GO_LIyYZLx": {
			"uri": "/example-documentation/@webdoc/example/PIXI/System.html#renderer"
		},
		"e2hsttqjZ4AQJrM0n0Npx": {
			"uri": "/example-documentation/@webdoc/example/PIXI/System.html#constructor"
		},
		"hblZ0y2dpzUrh8xPq6AOL": {
			"uri": "/example-documentation/@webdoc/example/PIXI/System.html#destroy"
		},
		"IfNJikd3DDJ3lUYf2CZ7_": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html"
		},
		"zAmTZbgKTs7ta-5c-Ginj": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#_drawCallPool"
		},
		"jfD2RyaPjucNMV0iP_xZ4": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#_textureArrayPool"
		},
		"PMgIz1ABGKkbEcn2YXHm0": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#bufferSize"
		},
		"NhKSGGlpZl1G3Wrtd2TQB": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#MAX_TEXTURES"
		},
		"2SXs72Zc1cHfH4-Vw7Fi2": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#renderer"
		},
		"4M84Q7e7_kMovjLaqb-sR": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#size"
		},
		"B2b6VpuV-DFsk7RiMwtHI": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#state"
		},
		"YZiyrpvanbI-09KDXdZa_": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#vertexSize"
		},
		"GaYWL7ZlyvKZBS3vor_qH": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#_shader"
		},
		"j85IDjPnjFPX7_hWdM8WN": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#geometryClass"
		},
		"Pf-HZHfhtJsxzC6zhJ_8u": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#shaderGenerator"
		},
		"90nKsFQAs33xxBB-QIFNh": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#_aBuffers"
		},
		"B8Dtaf5ZMYEqcwSL_Tyq4": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#_bufferedElements"
		},
		"4kyjUiuln4SnX6v_UQOTT": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#_bufferedTextures"
		},
		"PJOhHQRMANyzNdzJF62VA": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#_bufferSize"
		},
		"Up_6kBoF7b7T2Ey7rS-yX": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#_flushId"
		},
		"ynF8aKiz_7cbacX--o3Kl": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#_iBuffers"
		},
		"kJL3hOCSMD1HsyoB1FoTF": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#_indexCount"
		},
		"FM08uXEqQ44joQi_529Qg": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#_packedGeometries"
		},
		"Df9IQQ0zHVWUiNXtkUZNC": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#_packedGeometryPoolSize"
		},
		"9oPgAAv8OL02kDNJDPrb4": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#_vertexCount"
		},
		"u-pXDOjNbyGacG4ssOevC": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#bindAndClearTexArray"
		},
		"rtByEXyRdPgrY4tIkkfQm": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#buildDrawCalls"
		},
		"9oSwYdVb3S5MX-ZzpFNkg": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#constructor"
		},
		"QbohSfpyjk6sVrXelsjlW": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#contextChange"
		},
		"IK9Lk0rqk1srw1-fJskIQ": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#destroy"
		},
		"r1u1OBOydUd2kGPcXdsr9": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#flush"
		},
		"20mnwkSgMkke4ar78nOph": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#initFlushBuffers"
		},
		"7rc4zUzuR08QV0vIQfvem": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#onPrerender"
		},
		"IQ3YDVHXrTDC4NFgF-HUd": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#packInterleavedGeometry"
		},
		"mzRor4lVKB0YmadvNgc4W": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#render"
		},
		"fMi0bBKQh18SlYQd9AwQn": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#start"
		},
		"emPSsfrrSaNB_RMS0_JKI": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#stop"
		},
		"9MzfCphg9rm9TX5D-DZ0M": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#getAttributeBuffer"
		},
		"gZgWjy-76S4VHpzzW0H2M": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#getIndexBuffer"
		},
		"Q5kyG02yV1JKQeaXUX5xe": {
			"uri": "/example-documentation/@webdoc/example/PIXI/TRANSFORM_MODE.html"
		},
		"Kle8FO8XBgG-3AmQoIhDu": {
			"uri": "/example-documentation/@webdoc/example/PIXI/TRANSFORM_MODE.html#DYNAMIC"
		},
		"vl7L1zU-7wPRcFt_jntgO": {
			"uri": "/example-documentation/@webdoc/example/PIXI/TRANSFORM_MODE.html#STATIC"
		},
		"-OAOhP54NSgWePGEzfKKf": {
			"uri": "/example-documentation/@webdoc/example/PIXI/.html"
		},
		"dtbU9VDmilHjlWuveOZUF": {
			"uri": "/example-documentation/@webdoc/example/PIXI/.html#destroy"
		},
		"HAfpWdI47T9GoLjF2w9wm": {
			"uri": "/example-documentation/@webdoc/example/PIXI/.html#init"
		},
		"OP75Lfmc8gmkMAsP_Q5aV": {
			"uri": "/example-documentation/@webdoc/example/PIXI.html#SVG_SIZE"
		},
		"rPk205T9n36s_rCSf5zPS": {
			"uri": "/example-documentation/@webdoc/example/R.html"
		},
		"rpHLzQGh-0ZT2N2OuHDDc": {
			"uri": "/example-documentation/@webdoc/example/R/Road.html"
		},
		"3lZp4iUnZ4mdMqIonXxzT": {
			"uri": "/example-documentation/@webdoc/example/R/Road.html#constructor"
		},
		"EpVuXnpluGmmckAsMl7q-": {
			"uri": "/example-documentation/@webdoc/example/R.html#DEFAULT_LANES"
		},
		"tX9S5BZdDMkbo5PjzFY_c": {
			"uri": "/example-documentation/@webdoc/example/R.html#buildRoad"
		},
		"vB2S0D_3SDoIgboJC83m8": {
			"uri": "/example-documentation/@webdoc/example/Ts.html"
		},
		"ch5Ct_4Y0s2T-iZ_7IYCi": {
			"uri": "/example-documentation/@webdoc/example/Ts/Transaction.html"
		},
		"sZcsA2XQ-C6aGAyo0ZvRo": {
			"uri": "/example-documentation/@webdoc/example/Ts/Transaction.html#constructor"
		},
		"36-c8DU1YXwKVpbvRzLUJ": {
			"uri": "/example-documentation/@webdoc/example/Bean.html"
		},
		"N9yft_TBc8tzZQDwm0fWg": {
			"uri": "/example-documentation/@webdoc/example/Bean.html#constructor"
		},
		"SSQ5dtokkT4Xu9lZEaEGn": {
			"uri": "/example-documentation/@webdoc/example/Bean.html#roast"
		},
		"f23lbJJorisItnXeQB8gf": {
			"uri": "/example-documentation/@webdoc/example/Car.html"
		},
		"1tE9LRhwfFJ06-935Aq9_": {
			"uri": "/example-documentation/@webdoc/example/Car.html#DEFAULT_DRIVE_SHIFT"
		},
		"KN0ODIUh0-FJhbCVLleoS": {
			"uri": "/example-documentation/@webdoc/example/Car.html#bounds"
		},
		"6lRrIVFTCnbxaQvM0Z2an": {
			"uri": "/example-documentation/@webdoc/example/Car.html#interactions"
		},
		"TzRChcvOz3th7dsyZx6e9": {
			"uri": "/example-documentation/@webdoc/example/Car.html#mass"
		},
		"rH-dPUYXvAggpPpBBOqYK": {
			"uri": "/example-documentation/@webdoc/example/Car.html#model"
		},
		"cfitMPbIkipy_QiIC_tLW": {
			"uri": "/example-documentation/@webdoc/example/Car.html#position"
		},
		"l5tWBiiY5mKaKMl1UrP3w": {
			"uri": "/example-documentation/@webdoc/example/Car.html#velocity"
		},
		"iZopMkwo2foQOdeQyKAmI": {
			"uri": "/example-documentation/@webdoc/example/Car.html#vin"
		},
		"nJWGG9os4f2BAzbF7RKLn": {
			"uri": "/example-documentation/@webdoc/example/Car.html#registerRetail"
		},
		"EJeFWv_AS_Z46v5zvJQ8W": {
			"uri": "/example-documentation/@webdoc/example/Car.html#constructor"
		},
		"RHkNSJO_Oq7NSOtC9FzSr": {
			"uri": "/example-documentation/@webdoc/example/Car.html#onCrash"
		},
		"S2SncO6-CLgxBYYrEYM5-": {
			"uri": "/example-documentation/@webdoc/example/CoffeeBean.html"
		},
		"msF5_6Xp3Hc0ZLc1xEe3W": {
			"uri": "/example-documentation/@webdoc/example/CoffeeBean.html#maturity"
		},
		"WLiptBdK83ZUIgzBi8BRM": {
			"uri": "/example-documentation/@webdoc/example/CoffeeBean.html#roasted"
		},
		"wVvi-FWkjSUSTwUb78XZ8": {
			"uri": "/example-documentation/@webdoc/example/CoffeeBean.html#constructor"
		},
		"5V94FfYexOE5rschXoMoe": {
			"uri": "/example-documentation/@webdoc/example/CoffeeBean.html#roast"
		},
		"TpBUnweS7W6i61utEENXH": {
			"uri": "/example-documentation/@webdoc/example/ExampleFactory.html"
		},
		"qt4IaH4YdojcMPMB3WTr8": {
			"uri": "/example-documentation/@webdoc/example/ExampleFactory.html#getInstance"
		},
		"9-rl2dW-pPTj32lfSMi9R": {
			"uri": "/example-documentation/@webdoc/example/ExampleFactory.html#build"
		},
		"WvLMuSiWnylt1Z7wSZzoC": {
			"uri": "/example-documentation/@webdoc/example/ExampleFactory.html#constructor"
		},
		"-laic0_BqPslKURn8ERCe": {
			"uri": "/example-documentation/@webdoc/example/ExampleFactory.html#getContext"
		},
		"UXcFl7BRGYfTRl6MdCtxn": {
			"uri": "/example-documentation/@webdoc/example/Gravity.html"
		},
		"o1Z_4b2cN5fintwW5W5YP": {
			"uri": "/example-documentation/@webdoc/example/Gravity.html#constructor"
		},
		"awjnynROmF_zxqX4NnNgx": {
			"uri": "/example-documentation/@webdoc/example/Gravity.html#force"
		},
		"8ATM13Tfo7WrKWr-KdrMB": {
			"uri": "/example-documentation/@webdoc/example/PhysicalInteraction.html"
		},
		"xFFYwrOnbCnUFmGEuvt3M": {
			"uri": "/example-documentation/@webdoc/example/PhysicalInteraction.html#GRAVITATIONAL_CONSTANT"
		},
		"Hz8HiP7KVA8VYI0OAVMoE": {
			"uri": "/example-documentation/@webdoc/example/PhysicalInteraction.html#createGravity"
		},
		"L2GxfUk7Uz8N_U_gqfLel": {
			"uri": "/example-documentation/@webdoc/example/PhysicalInteraction.html#force"
		},
		"2dAjkMLLxGY88b1O1lZj3": {
			"uri": "/example-documentation/@webdoc/example/PhysicalObject.html"
		},
		"0vZQcr4Uz-BpLeQ2gUFZf": {
			"uri": "/example-documentation/@webdoc/example/PhysicalObject.html#bounds"
		},
		"wZytUrv7OnopwTXvsyfn1": {
			"uri": "/example-documentation/@webdoc/example/PhysicalObject.html#interactions"
		},
		"oDZyAHbKeBzkW-FPr4iyO": {
			"uri": "/example-documentation/@webdoc/example/PhysicalObject.html#mass"
		},
		"L-NB3LgO4ZPiGGQSlTyNw": {
			"uri": "/example-documentation/@webdoc/example/PhysicalObject.html#position"
		},
		"vdWF1UKQjv18J_UudBTR0": {
			"uri": "/example-documentation/@webdoc/example/PhysicalObject.html#velocity"
		},
		"du_tHggmzkLYPMPLy4UP9": {
			"uri": "/example-documentation/@webdoc/example/Vector.html"
		},
		"aQae9Diy6nw3-Vn1HIovi": {
			"uri": "/example-documentation/@webdoc/example/Vector.html#dimensions"
		},
		"w530Q83gMUlJirOHondT0": {
			"uri": "/example-documentation/@webdoc/example/Vector.html#add"
		},
		"1N-hFx2dKrmCF2vz4Dq7y": {
			"uri": "/example-documentation/@webdoc/example/Vector.html#equalTo"
		},
		"kA-GK_w8PY2bD4BD35vaf": {
			"uri": "/example-documentation/@webdoc/example/Vector.html#isCompat"
		},
		"mHQjyI2Wpj9XuJUx1UeUR": {
			"uri": "/example-documentation/@webdoc/example/CAR_MAKES.html"
		},
		"W8qWCsxcg7JK3pgxtQduK": {
			"uri": "/example-documentation/@webdoc/example/CAR_MAKES.html#FERRARI"
		},
		"4V10np5mBZLG9-VraI1R6": {
			"uri": "/example-documentation/@webdoc/example/CAR_MAKES.html#FORD"
		},
		"oyqpiWxMdp-SoWwwsPpYT": {
			"uri": "/example-documentation/@webdoc/example/CAR_MAKES.html#GENERAL_MOTORS"
		},
		"r7F02sQF2_PQqfQ-bgczi": {
			"uri": "/example-documentation/@webdoc/example/CAR_MAKES.html#JAGUAR"
		},
		"Quw0I9HapB1ixxa7rRn7q": {
			"uri": "/example-documentation/@webdoc/example/CAR_MAKES.html#KIA"
		},
		"9PfxoDVWWlUtJcoG0gTKw": {
			"uri": "/example-documentation/@webdoc/example/CAR_MAKES.html#LAMBORGHINI"
		},
		"5-E4-svOnEeXWm-f6NR8K": {
			"uri": "/example-documentation/@webdoc/example/CAR_MAKES.html#TOYOTA"
		},
		"Qm4tSlJMkOC_BdtuKBeKo": {
			"uri": "/example-documentation/@webdoc/example/VectorArray.html"
		},
		"x0GuAIcHsPdjtsygKTC-H": {
			"uri": "/example-documentation/@webdoc/example/VectorArray.html#meta"
		},
		"xfG-0GRDe58PQRBsvxLjR": {
			"uri": "/example-documentation/@webdoc/example/CarDealer.html"
		},
		"VMThYUarF-h-PL4DFo6OS": {
			"uri": "/example-documentation/@webdoc/example/CarDealer.html#closeTransaction"
		},
		"y3hQfhdrs9qDYYQAM46TY": {
			"uri": "/example-documentation/@webdoc/example/CarDealer.html#initiateTransaction"
		},
		"RevCCrP2e77X2C1JxOWbn": {
			"uri": "/example-documentation/@webdoc/example/CarDealer.html#offerAsk"
		},
		"y9LwI0FkyhWBtauUnks6u": {
			"uri": "/example-documentation/@webdoc/example/CarDealer.html#offerBid"
		},
		"_pN8IgdPm_A3u0UGieVH-": {
			"uri": "/example-documentation/@webdoc/example/installBean.html"
		},
		"qH7CbTfOg1cUD4-UCnfkh": {
			"uri": "/example-documentation/@webdoc/example/isPhysicalObject.html"
		}
	}
}