{
	"version": "1.0.0",
	"metadata": {
		"linker": "(unsigned)",
		"siteDomain": "https://webdoc-labs.github.io",
		"siteRoot": "example-documentation"
	},
	"root": {
		"id": "root-vo5JyX49reE4ppf1VYVkH",
		"name": "",
		"type": "RootDoc",
		"members": [
			{
				"id": "_OBGa4Tb_ahyYkaeacIXz",
				"name": "PIXI",
				"brief": "",
				"type": "NSDoc",
				"params": [],
				"returns": [],
				"extends": [],
				"implements": [],
				"members": [
					{
						"id": "jUP3iOOaMjt5Vc-Upie-V",
						"name": "utils",
						"brief": "",
						"defaultValue": "false",
						"scope": "static",
						"type": "NSDoc",
						"params": [],
						"returns": [],
						"extends": [],
						"implements": [],
						"members": [
							{
								"id": "UEN6Hx4l5CXoxvXUKCz4T",
								"name": "skipHello",
								"brief": "<p>Skips the hello message of renderers that are created after this is run.</p>",
								"deprecated": true,
								"type": "FunctionDoc",
								"params": [],
								"returns": [
									{
										"dataType": {
											"tokens": [
												{
													"value": "void",
													"kind": "canonical"
												}
											],
											"template": "void"
										}
									}
								],
								"extends": [],
								"implements": []
							}
						]
					},
					{
						"id": "kZhKc4o9axZMfWfxJdkGB",
						"name": "TilingSprite",
						"brief": "",
						"deprecated": "since 5.0.0",
						"scope": "static",
						"see": [
							"PIXI.TilingSprite"
						],
						"type": "ClassDoc",
						"params": [],
						"returns": [],
						"extends": [],
						"implements": [],
						"members": [
							{
								"id": "IEvrfE0L3QSFXdzjrckJo",
								"name": "constructor",
								"brief": "",
								"access": "public",
								"scope": "instance",
								"type": "MethodDoc",
								"params": [],
								"returns": []
							}
						]
					},
					{
						"id": "7uMIRXwfYpmV3F5BNrTjq",
						"name": "AbstractRenderer",
						"brief": "",
						"type": "ClassDoc",
						"params": [],
						"returns": [],
						"extends": [],
						"implements": [],
						"members": [
							{
								"id": "H0ewwKfeChhdU8kxr1zxi",
								"name": "backgroundColor",
								"brief": "<p>The background color to fill if not transparent</p>",
								"scope": "instance",
								"type": "PropertyDoc",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "5eSX54L6Y7SNVhZgFcKlk",
								"name": "constructor",
								"brief": "",
								"access": "public",
								"scope": "instance",
								"type": "MethodDoc",
								"params": [],
								"returns": []
							}
						]
					},
					{
						"id": "zKb8nx4Cgdgd7iDDlYKqV",
						"name": "ObjectRenderer",
						"brief": "<p>Base for a common object renderer that can be used as a system renderer plugin.</p>",
						"type": "ClassDoc",
						"params": [],
						"returns": [],
						"extends": [
							"PIXI.System"
						],
						"implements": [],
						"members": [
							{
								"id": "dVM19Yoc-ESIOYKxg14lG",
								"name": "renderer",
								"brief": "<p>The renderer this manager works for.</p>",
								"scope": "instance",
								"type": "PropertyDoc",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "B33xDC8xlvh9a2Odfes9k",
								"name": "constructor",
								"brief": "",
								"scope": "instance",
								"type": "MethodDoc",
								"params": [
									{
										"identifier": "renderer",
										"optional": false,
										"description": "<p>The renderer this manager works for.</p>",
										"dataType": {
											"tokens": [
												{
													"value": "PIXI.Renderer",
													"kind": "canonical"
												},
												{
													"value": "PIXI.Renderer",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									}
								],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "PHYauYkK8sMoqmQJvA_JZ",
								"name": "destroy",
								"brief": "",
								"scope": "instance",
								"type": "MethodDoc",
								"description": "<p>Generic destruction method that frees all resources. This\nshould be called by subclasses.</p>",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "PEMWrm__hLu_to6t46tME",
								"name": "flush",
								"brief": "",
								"scope": "instance",
								"type": "MethodDoc",
								"description": "<p>Stub method that should be used to empty the current\nbatch by rendering objects now.</p>",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "vMvBbFlLrKYAmMmJj5Bvy",
								"name": "render",
								"brief": "",
								"scope": "instance",
								"type": "MethodDoc",
								"description": "<p>Keeps the object to render. It doesn't have to be\nrendered immediately.</p>",
								"params": [
									{
										"identifier": "object",
										"optional": false,
										"description": "<p>The object to render.</p>",
										"dataType": {
											"tokens": [
												{
													"value": "PIXI.DisplayObject",
													"kind": "canonical"
												},
												{
													"value": "PIXI.DisplayObject",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									}
								],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "Dh_ZNGnBr-MRTqlVj6SZ8",
								"name": "start",
								"brief": "",
								"scope": "instance",
								"type": "MethodDoc",
								"description": "<p>Stub method that initializes any state required before\nrendering starts. It is different from the <code>prerender</code>\ns...",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "EGKbYZn--wA-A6oxV2UQG",
								"name": "stop",
								"brief": "",
								"scope": "instance",
								"type": "MethodDoc",
								"description": "<p>Stops the renderer. It should free up any state and\nbecome dormant.</p>",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							}
						]
					},
					{
						"id": "g0rD_q2M8UhuH7s4ZMs6i",
						"name": "System",
						"brief": "<p>System is a base class used for extending systems used by the {@link PIXI.AbstractRenderer}.</p>",
						"see": [
							"PIXI.Renderer#addSystem"
						],
						"type": "ClassDoc",
						"description": "<p>Search more here: {@link https://www.google.com/}</p>",
						"params": [],
						"returns": [],
						"extends": [],
						"implements": [],
						"members": [
							{
								"id": "BGmyhkUPy0GTfyJTd_NEt",
								"name": "renderer",
								"brief": "<p>The renderer this manager works for.</p>",
								"scope": "instance",
								"type": "PropertyDoc",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "p2gYyt0jrX_XbR3TUzPCP",
								"name": "constructor",
								"brief": "",
								"scope": "instance",
								"type": "MethodDoc",
								"params": [
									{
										"identifier": "renderer",
										"optional": false,
										"description": "<p>The renderer this manager works for.</p>",
										"dataType": {
											"tokens": [
												{
													"value": "PIXI.Renderer",
													"kind": "canonical"
												},
												{
													"value": "PIXI.Renderer",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									}
								],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "J8UtEunB4vnSepINQeDSx",
								"name": "destroy",
								"brief": "<p>Generic destroy methods to be overridden by the subclass</p>",
								"scope": "instance",
								"type": "MethodDoc",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							}
						]
					},
					{
						"id": "wqJxKa_Qz1k2-qh1ZZ0HF",
						"name": "AbstractBatchRenderer",
						"brief": "<p>Renderer dedicated to drawing and batching sprites.</p>",
						"access": "protected",
						"readonly": true,
						"type": "ClassDoc",
						"description": "<p>This is the default batch renderer. It buffers objects\nwith texture-based geometries and renders them in\nbatches. It uploa...",
						"params": [],
						"returns": [],
						"extends": [
							"PIXI.ObjectRenderer"
						],
						"implements": [],
						"members": [
							{
								"id": "giMP9Cbgwt4J_PrHCnOhu",
								"name": "_drawCallPool",
								"brief": "",
								"scope": "static",
								"type": "PropertyDoc",
								"description": "<p>Pool of <code>BatchDrawCall</code> objects that <code>flush</code> used\nto create &quot;batches&quot; of the objects being...",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "ETyteTtqxKgeylnTs6zKs",
								"name": "_textureArrayPool",
								"brief": "",
								"scope": "static",
								"type": "PropertyDoc",
								"description": "<p>Pool of <code>BatchDrawCall</code> objects that <code>flush</code> used\nto create &quot;batches&quot; of the objects being...",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "iS_97xqAfiC17qeNmmTV_",
								"name": "bufferSize",
								"brief": "",
								"scope": "instance",
								"type": "PropertyDoc",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "QUQEufkND7UT2iUXSdFT5",
								"name": "MAX_TEXTURES",
								"brief": "",
								"defaultValue": "1",
								"readonly": true,
								"scope": "instance",
								"see": [
									"PIXI.AbstractBatchRenderer#contextChange"
								],
								"type": "PropertyDoc",
								"description": "<p>Maximum number of textures that can be uploaded to\nthe GPU under the current context. It is initialized\nproperly in <code>...",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "PKRhovN1HjKM2YHKcYRQY",
								"name": "renderer",
								"brief": "<p>The renderer this manager works for.</p>",
								"scope": "instance",
								"type": "PropertyDoc",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "tXzU7r8OthPAJQMJz09RA",
								"name": "size",
								"brief": "",
								"defaultValue": "settings.SPRITE_BATCH_SIZE * 4",
								"scope": "instance",
								"type": "PropertyDoc",
								"description": "<p>The number of bufferable objects before a flush\noccurs automatically.</p>",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "CZGuiH8imuZMT2nmDsLoz",
								"name": "state",
								"brief": "<p>The WebGL state in which this renderer will work.</p>",
								"readonly": true,
								"scope": "instance",
								"type": "PropertyDoc",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "jbaW0dr8FIkoMgaNtrSk4",
								"name": "vertexSize",
								"brief": "",
								"defaultValue": "undefined",
								"readonly": true,
								"scope": "instance",
								"type": "PropertyDoc",
								"description": "<p>Size of data being buffered per vertex in the\nattribute buffers (in floats). By default, the\nbatch-renderer plugin uses 6:...",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "pikE_iJvEqVFc9krJVfJe",
								"name": "_shader",
								"brief": "<p>This shader is generated by <code>this.shaderGenerator</code>.</p>",
								"access": "protected",
								"defaultValue": "undefined",
								"scope": "instance",
								"type": "PropertyDoc",
								"description": "<p>It is generated specifically to handle the required\nnumber of textures being batched together.</p>",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "9RbTxEEEZVL6bgVHSOcCl",
								"name": "geometryClass",
								"brief": "",
								"access": "protected",
								"defaultValue": "PIXI.BatchGeometry",
								"scope": "instance",
								"type": "PropertyDoc",
								"description": "<p>The class that represents the geometry of objects\nthat are going to be batched with this.</p>",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "kdzLOhCTUxlFc8K1a9l7R",
								"name": "shaderGenerator",
								"brief": "",
								"access": "protected",
								"defaultValue": "undefined",
								"scope": "instance",
								"type": "PropertyDoc",
								"description": "<p>This is used to generate a shader that can\ncolor each vertex based on a <code>aTextureId</code>\nattribute that points to a...",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "WdMpRVZW35CE9Y9muQGjO",
								"name": "_aBuffers",
								"brief": "",
								"access": "private",
								"scope": "instance",
								"see": [
									"PIXI.AbstractBatchRenderer#getAttributeBuffer"
								],
								"type": "PropertyDoc",
								"description": "<p>Pool of <code>ViewableBuffer</code> objects that are sorted in\norder of increasing size. The flush method uses\nthe buffer ...",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "1MGWb0V4VdFXpLqe_ML0g",
								"name": "_bufferedElements",
								"brief": "<p>Buffer of objects that are yet to be rendered.</p>",
								"access": "private",
								"scope": "instance",
								"type": "PropertyDoc",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "mo7xLzEDCZZEXr9f2kll6",
								"name": "_bufferedTextures",
								"brief": "",
								"access": "private",
								"scope": "instance",
								"type": "PropertyDoc",
								"description": "<p>Data for texture batch builder, helps to save a bit of CPU on a pass</p>",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "WfrnLLlZ9jkpPktHas8HA",
								"name": "_bufferSize",
								"brief": "",
								"access": "private",
								"defaultValue": "0",
								"scope": "instance",
								"type": "PropertyDoc",
								"description": "<p>Number of elements that are buffered and are\nwaiting to be flushed.</p>",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "sissabUTOzT8UUrB40M6a",
								"name": "_flushId",
								"brief": "",
								"access": "private",
								"defaultValue": "0",
								"scope": "instance",
								"type": "PropertyDoc",
								"description": "<p>A flush may occur multiple times in a single\nframe. On iOS devices or when\n<code>settings.CAN_UPLOAD_SAME_BUFFER</code> is...",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "9E4QNe1S249SEZaA2GZKD",
								"name": "_iBuffers",
								"brief": "",
								"access": "private",
								"scope": "instance",
								"see": [
									"PIXI.AbstractBatchRenderer#getIndexBuffer"
								],
								"type": "PropertyDoc",
								"description": "<p>Pool of <code>Uint16Array</code> objects that are sorted in\norder of increasing size. The flush method uses\nthe buffer wit...",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "QrFoIXFkOmkqydYQO9LfK",
								"name": "_indexCount",
								"brief": "",
								"access": "private",
								"defaultValue": "0",
								"scope": "instance",
								"type": "PropertyDoc",
								"description": "<p>Total count of all indices used by the currently\nbuffered objects.</p>",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "IbAWZ4HP9Zz0HE0vE953J",
								"name": "_packedGeometries",
								"brief": "",
								"access": "private",
								"scope": "instance",
								"see": [
									"PIXI.AbstractBatchRenderer.contextChange"
								],
								"type": "PropertyDoc",
								"description": "<p>Pool of <code>this.geometryClass</code> geometry objects\nthat store buffers. They are used to pass data\nto the shader on e...",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "hyu5dOOMGu2fc4qobh4B1",
								"name": "_packedGeometryPoolSize",
								"brief": "",
								"access": "private",
								"defaultValue": "2",
								"scope": "instance",
								"type": "PropertyDoc",
								"description": "<p>Size of <code>this._packedGeometries</code>. It can be expanded\nif more than <code>this._packedGeometryPoolSize</code> flu...",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "mYL6HEIWx6Cu6XgcbrQsC",
								"name": "_vertexCount",
								"brief": "",
								"access": "private",
								"defaultValue": "0",
								"scope": "instance",
								"type": "PropertyDoc",
								"description": "<p>Total count of all vertices used by the currently\nbuffered objects.</p>",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "NwdCDzKWyC7nPBAS2fTm1",
								"name": "bindAndClearTexArray",
								"brief": "<p>Bind textures for current rendering</p>",
								"scope": "instance",
								"type": "MethodDoc",
								"params": [
									{
										"identifier": "texArray",
										"optional": false,
										"dataType": {
											"tokens": [
												{
													"value": "PIXI.BatchTextureArray",
													"kind": "canonical"
												},
												{
													"value": "PIXI.BatchTextureArray",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									}
								],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "SLPFN1oZJklBozACXxL_R",
								"name": "buildDrawCalls",
								"brief": "<p>Populating drawcalls for rendering</p>",
								"scope": "instance",
								"type": "MethodDoc",
								"params": [
									{
										"identifier": "texArray",
										"optional": false,
										"dataType": {
											"tokens": [
												{
													"value": "PIXI.BatchTextureArray",
													"kind": "canonical"
												},
												{
													"value": "PIXI.BatchTextureArray",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									},
									{
										"identifier": "start",
										"optional": false,
										"dataType": {
											"tokens": [
												{
													"value": "number",
													"kind": "canonical"
												},
												{
													"value": "number",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									},
									{
										"identifier": "finish",
										"optional": false,
										"dataType": {
											"tokens": [
												{
													"value": "number",
													"kind": "canonical"
												},
												{
													"value": "number",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									}
								],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "cm9fU3-Ghir72G4Gvn3SU",
								"name": "constructor",
								"brief": "",
								"scope": "instance",
								"type": "MethodDoc",
								"description": "<p>This will hook onto the renderer's <code>contextChange</code>\nand <code>prerender</code> signals.</p>",
								"params": [
									{
										"identifier": "renderer",
										"optional": false,
										"description": "<p>The renderer this works for.</p>",
										"dataType": {
											"tokens": [
												{
													"value": "PIXI.Renderer",
													"kind": "canonical"
												},
												{
													"value": "PIXI.Renderer",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									}
								],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "-1aoE0oRgsK_dMOCXzLwX",
								"name": "contextChange",
								"brief": "<p>Handles the <code>contextChange</code> signal.</p>",
								"scope": "instance",
								"type": "MethodDoc",
								"description": "<p>It calculates <code>this.MAX_TEXTURES</code> and allocating the\npacked-geometry object pool.</p>",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "ozRNHhwWDMYaYRkZWzf3y",
								"name": "destroy",
								"brief": "<p>Destroys this <code>AbstractBatchRenderer</code>. It cannot be used again.</p>",
								"scope": "instance",
								"type": "MethodDoc",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "PZtweVQ4ijEIMfKDor1mc",
								"name": "flush",
								"brief": "<p>Renders the content <em>now</em> and empties the current batch.</p>",
								"scope": "instance",
								"type": "MethodDoc",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "nnDsEi-_z4pkAFg6CO1Ea",
								"name": "initFlushBuffers",
								"brief": "<p>Makes sure that static and dynamic flush pooled objects have correct dimensions</p>",
								"scope": "instance",
								"type": "MethodDoc",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "nufYVWLP3LV-hm8uhOo1Y",
								"name": "onPrerender",
								"brief": "<p>Handles the <code>prerender</code> signal.</p>",
								"scope": "instance",
								"type": "MethodDoc",
								"description": "<p>It ensures that flushes start from the first geometry\nobject again.</p>",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "PK2mOGLAxPElqMgnIp_eh",
								"name": "packInterleavedGeometry",
								"brief": "",
								"scope": "instance",
								"type": "MethodDoc",
								"description": "<p>Takes the four batching parameters of <code>element</code>, interleaves\nand pushes them into the batching attribute/index ...",
								"params": [
									{
										"identifier": "element",
										"optional": false,
										"description": "<p>element being rendered</p>",
										"dataType": {
											"tokens": [
												{
													"value": "PIXI.Sprite",
													"kind": "canonical"
												},
												{
													"value": "PIXI.Sprite",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									},
									{
										"identifier": "attributeBuffer",
										"optional": false,
										"description": "<p>attribute buffer.</p>",
										"dataType": {
											"tokens": [
												{
													"value": "PIXI.ViewableBuffer",
													"kind": "canonical"
												},
												{
													"value": "PIXI.ViewableBuffer",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									},
									{
										"identifier": "indexBuffer",
										"optional": false,
										"description": "<p>index buffer</p>",
										"dataType": {
											"tokens": [
												{
													"value": "Uint16Array",
													"kind": "canonical"
												},
												{
													"value": "Uint16Array",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									},
									{
										"identifier": "aIndex",
										"optional": false,
										"description": "<p>number of floats already in the attribute buffer</p>",
										"dataType": {
											"tokens": [
												{
													"value": "number",
													"kind": "canonical"
												},
												{
													"value": "number",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									},
									{
										"identifier": "iIndex",
										"optional": false,
										"description": "<p>number of indices already in <code>indexBuffer</code></p>",
										"dataType": {
											"tokens": [
												{
													"value": "number",
													"kind": "canonical"
												},
												{
													"value": "number",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									}
								],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "JkX28yNzHc0DuxuNBvnJZ",
								"name": "render",
								"brief": "",
								"scope": "instance",
								"type": "MethodDoc",
								"description": "<p>Buffers the &quot;batchable&quot; object. It need not be rendered\nimmediately.</p>",
								"params": [
									{
										"identifier": "element",
										"optional": false,
										"description": "<p>the element to render when\nusing this renderer</p>",
										"dataType": {
											"tokens": [
												{
													"value": "PIXI.DisplayObject",
													"kind": "canonical"
												},
												{
													"value": "PIXI.DisplayObject",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									}
								],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "cJ6IvngILi74v5QXfeDbx",
								"name": "start",
								"brief": "<p>Starts a new sprite batch.</p>",
								"scope": "instance",
								"type": "MethodDoc",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "_JoCIWPpeHJeUAaxG02Sl",
								"name": "stop",
								"brief": "<p>Stops and flushes the current batch.</p>",
								"scope": "instance",
								"type": "MethodDoc",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "ANYWcXINBoAmH7yg7iNLW",
								"name": "getAttributeBuffer",
								"brief": "",
								"access": "private",
								"scope": "instance",
								"type": "MethodDoc",
								"description": "<p>Fetches an attribute buffer from <code>this._aBuffers</code> that\ncan hold atleast <code>size</code> floats.</p>",
								"params": [
									{
										"identifier": "size",
										"optional": false,
										"description": "<p>minimum capacity required</p>",
										"dataType": {
											"tokens": [
												{
													"value": "number",
													"kind": "canonical"
												},
												{
													"value": "number",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									}
								],
								"returns": [
									{
										"description": "<ul>\n<li>buffer than can hold atleast <code>size</code> floats</li>\n</ul>",
										"dataType": {
											"tokens": [
												{
													"value": "ViewableBuffer",
													"kind": "canonical"
												},
												{
													"value": "ViewableBuffer",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									}
								],
								"extends": [],
								"implements": []
							},
							{
								"id": "6635vqsoxpYJBqWoeerd9",
								"name": "getIndexBuffer",
								"brief": "",
								"access": "private",
								"scope": "instance",
								"type": "MethodDoc",
								"description": "<p>Fetches an index buffer from <code>this._iBuffers</code> that can\nhas atleast <code>size</code> capacity.</p>",
								"params": [
									{
										"identifier": "size",
										"optional": false,
										"description": "<p>minimum required capacity</p>",
										"dataType": {
											"tokens": [
												{
													"value": "number",
													"kind": "canonical"
												},
												{
													"value": "number",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									}
								],
								"returns": [
									{
										"description": "<ul>\n<li>buffer that can fit <code>size</code>\nindices.</li>\n</ul>",
										"dataType": {
											"tokens": [
												{
													"value": "Uint16Array",
													"kind": "canonical"
												},
												{
													"value": "Uint16Array",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									}
								],
								"extends": [],
								"implements": []
							}
						]
					},
					{
						"id": "3-SyuRW86_h_1VcK3UL1S",
						"name": "TRANSFORM_MODE",
						"brief": "<p>Constants that specify the transform type.</p>",
						"deprecated": "since 5.0.0",
						"scope": "static",
						"type": "EnumDoc",
						"params": [],
						"returns": [],
						"extends": [],
						"implements": [],
						"members": [
							{
								"id": "tX0CjOGNyDNpLgWT5WM6x",
								"name": "DYNAMIC",
								"brief": "",
								"access": "public",
								"scope": "static",
								"type": "PropertyDoc"
							},
							{
								"id": "tr-1DsuEpjFaH8qM0OZsq",
								"name": "STATIC",
								"brief": "",
								"access": "public",
								"scope": "static",
								"type": "PropertyDoc"
							}
						]
					},
					{
						"id": "vYottLG4kVAYRZcr1xeoC",
						"name": "",
						"brief": "",
						"type": "TypedefDoc",
						"params": [],
						"returns": [],
						"extends": [],
						"implements": [],
						"members": [
							{
								"id": "yIpfUiTHZUuS-BJkqt7Rx",
								"name": "destroy",
								"brief": "",
								"access": "public",
								"scope": "static",
								"type": "PropertyDoc",
								"description": "<p>Called when destroying Application, scoped to Application instance</p>"
							},
							{
								"id": "NGugSaiitVoU3P2PaTch_",
								"name": "init",
								"brief": "",
								"access": "public",
								"scope": "static",
								"type": "PropertyDoc",
								"description": "<p>Called when Application is constructed, scoped to Application instance.\nPasses in <code>options</code> as the only argumen..."
							}
						]
					},
					{
						"id": "4rO9MAh_hqJetpa3p-J8Q",
						"name": "SVG_SIZE",
						"brief": "",
						"deprecated": "since 5.0.0",
						"scope": "static",
						"see": [
							"PIXI.resources.SVGResource.SVG_SIZE"
						],
						"type": "PropertyDoc",
						"params": [],
						"returns": [],
						"extends": [],
						"implements": []
					}
				]
			},
			{
				"id": "9DryrJNx0HTkV3xv_r8Va",
				"name": "R",
				"brief": "<p>A namespace dedicated to road manipulation utilites.</p>",
				"readonly": true,
				"type": "NSDoc",
				"params": [],
				"returns": [],
				"extends": [],
				"implements": [],
				"members": [
					{
						"id": "63tC7JpvECBRcGsiptsBb",
						"name": "Road",
						"brief": "<p>This is another road class.</p>",
						"type": "ClassDoc",
						"params": [],
						"returns": [],
						"extends": [],
						"implements": [],
						"members": [
							{
								"id": "yIXircf86pLfrrhVVktG5",
								"name": "constructor",
								"brief": "<p>This is another road class.</p>",
								"access": "public",
								"scope": "instance",
								"type": "MethodDoc",
								"params": [],
								"returns": []
							}
						]
					},
					{
						"id": "janpy0mYYF6klpOKP8Et3",
						"name": "DEFAULT_LANES",
						"brief": "<p>The default no. of lanes per one side of road</p>",
						"defaultValue": "4",
						"scope": "static",
						"type": "PropertyDoc",
						"params": [],
						"returns": [],
						"extends": [],
						"implements": []
					},
					{
						"id": "u65hAXc6vdwg4ltI1KSVv",
						"name": "buildRoad",
						"brief": "<p>Builds a road</p>",
						"scope": "instance",
						"type": "MethodDoc",
						"params": [
							{
								"identifier": "address",
								"optional": false,
								"dataType": {
									"tokens": [
										{
											"value": "string",
											"kind": "canonical"
										}
									],
									"template": "string"
								}
							}
						],
						"returns": [
							{
								"dataType": {
									"tokens": [
										{
											"value": "ExampleFactory",
											"kind": "canonical"
										},
										{
											"value": "ExampleFactory",
											"kind": "link"
										}
									],
									"template": "%1"
								}
							}
						],
						"extends": [],
						"implements": []
					}
				]
			},
			{
				"id": "Q8cs5WPiiMhompO0oexUA",
				"name": "Ts",
				"brief": "",
				"type": "NSDoc",
				"params": [],
				"returns": [],
				"extends": [],
				"implements": [],
				"members": [
					{
						"id": "1gFJ7pAZJd2IqIktd3jW5",
						"name": "Transaction",
						"brief": "",
						"type": "ClassDoc",
						"params": [],
						"returns": [],
						"extends": [],
						"implements": [],
						"members": [
							{
								"id": "ww0cbwBEwRND1e6sO6Wt4",
								"name": "constructor",
								"brief": "",
								"access": "public",
								"scope": "instance",
								"type": "MethodDoc",
								"params": [],
								"returns": []
							}
						]
					},
					{
						"id": "mbLmzJrzCoU4UVZ9ZzyIH",
						"name": "Banana",
						"brief": "<p>Banana</p>",
						"type": "TypedefDoc",
						"params": [],
						"returns": [],
						"extends": [],
						"implements": [],
						"members": [
							{
								"id": "lK6Il8ntVpnzRrmKcZ0xh",
								"name": "color",
								"brief": "<p>Color of banana</p>",
								"type": "PropertyDoc",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "GIyOU6cgX7LcwOqdcvd1Z",
								"name": "peels",
								"brief": "<p>Peels in banana</p>",
								"type": "PropertyDoc",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "hQgbd8KZrYFVycuCxCuL-",
								"name": "usage",
								"brief": "<p>Analytics around how many people have interacted with this banana</p>",
								"type": "PropertyDoc",
								"params": [],
								"returns": [],
								"extends": [],
								"implements": []
							},
							{
								"id": "KjeAV6HIe6IcQV_K8q8wR",
								"name": "ripe",
								"brief": "<p>Evaluate if banana is ripe for eating</p>",
								"type": "MethodDoc",
								"params": [],
								"returns": [
									{
										"dataType": {
											"tokens": [
												{
													"value": "boolean",
													"kind": "canonical"
												}
											],
											"template": "boolean"
										}
									}
								],
								"extends": [],
								"implements": []
							},
							{
								"id": "OVDAAmcC4WWJ2Pwx0uA2l",
								"name": "rotten",
								"brief": "<p>Check if banana has rotten</p>",
								"type": "MethodDoc",
								"params": [],
								"returns": [
									{
										"dataType": {
											"tokens": [
												{
													"value": "boolean",
													"kind": "canonical"
												}
											],
											"template": "boolean"
										}
									}
								],
								"extends": [],
								"implements": []
							}
						]
					}
				]
			},
			{
				"id": "AlQ6MpFBYnXER9BSI3wCB",
				"name": "Bean",
				"brief": "<p>Bean class</p>",
				"type": "ClassDoc",
				"params": [],
				"returns": [],
				"extends": [],
				"implements": [],
				"members": [
					{
						"id": "gOGQ7_SGeKQbS2XJ_3yQZ",
						"name": "constructor",
						"brief": "<p>Bean class</p>",
						"access": "public",
						"scope": "instance",
						"type": "MethodDoc",
						"params": [],
						"returns": []
					},
					{
						"id": "X7IbahnMg2xrR7-rHehZk",
						"name": "roast",
						"brief": "<p>(optional) roasting method</p>",
						"abstract": true,
						"scope": "instance",
						"type": "MethodDoc",
						"params": [],
						"returns": [
							{
								"dataType": {
									"tokens": [
										{
											"value": "void",
											"kind": "canonical"
										}
									],
									"template": "void"
								}
							}
						],
						"extends": [],
						"implements": []
					}
				]
			},
			{
				"id": "Irv6k-2nI39mtBmt68_Ul",
				"name": "Car",
				"brief": "<p><em>Simulation</em> for a automobile that can drive on a manifold surface.</p>",
				"type": "ClassDoc",
				"description": "<pre class=\"hljs\"><code><span class=\"hljs-keyword\">const</span> car = <span class=\"hljs-keyword\">new</span> Car({ <span class...",
				"params": [],
				"returns": [],
				"extends": [
					"PhysicalObject"
				],
				"implements": [],
				"members": [
					{
						"id": "67APnM-JJJLnL_GCAthFu",
						"name": "DEFAULT_DRIVE_SHIFT",
						"brief": "",
						"defaultValue": "\"manual\"",
						"scope": "static",
						"type": "PropertyDoc",
						"params": [],
						"returns": [],
						"extends": [],
						"implements": []
					},
					{
						"id": "sjUQdbzdj7h3Sza8DzpKs",
						"name": "bounds",
						"brief": "",
						"scope": "instance",
						"type": "PropertyDoc",
						"description": "<p>The mesh enclosing this object. By default, it is a &quot;point&quot; object at the its own\nposition.</p>",
						"params": [],
						"returns": [],
						"extends": [],
						"implements": []
					},
					{
						"id": "4N7R5tjQi9QaeMQ8GW05l",
						"name": "interactions",
						"brief": "<p>All causal interactions with other objects</p>",
						"scope": "instance",
						"type": "PropertyDoc",
						"params": [],
						"returns": [],
						"extends": [],
						"implements": []
					},
					{
						"id": "vBWktouECvcnf9DiBNBD-",
						"name": "mass",
						"brief": "<p>The mass of this object in kilograms.</p>",
						"defaultValue": "0",
						"scope": "instance",
						"type": "PropertyDoc",
						"params": [],
						"returns": [],
						"extends": [],
						"implements": []
					},
					{
						"id": "orhBGuDs895Sf4adYePVS",
						"name": "model",
						"brief": "",
						"access": "public",
						"defaultValue": "\"TEST\"",
						"scope": "instance",
						"type": "PropertyDoc",
						"params": [],
						"returns": [],
						"extends": [],
						"implements": []
					},
					{
						"id": "jhSmWDJnVyilb1XKEkgvP",
						"name": "position",
						"brief": "<p>The absolute position of this object's center of mass (in the universal reference frame)</p>",
						"defaultValue": "[0, 0, 0]",
						"scope": "instance",
						"type": "PropertyDoc",
						"params": [],
						"returns": [],
						"extends": [],
						"implements": []
					},
					{
						"id": "pVHr4iNUJ4xR6G7W--VTT",
						"name": "velocity",
						"brief": "<p>The absolute velocity of this object (in the universal reference frame)</p>",
						"defaultValue": "[0, 0, 0]",
						"scope": "instance",
						"type": "PropertyDoc",
						"params": [],
						"returns": [],
						"extends": [],
						"implements": []
					},
					{
						"id": "lUxGt6xZ99kFeuZR87lWO",
						"name": "vin",
						"brief": "",
						"defaultValue": "0",
						"scope": "instance",
						"type": "PropertyDoc",
						"params": [],
						"returns": [],
						"extends": [],
						"implements": []
					},
					{
						"id": "afxujjiWNpjynTMvIX6db",
						"name": "registerRetail",
						"brief": "<p>Register a retail dealer for buying a car from</p>",
						"scope": "static",
						"type": "MethodDoc",
						"params": [
							{
								"identifier": "name",
								"optional": false,
								"dataType": {
									"tokens": [
										{
											"value": "string",
											"kind": "canonical"
										}
									],
									"template": "string"
								}
							}
						],
						"returns": [],
						"extends": [],
						"implements": []
					},
					{
						"id": "5lizaYZKHXuwN31___KMO",
						"name": "constructor",
						"brief": "",
						"scope": "instance",
						"type": "MethodDoc",
						"params": [
							{
								"identifier": "model",
								"optional": false,
								"default": "\"TEST\"",
								"dataType": {
									"tokens": [
										{
											"value": "string",
											"kind": "canonical"
										}
									],
									"template": "string"
								}
							}
						],
						"returns": [],
						"extends": [],
						"implements": []
					},
					{
						"id": "y7oqw3lytQGQLv-6i6-_z",
						"name": "onCrash",
						"brief": "",
						"examples": [
							{
								"caption": "",
								"code": "\n car.onCrash((car) => console.logicalAssignment(car.id + \" crashed!\"))\n"
							}
						],
						"scope": "instance",
						"type": "MethodDoc",
						"params": [
							{
								"identifier": "callback",
								"optional": false,
								"dataType": {
									"tokens": [
										{
											"value": "Function",
											"kind": "canonical"
										}
									],
									"template": "Function"
								}
							},
							{
								"identifier": "callback.name",
								"dataType": {
									"tokens": [
										{
											"value": "string",
											"kind": "canonical"
										}
									],
									"template": "string"
								}
							}
						],
						"returns": [],
						"extends": [],
						"implements": []
					}
				]
			},
			{
				"id": "K5QshxgaZDFudlXL19-4r",
				"name": "CoffeeBean",
				"brief": "<p>This class illustrates how you can create a Java-bean like component in JavaScript</p>",
				"type": "ClassDoc",
				"params": [],
				"returns": [],
				"extends": [
					"Bean"
				],
				"implements": [],
				"members": [
					{
						"id": "vqX8YbbOomwTDh4LIZ1iE",
						"name": "maturity",
						"brief": "",
						"scope": "instance",
						"type": "PropertyDoc",
						"params": [],
						"returns": [],
						"extends": [],
						"implements": []
					},
					{
						"id": "IGOWqgK56mIOHRthHVovT",
						"name": "roasted",
						"brief": "",
						"scope": "instance",
						"type": "PropertyDoc",
						"params": [],
						"returns": [],
						"extends": [],
						"implements": []
					},
					{
						"id": "7Qo69zGaRiFZi0IoYTUPT",
						"name": "constructor",
						"brief": "",
						"scope": "instance",
						"type": "MethodDoc",
						"params": [
							{
								"identifier": "options",
								"optional": true,
								"dataType": {
									"tokens": [
										{
											"value": "object",
											"kind": "canonical"
										}
									],
									"template": "object"
								}
							},
							{
								"identifier": "options.roasted",
								"optional": true,
								"description": "<p>whether the bean is <code>roasted</code></p>",
								"dataType": {
									"tokens": [
										{
											"value": "boolean",
											"kind": "canonical"
										}
									],
									"template": "boolean"
								}
							},
							{
								"identifier": "options.maturity",
								"optional": true,
								"dataType": {
									"tokens": [
										{
											"value": "number",
											"kind": "canonical"
										},
										{
											"value": "number",
											"kind": "canonical"
										}
									],
									"template": "%1"
								}
							}
						],
						"returns": [],
						"extends": [],
						"implements": []
					},
					{
						"id": "NdZvpNgnUecHhR3_eh9t9",
						"name": "roast",
						"brief": "<p>Roast this coffee bean.</p>",
						"scope": "instance",
						"type": "MethodDoc",
						"description": "<p>NOTE: You cannot re-roast coffee beans and an error will be thrown if you try to\nroast a roasted coffee bean.</p>",
						"params": [],
						"returns": [],
						"extends": [],
						"implements": []
					}
				]
			},
			{
				"id": "6Ilx6f0m0LdIVRlqsNrvj",
				"name": "ExampleFactory",
				"type": "ClassDoc",
				"description": "<p>{@link ExampleFactory} can be used to build examples.</p>\n<pre class=\"hljs\"><code><span class=\"hljs-comment\">// <span clas...",
				"params": [
					{
						"identifier": "context",
						"optional": true,
						"default": "null",
						"description": "<p>A custom context for the factory.</p>",
						"dataType": {
							"tokens": [
								{
									"value": "ExampleContext",
									"kind": "canonical"
								},
								{
									"value": "ExampleContext",
									"kind": "canonical"
								}
							],
							"template": "%1"
						}
					}
				],
				"returns": [],
				"extends": [],
				"implements": [],
				"members": [
					{
						"id": "T_FX-iciP3Vm229HloKJ7",
						"name": "getInstance",
						"brief": "<p>Gets a lazily-initialized, shared singleton instance of {@link ExampleFactory}.</p>",
						"scope": "static",
						"type": "MethodDoc",
						"params": [],
						"returns": [
							{
								"dataType": {
									"tokens": [
										{
											"value": "ExampleFactory",
											"kind": "canonical"
										},
										{
											"value": "ExampleFactory",
											"kind": "link"
										}
									],
									"template": "%1"
								}
							}
						],
						"extends": [],
						"implements": []
					},
					{
						"id": "dciz085kJ1UCXLG9znYvJ",
						"name": "build",
						"brief": "<p>Build the road.</p>",
						"scope": "instance",
						"type": "MethodDoc",
						"params": [],
						"returns": [],
						"extends": [],
						"implements": []
					},
					{
						"id": "qHUAD9rgfTIWD7px5txXK",
						"name": "constructor",
						"brief": "<p>This constructor should only be used for custom contexts.</p>",
						"access": "public",
						"scope": "instance",
						"type": "MethodDoc",
						"params": [
							{
								"identifier": "context",
								"optional": true,
								"default": "null",
								"description": "<p>A custom context for the factory.</p>",
								"dataType": {
									"tokens": [
										{
											"value": "ExampleContext",
											"kind": "canonical"
										},
										{
											"value": "ExampleContext",
											"kind": "canonical"
										}
									],
									"template": "%1"
								}
							}
						],
						"returns": []
					},
					{
						"id": "VZMmTcHq_DLFUWQR9pTRY",
						"name": "getContext",
						"brief": "<p>Get the context of this factory.</p>",
						"scope": "instance",
						"type": "MethodDoc",
						"params": [],
						"returns": [
							{
								"dataType": {
									"tokens": [
										{
											"value": "ExampleContext",
											"kind": "canonical"
										},
										{
											"value": "ExampleContext",
											"kind": "canonical"
										}
									],
									"template": "%1"
								}
							}
						],
						"extends": [],
						"implements": []
					}
				]
			},
			{
				"id": "j7oqIem62DDZU4ftAIZjc",
				"name": "Gravity",
				"brief": "<p>This class shouldn't be documented!</p>",
				"type": "ClassDoc",
				"params": [],
				"returns": [],
				"extends": [
					"PhysicalInteraction"
				],
				"implements": [],
				"members": [
					{
						"id": "2Q1CJ4Yk3hmt6MmHgkojR",
						"name": "constructor",
						"brief": "<p>This class shouldn't be documented!</p>",
						"access": "public",
						"scope": "instance",
						"type": "MethodDoc",
						"params": [],
						"returns": []
					},
					{
						"id": "qNu9qvNO0borGXaIqCM-N",
						"name": "force",
						"brief": "<p>This method should be overriden to calculate the force at the given instant.</p>",
						"scope": "instance",
						"type": "MethodDoc",
						"params": [],
						"returns": [
							{
								"dataType": {
									"tokens": [
										{
											"value": "Vector<3>",
											"kind": "canonical"
										},
										{
											"value": "Vector",
											"kind": "link"
										},
										{
											"value": "3",
											"kind": "canonical"
										}
									],
									"template": "%1<%2>"
								}
							}
						],
						"extends": [],
						"implements": []
					}
				]
			},
			{
				"id": "Q8yKS8PQkzCzeT3lNxaxt",
				"name": "PhysicalInteraction",
				"brief": "",
				"readonly": true,
				"type": "ClassDoc",
				"description": "<p>A physical interaction is a force causes object positions to be re-evaulated each frame based on\nforce's magnitude.</p>",
				"params": [],
				"returns": [],
				"extends": [],
				"implements": [],
				"members": [
					{
						"id": "owLrh5DfbR0UWZf3xgoD-",
						"name": "GRAVITATIONAL_CONSTANT",
						"brief": "",
						"defaultValue": "1",
						"scope": "static",
						"type": "PropertyDoc",
						"params": [],
						"returns": [],
						"extends": [],
						"implements": []
					},
					{
						"id": "x6W7RcBnSGNgZ5vLZV76w",
						"name": "createGravity",
						"brief": "<p>Creates a graviational force</p>",
						"scope": "static",
						"type": "MethodDoc",
						"params": [
							{
								"identifier": "objects",
								"optional": false,
								"dataType": {
									"tokens": [
										{
											"value": "Tuple<PhysicalObject, 2>",
											"kind": "canonical"
										},
										{
											"value": "Tuple",
											"kind": "canonical"
										},
										{
											"value": "PhysicalObject",
											"kind": "link"
										},
										{
											"value": "2",
											"kind": "canonical"
										}
									],
									"template": "%1<%3, %2>"
								}
							}
						],
						"returns": [
							{
								"dataType": {
									"tokens": [
										{
											"value": "PhysicalInteraction",
											"kind": "canonical"
										},
										{
											"value": "PhysicalInteraction",
											"kind": "link"
										}
									],
									"template": "%1"
								}
							}
						],
						"extends": [],
						"implements": []
					},
					{
						"id": "zbD_MlZ3YO09ERBn0E6KB",
						"name": "force",
						"brief": "<p>This method should be overriden to calculate the force at the given instant.</p>",
						"scope": "instance",
						"type": "MethodDoc",
						"params": [],
						"returns": [
							{
								"dataType": {
									"tokens": [
										{
											"value": "Vector<3>",
											"kind": "canonical"
										},
										{
											"value": "Vector",
											"kind": "link"
										},
										{
											"value": "3",
											"kind": "canonical"
										}
									],
									"template": "%1<%2>"
								}
							}
						],
						"extends": [],
						"implements": []
					}
				]
			},
			{
				"id": "lw-O5NVgDCE5RgK7sRHPG",
				"name": "PhysicalObject",
				"brief": "",
				"type": "ClassDoc",
				"description": "<p>Represents a physical-object and its intrinsic properties. This is useful for approximating\nextended objects as a uniform,...",
				"params": [],
				"returns": [],
				"extends": [],
				"implements": [],
				"members": [
					{
						"id": "i0J2xGGdbO297v1LOpSNN",
						"name": "bounds",
						"brief": "",
						"scope": "instance",
						"type": "PropertyDoc",
						"description": "<p>The mesh enclosing this object. By default, it is a &quot;point&quot; object at the its own\nposition.</p>",
						"params": [],
						"returns": [],
						"extends": [],
						"implements": []
					},
					{
						"id": "1vH7AsdwrXsihNaylvawl",
						"name": "interactions",
						"brief": "<p>All causal interactions with other objects</p>",
						"scope": "instance",
						"type": "PropertyDoc",
						"params": [],
						"returns": [],
						"extends": [],
						"implements": []
					},
					{
						"id": "EZKRiqJaqeJE0FIH6YpoI",
						"name": "mass",
						"brief": "<p>The mass of this object in kilograms.</p>",
						"defaultValue": "0",
						"scope": "instance",
						"type": "PropertyDoc",
						"params": [],
						"returns": [],
						"extends": [],
						"implements": []
					},
					{
						"id": "_DXynJp20YOKQkIrZMh-5",
						"name": "position",
						"brief": "<p>The absolute position of this object's center of mass (in the universal reference frame)</p>",
						"defaultValue": "[0, 0, 0]",
						"scope": "instance",
						"type": "PropertyDoc",
						"params": [],
						"returns": [],
						"extends": [],
						"implements": []
					},
					{
						"id": "NTNrwGNujg-t5Up6xPF-K",
						"name": "velocity",
						"brief": "<p>The absolute velocity of this object (in the universal reference frame)</p>",
						"defaultValue": "[0, 0, 0]",
						"scope": "instance",
						"type": "PropertyDoc",
						"params": [],
						"returns": [],
						"extends": [],
						"implements": []
					}
				]
			},
			{
				"id": "VKZsGy2IduQe015QACrMF",
				"name": "Vector",
				"brief": "",
				"type": "ClassDoc",
				"params": [],
				"returns": [],
				"extends": [
					"Array"
				],
				"implements": [],
				"members": [
					{
						"id": "CWby0cHv6ybFpDNkDyMmj",
						"name": "dimensions",
						"brief": "",
						"scope": "instance",
						"type": "PropertyDoc",
						"description": "<p>The no. of components of this vector</p>",
						"params": [],
						"returns": [],
						"extends": [],
						"implements": []
					},
					{
						"id": "pGDFi6Z6IJB-2yox26NT8",
						"name": "add",
						"brief": "<p>Add <code>vec</code> to this</p>",
						"scope": "instance",
						"type": "MethodDoc",
						"params": [
							{
								"identifier": "vec",
								"optional": false,
								"dataType": {
									"tokens": [
										{
											"value": "Vector",
											"kind": "canonical"
										},
										{
											"value": "Vector",
											"kind": "link"
										}
									],
									"template": "%1"
								}
							}
						],
						"returns": [],
						"extends": [],
						"implements": []
					},
					{
						"id": "FF3OCiDb4I5yn0Vcn6Bjm",
						"name": "equalTo",
						"brief": "<p>Whether this and <code>vec</code> are equal vectors</p>",
						"scope": "instance",
						"type": "MethodDoc",
						"params": [
							{
								"identifier": "vec",
								"optional": false,
								"dataType": {
									"tokens": [
										{
											"value": "Vector",
											"kind": "canonical"
										},
										{
											"value": "Vector",
											"kind": "link"
										}
									],
									"template": "%1"
								}
							}
						],
						"returns": [
							{
								"dataType": {
									"tokens": [
										{
											"value": "boolean",
											"kind": "canonical"
										}
									],
									"template": "boolean"
								}
							}
						],
						"extends": [],
						"implements": []
					},
					{
						"id": "wiBwk-0jnH2lKTGOrSb78",
						"name": "isCompat",
						"brief": "",
						"scope": "instance",
						"type": "MethodDoc",
						"description": "<p>Whether this and <code>vec</code> are compatible vectors (same dimensions)</p>",
						"params": [
							{
								"identifier": "vec",
								"optional": false,
								"dataType": {
									"tokens": [
										{
											"value": "Vector",
											"kind": "canonical"
										},
										{
											"value": "Vector",
											"kind": "link"
										}
									],
									"template": "%1"
								}
							}
						],
						"returns": [
							{
								"dataType": {
									"tokens": [
										{
											"value": "boolean",
											"kind": "canonical"
										}
									],
									"template": "boolean"
								}
							}
						],
						"extends": [],
						"implements": []
					}
				]
			},
			{
				"id": "R8uzxN8ausQbtGUv4tM4H",
				"name": "CAR_MAKES",
				"brief": "",
				"see": [
					"CarDealer"
				],
				"type": "EnumDoc",
				"description": "<p>These are the possible types of car makes.</p>",
				"params": [],
				"returns": [],
				"extends": [],
				"implements": [],
				"members": [
					{
						"id": "lpOEFKBqynTnd3oww5ILG",
						"name": "FERRARI",
						"brief": "",
						"access": "public",
						"scope": "static",
						"type": "PropertyDoc"
					},
					{
						"id": "ua8h_ldqQiQfryYuveYgW",
						"name": "FORD",
						"brief": "",
						"access": "public",
						"scope": "static",
						"type": "PropertyDoc"
					},
					{
						"id": "pVmmRQdcXTBo5cFkfJlQZ",
						"name": "GENERAL_MOTORS",
						"brief": "",
						"access": "public",
						"scope": "static",
						"type": "PropertyDoc"
					},
					{
						"id": "1v-WQWtJ2JA2PGYqw_KWB",
						"name": "JAGUAR",
						"brief": "",
						"access": "public",
						"scope": "static",
						"type": "PropertyDoc"
					},
					{
						"id": "Z1x4oTpeREgBbNZZZYFUC",
						"name": "KIA",
						"brief": "",
						"access": "public",
						"scope": "static",
						"type": "PropertyDoc"
					},
					{
						"id": "gKaYSzhrsubW9bpdukzuD",
						"name": "LAMBORGHINI",
						"brief": "",
						"access": "public",
						"scope": "static",
						"type": "PropertyDoc"
					},
					{
						"id": "QM5pFiwYtWkOzaIVbCPbf",
						"name": "TOYOTA",
						"brief": "",
						"access": "public",
						"scope": "static",
						"type": "PropertyDoc",
						"description": "<p>toyota make</p>"
					}
				]
			},
			{
				"id": "4nvpFcQyqoOtNUcIUq-f-",
				"name": "VectorArray",
				"brief": "",
				"type": "TypedefDoc",
				"description": "<p>A 3D vector</p>",
				"params": [],
				"returns": [],
				"extends": [],
				"implements": [],
				"members": [
					{
						"id": "-vz-t3-YMneU2pcp3-QsS",
						"name": "meta",
						"brief": "",
						"access": "public",
						"scope": "static",
						"type": "PropertyDoc"
					}
				]
			},
			{
				"id": "ZodWBScxEH5QpUG5EjrPv",
				"name": "CarDealer",
				"brief": "<p>This is the interface for dealing with car dealers.</p>",
				"type": "InterfaceDoc",
				"params": [],
				"returns": [],
				"extends": [],
				"implements": [],
				"members": [
					{
						"id": "Vt-QS5u7yvBrJSq5nJ_nb",
						"name": "closeTransaction",
						"brief": "<p>Close transaction. If you respond to the counteroffer, then it won't be closed.</p>",
						"type": "MethodDoc",
						"params": [
							{
								"identifier": "trans",
								"optional": false,
								"dataType": {
									"tokens": [
										{
											"value": "Transaction",
											"kind": "canonical"
										},
										{
											"value": "Ts.Transaction",
											"kind": "link"
										}
									],
									"template": "%1"
								}
							},
							{
								"identifier": "counteroffer",
								"optional": false,
								"dataType": {
									"tokens": [
										{
											"value": "(...t: Transaction) => void",
											"kind": "canonical"
										},
										{
											"value": "Ts.Transaction",
											"kind": "link"
										}
									],
									"template": "(...t: %1) => void"
								}
							}
						],
						"returns": [
							{
								"dataType": {
									"tokens": [
										{
											"value": "trans is Transaction",
											"kind": "canonical"
										},
										{
											"value": "Ts.Transaction",
											"kind": "link"
										}
									],
									"template": "trans is %1"
								}
							}
						],
						"extends": [],
						"implements": []
					},
					{
						"id": "tzn7r9kx9PsKXOT1ab9PX",
						"name": "initiateTransaction",
						"brief": "<p>Initiate a transaction/negotiation with a car dealer</p>",
						"type": "MethodDoc",
						"params": [
							{
								"identifier": "x",
								"optional": true,
								"description": "<p>info</p>",
								"dataType": {
									"tokens": [
										{
											"value": "object",
											"kind": "canonical"
										}
									],
									"template": "object"
								}
							}
						],
						"returns": [
							{
								"dataType": {
									"tokens": [
										{
											"value": "typeof Transaction",
											"kind": "canonical"
										},
										{
											"value": "Ts.Transaction",
											"kind": "link"
										}
									],
									"template": "typeof %1"
								}
							}
						],
						"extends": [],
						"implements": []
					},
					{
						"id": "4S1lmleDKGZKJgsO55BTo",
						"name": "offerAsk",
						"brief": "<p>Offer a price to sell the car.</p>",
						"type": "MethodDoc",
						"description": "<p>NOTE: This is invalid behaviour if you are the buyer in the transaction.</p>",
						"params": [
							{
								"identifier": "on",
								"optional": false,
								"dataType": {
									"tokens": [
										{
											"value": "Transaction",
											"kind": "canonical"
										},
										{
											"value": "Ts.Transaction",
											"kind": "link"
										}
									],
									"template": "%1"
								}
							},
							{
								"identifier": "counteroffer",
								"optional": true,
								"dataType": {
									"tokens": [
										{
											"value": "(t: Car) => void",
											"kind": "canonical"
										},
										{
											"value": "Car",
											"kind": "link"
										}
									],
									"template": "(t: %1) => void"
								}
							},
							{
								"identifier": "test",
								"optional": false,
								"dataType": {
									"tokens": [
										{
											"value": "{ [testProperty in keyof keyof] }: number",
											"kind": "canonical"
										}
									],
									"template": "{ [testProperty in keyof keyof] }: number"
								}
							}
						],
						"returns": [
							{
								"description": "<p>type inference is working</p>",
								"dataType": {
									"tokens": [
										{
											"value": "boolean",
											"kind": "canonical"
										}
									],
									"template": "boolean"
								}
							}
						],
						"extends": [],
						"implements": []
					},
					{
						"id": "gwAazz8KggmAYxwZWdFHe",
						"name": "offerBid",
						"brief": "<p>Offer a price to buy the car.</p>",
						"type": "MethodDoc",
						"description": "<p>NOTE: This is invalid behaviour if you are the seller in the transaction.</p>",
						"params": [
							{
								"identifier": "on",
								"optional": true,
								"dataType": {
									"tokens": [
										{
											"value": "{ t : Transaction, [id: string]: Transaction[] }",
											"kind": "canonical"
										},
										{
											"value": "Ts.Transaction",
											"kind": "link"
										},
										{
											"value": "Ts.Transaction",
											"kind": "link"
										}
									],
									"template": "{ t : %1, [id: string]: %2[] }"
								}
							},
							{
								"identifier": "counteroffer",
								"optional": true,
								"variadic": true,
								"dataType": {
									"tokens": [
										{
											"value": "Car | Vector",
											"kind": "canonical"
										},
										{
											"value": "Car",
											"kind": "link"
										},
										{
											"value": "Vector",
											"kind": "link"
										}
									],
									"template": "%1 | %2"
								}
							}
						],
						"returns": [
							{
								"dataType": {
									"tokens": [
										{
											"value": "boolean",
											"kind": "canonical"
										}
									],
									"template": "boolean"
								}
							}
						],
						"extends": [],
						"implements": []
					}
				]
			},
			{
				"id": "RglmyJiaqLPQ5gv1fqfq6",
				"name": "installBean",
				"brief": "<p>Install a bean class</p>",
				"type": "FunctionDoc",
				"params": [
					{
						"identifier": "bean",
						"optional": false,
						"description": "<p>the bean class</p>",
						"dataType": {
							"tokens": [
								{
									"value": "{ new (): Bean }",
									"kind": "canonical"
								},
								{
									"value": "Bean",
									"kind": "link"
								}
							],
							"template": "{ new (): %1 }"
						}
					}
				],
				"returns": [
					{
						"dataType": {
							"tokens": [
								{
									"value": "void",
									"kind": "canonical"
								}
							],
							"template": "void"
						}
					}
				],
				"extends": [],
				"implements": []
			},
			{
				"id": "nnLGTXag8Kpfb0phozrbp",
				"name": "isPhysicalObject",
				"brief": "",
				"authors": [
					"Shukant K. Pal &lt;shukantpal@outlook.com&gt;"
				],
				"copyright": "Shukant K. Pal (C) 2020",
				"license": "MIT",
				"see": [
					"PhysicalObject"
				],
				"since": "2020",
				"type": "FunctionDoc",
				"description": "<p>Checks whether the object is an instance of {@code PhysicalObject}.</p>",
				"params": [
					{
						"identifier": "object",
						"optional": false,
						"dataType": {
							"tokens": [
								{
									"value": "Object",
									"kind": "canonical"
								}
							],
							"template": "Object"
						}
					}
				],
				"returns": [
					{
						"dataType": {
							"tokens": [
								{
									"value": "boolean",
									"kind": "canonical"
								}
							],
							"template": "boolean"
						}
					}
				],
				"extends": [],
				"implements": []
			}
		]
	},
	"registry": {
		"pkg-PBs7CHVcBOFnuAA6zc1tX": {
			"uri": "/example-documentation/@webdoc/example.html"
		},
		"tutorial-car": {
			"uri": "/example-documentation/tutorials/car.html"
		},
		"tutorial-road": {
			"uri": "/example-documentation/tutorials/road.html"
		},
		"tutorial-api-manifest": {
			"uri": "/example-documentation/tutorials/api-manifest.html"
		},
		"_OBGa4Tb_ahyYkaeacIXz": {
			"uri": "/example-documentation/@webdoc/example/PIXI.html"
		},
		"jUP3iOOaMjt5Vc-Upie-V": {
			"uri": "/example-documentation/@webdoc/example/PIXI/utils.html"
		},
		"UEN6Hx4l5CXoxvXUKCz4T": {
			"uri": "/example-documentation/@webdoc/example/PIXI/utils/skipHello.html"
		},
		"kZhKc4o9axZMfWfxJdkGB": {
			"uri": "/example-documentation/@webdoc/example/PIXI/TilingSprite.html"
		},
		"IEvrfE0L3QSFXdzjrckJo": {
			"uri": "/example-documentation/@webdoc/example/PIXI/TilingSprite.html#constructor"
		},
		"7uMIRXwfYpmV3F5BNrTjq": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractRenderer.html"
		},
		"H0ewwKfeChhdU8kxr1zxi": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractRenderer.html#backgroundColor"
		},
		"5eSX54L6Y7SNVhZgFcKlk": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractRenderer.html#constructor"
		},
		"zKb8nx4Cgdgd7iDDlYKqV": {
			"uri": "/example-documentation/@webdoc/example/PIXI/ObjectRenderer.html"
		},
		"dVM19Yoc-ESIOYKxg14lG": {
			"uri": "/example-documentation/@webdoc/example/PIXI/ObjectRenderer.html#renderer"
		},
		"B33xDC8xlvh9a2Odfes9k": {
			"uri": "/example-documentation/@webdoc/example/PIXI/ObjectRenderer.html#constructor"
		},
		"PHYauYkK8sMoqmQJvA_JZ": {
			"uri": "/example-documentation/@webdoc/example/PIXI/ObjectRenderer.html#destroy"
		},
		"PEMWrm__hLu_to6t46tME": {
			"uri": "/example-documentation/@webdoc/example/PIXI/ObjectRenderer.html#flush"
		},
		"vMvBbFlLrKYAmMmJj5Bvy": {
			"uri": "/example-documentation/@webdoc/example/PIXI/ObjectRenderer.html#render"
		},
		"Dh_ZNGnBr-MRTqlVj6SZ8": {
			"uri": "/example-documentation/@webdoc/example/PIXI/ObjectRenderer.html#start"
		},
		"EGKbYZn--wA-A6oxV2UQG": {
			"uri": "/example-documentation/@webdoc/example/PIXI/ObjectRenderer.html#stop"
		},
		"g0rD_q2M8UhuH7s4ZMs6i": {
			"uri": "/example-documentation/@webdoc/example/PIXI/System.html"
		},
		"BGmyhkUPy0GTfyJTd_NEt": {
			"uri": "/example-documentation/@webdoc/example/PIXI/System.html#renderer"
		},
		"p2gYyt0jrX_XbR3TUzPCP": {
			"uri": "/example-documentation/@webdoc/example/PIXI/System.html#constructor"
		},
		"J8UtEunB4vnSepINQeDSx": {
			"uri": "/example-documentation/@webdoc/example/PIXI/System.html#destroy"
		},
		"wqJxKa_Qz1k2-qh1ZZ0HF": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html"
		},
		"giMP9Cbgwt4J_PrHCnOhu": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#_drawCallPool"
		},
		"ETyteTtqxKgeylnTs6zKs": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#_textureArrayPool"
		},
		"iS_97xqAfiC17qeNmmTV_": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#bufferSize"
		},
		"QUQEufkND7UT2iUXSdFT5": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#MAX_TEXTURES"
		},
		"PKRhovN1HjKM2YHKcYRQY": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#renderer"
		},
		"tXzU7r8OthPAJQMJz09RA": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#size"
		},
		"CZGuiH8imuZMT2nmDsLoz": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#state"
		},
		"jbaW0dr8FIkoMgaNtrSk4": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#vertexSize"
		},
		"pikE_iJvEqVFc9krJVfJe": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#_shader"
		},
		"9RbTxEEEZVL6bgVHSOcCl": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#geometryClass"
		},
		"kdzLOhCTUxlFc8K1a9l7R": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#shaderGenerator"
		},
		"WdMpRVZW35CE9Y9muQGjO": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#_aBuffers"
		},
		"1MGWb0V4VdFXpLqe_ML0g": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#_bufferedElements"
		},
		"mo7xLzEDCZZEXr9f2kll6": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#_bufferedTextures"
		},
		"WfrnLLlZ9jkpPktHas8HA": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#_bufferSize"
		},
		"sissabUTOzT8UUrB40M6a": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#_flushId"
		},
		"9E4QNe1S249SEZaA2GZKD": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#_iBuffers"
		},
		"QrFoIXFkOmkqydYQO9LfK": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#_indexCount"
		},
		"IbAWZ4HP9Zz0HE0vE953J": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#_packedGeometries"
		},
		"hyu5dOOMGu2fc4qobh4B1": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#_packedGeometryPoolSize"
		},
		"mYL6HEIWx6Cu6XgcbrQsC": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#_vertexCount"
		},
		"NwdCDzKWyC7nPBAS2fTm1": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#bindAndClearTexArray"
		},
		"SLPFN1oZJklBozACXxL_R": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#buildDrawCalls"
		},
		"cm9fU3-Ghir72G4Gvn3SU": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#constructor"
		},
		"-1aoE0oRgsK_dMOCXzLwX": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#contextChange"
		},
		"ozRNHhwWDMYaYRkZWzf3y": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#destroy"
		},
		"PZtweVQ4ijEIMfKDor1mc": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#flush"
		},
		"nnDsEi-_z4pkAFg6CO1Ea": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#initFlushBuffers"
		},
		"nufYVWLP3LV-hm8uhOo1Y": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#onPrerender"
		},
		"PK2mOGLAxPElqMgnIp_eh": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#packInterleavedGeometry"
		},
		"JkX28yNzHc0DuxuNBvnJZ": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#render"
		},
		"cJ6IvngILi74v5QXfeDbx": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#start"
		},
		"_JoCIWPpeHJeUAaxG02Sl": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#stop"
		},
		"ANYWcXINBoAmH7yg7iNLW": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#getAttributeBuffer"
		},
		"6635vqsoxpYJBqWoeerd9": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#getIndexBuffer"
		},
		"3-SyuRW86_h_1VcK3UL1S": {
			"uri": "/example-documentation/@webdoc/example/PIXI/TRANSFORM_MODE.html"
		},
		"tX0CjOGNyDNpLgWT5WM6x": {
			"uri": "/example-documentation/@webdoc/example/PIXI/TRANSFORM_MODE.html#DYNAMIC"
		},
		"tr-1DsuEpjFaH8qM0OZsq": {
			"uri": "/example-documentation/@webdoc/example/PIXI/TRANSFORM_MODE.html#STATIC"
		},
		"vYottLG4kVAYRZcr1xeoC": {
			"uri": "/example-documentation/@webdoc/example/PIXI/.html"
		},
		"yIpfUiTHZUuS-BJkqt7Rx": {
			"uri": "/example-documentation/@webdoc/example/PIXI/.html#destroy"
		},
		"NGugSaiitVoU3P2PaTch_": {
			"uri": "/example-documentation/@webdoc/example/PIXI/.html#init"
		},
		"4rO9MAh_hqJetpa3p-J8Q": {
			"uri": "/example-documentation/@webdoc/example/PIXI.html#SVG_SIZE"
		},
		"9DryrJNx0HTkV3xv_r8Va": {
			"uri": "/example-documentation/@webdoc/example/R.html"
		},
		"63tC7JpvECBRcGsiptsBb": {
			"uri": "/example-documentation/@webdoc/example/R/Road.html"
		},
		"yIXircf86pLfrrhVVktG5": {
			"uri": "/example-documentation/@webdoc/example/R/Road.html#constructor"
		},
		"janpy0mYYF6klpOKP8Et3": {
			"uri": "/example-documentation/@webdoc/example/R.html#DEFAULT_LANES"
		},
		"u65hAXc6vdwg4ltI1KSVv": {
			"uri": "/example-documentation/@webdoc/example/R.html#buildRoad"
		},
		"Q8cs5WPiiMhompO0oexUA": {
			"uri": "/example-documentation/@webdoc/example/Ts.html"
		},
		"1gFJ7pAZJd2IqIktd3jW5": {
			"uri": "/example-documentation/@webdoc/example/Ts/Transaction.html"
		},
		"ww0cbwBEwRND1e6sO6Wt4": {
			"uri": "/example-documentation/@webdoc/example/Ts/Transaction.html#constructor"
		},
		"mbLmzJrzCoU4UVZ9ZzyIH": {
			"uri": "/example-documentation/@webdoc/example/Ts/Banana.html"
		},
		"lK6Il8ntVpnzRrmKcZ0xh": {
			"uri": "/example-documentation/@webdoc/example/Ts/Banana.html#color"
		},
		"GIyOU6cgX7LcwOqdcvd1Z": {
			"uri": "/example-documentation/@webdoc/example/Ts/Banana.html#peels"
		},
		"hQgbd8KZrYFVycuCxCuL-": {
			"uri": "/example-documentation/@webdoc/example/Ts/Banana.html#usage"
		},
		"KjeAV6HIe6IcQV_K8q8wR": {
			"uri": "/example-documentation/@webdoc/example/Ts/Banana.html#ripe"
		},
		"OVDAAmcC4WWJ2Pwx0uA2l": {
			"uri": "/example-documentation/@webdoc/example/Ts/Banana.html#rotten"
		},
		"AlQ6MpFBYnXER9BSI3wCB": {
			"uri": "/example-documentation/@webdoc/example/Bean.html"
		},
		"gOGQ7_SGeKQbS2XJ_3yQZ": {
			"uri": "/example-documentation/@webdoc/example/Bean.html#constructor"
		},
		"X7IbahnMg2xrR7-rHehZk": {
			"uri": "/example-documentation/@webdoc/example/Bean.html#roast"
		},
		"Irv6k-2nI39mtBmt68_Ul": {
			"uri": "/example-documentation/@webdoc/example/Car.html"
		},
		"67APnM-JJJLnL_GCAthFu": {
			"uri": "/example-documentation/@webdoc/example/Car.html#DEFAULT_DRIVE_SHIFT"
		},
		"sjUQdbzdj7h3Sza8DzpKs": {
			"uri": "/example-documentation/@webdoc/example/Car.html#bounds"
		},
		"4N7R5tjQi9QaeMQ8GW05l": {
			"uri": "/example-documentation/@webdoc/example/Car.html#interactions"
		},
		"vBWktouECvcnf9DiBNBD-": {
			"uri": "/example-documentation/@webdoc/example/Car.html#mass"
		},
		"orhBGuDs895Sf4adYePVS": {
			"uri": "/example-documentation/@webdoc/example/Car.html#model"
		},
		"jhSmWDJnVyilb1XKEkgvP": {
			"uri": "/example-documentation/@webdoc/example/Car.html#position"
		},
		"pVHr4iNUJ4xR6G7W--VTT": {
			"uri": "/example-documentation/@webdoc/example/Car.html#velocity"
		},
		"lUxGt6xZ99kFeuZR87lWO": {
			"uri": "/example-documentation/@webdoc/example/Car.html#vin"
		},
		"afxujjiWNpjynTMvIX6db": {
			"uri": "/example-documentation/@webdoc/example/Car.html#registerRetail"
		},
		"5lizaYZKHXuwN31___KMO": {
			"uri": "/example-documentation/@webdoc/example/Car.html#constructor"
		},
		"y7oqw3lytQGQLv-6i6-_z": {
			"uri": "/example-documentation/@webdoc/example/Car.html#onCrash"
		},
		"K5QshxgaZDFudlXL19-4r": {
			"uri": "/example-documentation/@webdoc/example/CoffeeBean.html"
		},
		"vqX8YbbOomwTDh4LIZ1iE": {
			"uri": "/example-documentation/@webdoc/example/CoffeeBean.html#maturity"
		},
		"IGOWqgK56mIOHRthHVovT": {
			"uri": "/example-documentation/@webdoc/example/CoffeeBean.html#roasted"
		},
		"7Qo69zGaRiFZi0IoYTUPT": {
			"uri": "/example-documentation/@webdoc/example/CoffeeBean.html#constructor"
		},
		"NdZvpNgnUecHhR3_eh9t9": {
			"uri": "/example-documentation/@webdoc/example/CoffeeBean.html#roast"
		},
		"6Ilx6f0m0LdIVRlqsNrvj": {
			"uri": "/example-documentation/@webdoc/example/ExampleFactory.html"
		},
		"T_FX-iciP3Vm229HloKJ7": {
			"uri": "/example-documentation/@webdoc/example/ExampleFactory.html#getInstance"
		},
		"dciz085kJ1UCXLG9znYvJ": {
			"uri": "/example-documentation/@webdoc/example/ExampleFactory.html#build"
		},
		"qHUAD9rgfTIWD7px5txXK": {
			"uri": "/example-documentation/@webdoc/example/ExampleFactory.html#constructor"
		},
		"VZMmTcHq_DLFUWQR9pTRY": {
			"uri": "/example-documentation/@webdoc/example/ExampleFactory.html#getContext"
		},
		"j7oqIem62DDZU4ftAIZjc": {
			"uri": "/example-documentation/@webdoc/example/Gravity.html"
		},
		"2Q1CJ4Yk3hmt6MmHgkojR": {
			"uri": "/example-documentation/@webdoc/example/Gravity.html#constructor"
		},
		"qNu9qvNO0borGXaIqCM-N": {
			"uri": "/example-documentation/@webdoc/example/Gravity.html#force"
		},
		"Q8yKS8PQkzCzeT3lNxaxt": {
			"uri": "/example-documentation/@webdoc/example/PhysicalInteraction.html"
		},
		"owLrh5DfbR0UWZf3xgoD-": {
			"uri": "/example-documentation/@webdoc/example/PhysicalInteraction.html#GRAVITATIONAL_CONSTANT"
		},
		"x6W7RcBnSGNgZ5vLZV76w": {
			"uri": "/example-documentation/@webdoc/example/PhysicalInteraction.html#createGravity"
		},
		"zbD_MlZ3YO09ERBn0E6KB": {
			"uri": "/example-documentation/@webdoc/example/PhysicalInteraction.html#force"
		},
		"lw-O5NVgDCE5RgK7sRHPG": {
			"uri": "/example-documentation/@webdoc/example/PhysicalObject.html"
		},
		"i0J2xGGdbO297v1LOpSNN": {
			"uri": "/example-documentation/@webdoc/example/PhysicalObject.html#bounds"
		},
		"1vH7AsdwrXsihNaylvawl": {
			"uri": "/example-documentation/@webdoc/example/PhysicalObject.html#interactions"
		},
		"EZKRiqJaqeJE0FIH6YpoI": {
			"uri": "/example-documentation/@webdoc/example/PhysicalObject.html#mass"
		},
		"_DXynJp20YOKQkIrZMh-5": {
			"uri": "/example-documentation/@webdoc/example/PhysicalObject.html#position"
		},
		"NTNrwGNujg-t5Up6xPF-K": {
			"uri": "/example-documentation/@webdoc/example/PhysicalObject.html#velocity"
		},
		"VKZsGy2IduQe015QACrMF": {
			"uri": "/example-documentation/@webdoc/example/Vector.html"
		},
		"CWby0cHv6ybFpDNkDyMmj": {
			"uri": "/example-documentation/@webdoc/example/Vector.html#dimensions"
		},
		"pGDFi6Z6IJB-2yox26NT8": {
			"uri": "/example-documentation/@webdoc/example/Vector.html#add"
		},
		"FF3OCiDb4I5yn0Vcn6Bjm": {
			"uri": "/example-documentation/@webdoc/example/Vector.html#equalTo"
		},
		"wiBwk-0jnH2lKTGOrSb78": {
			"uri": "/example-documentation/@webdoc/example/Vector.html#isCompat"
		},
		"R8uzxN8ausQbtGUv4tM4H": {
			"uri": "/example-documentation/@webdoc/example/CAR_MAKES.html"
		},
		"lpOEFKBqynTnd3oww5ILG": {
			"uri": "/example-documentation/@webdoc/example/CAR_MAKES.html#FERRARI"
		},
		"ua8h_ldqQiQfryYuveYgW": {
			"uri": "/example-documentation/@webdoc/example/CAR_MAKES.html#FORD"
		},
		"pVmmRQdcXTBo5cFkfJlQZ": {
			"uri": "/example-documentation/@webdoc/example/CAR_MAKES.html#GENERAL_MOTORS"
		},
		"1v-WQWtJ2JA2PGYqw_KWB": {
			"uri": "/example-documentation/@webdoc/example/CAR_MAKES.html#JAGUAR"
		},
		"Z1x4oTpeREgBbNZZZYFUC": {
			"uri": "/example-documentation/@webdoc/example/CAR_MAKES.html#KIA"
		},
		"gKaYSzhrsubW9bpdukzuD": {
			"uri": "/example-documentation/@webdoc/example/CAR_MAKES.html#LAMBORGHINI"
		},
		"QM5pFiwYtWkOzaIVbCPbf": {
			"uri": "/example-documentation/@webdoc/example/CAR_MAKES.html#TOYOTA"
		},
		"4nvpFcQyqoOtNUcIUq-f-": {
			"uri": "/example-documentation/@webdoc/example/VectorArray.html"
		},
		"-vz-t3-YMneU2pcp3-QsS": {
			"uri": "/example-documentation/@webdoc/example/VectorArray.html#meta"
		},
		"ZodWBScxEH5QpUG5EjrPv": {
			"uri": "/example-documentation/@webdoc/example/CarDealer.html"
		},
		"Vt-QS5u7yvBrJSq5nJ_nb": {
			"uri": "/example-documentation/@webdoc/example/CarDealer.html#closeTransaction"
		},
		"tzn7r9kx9PsKXOT1ab9PX": {
			"uri": "/example-documentation/@webdoc/example/CarDealer.html#initiateTransaction"
		},
		"4S1lmleDKGZKJgsO55BTo": {
			"uri": "/example-documentation/@webdoc/example/CarDealer.html#offerAsk"
		},
		"gwAazz8KggmAYxwZWdFHe": {
			"uri": "/example-documentation/@webdoc/example/CarDealer.html#offerBid"
		},
		"RglmyJiaqLPQ5gv1fqfq6": {
			"uri": "/example-documentation/@webdoc/example/installBean.html"
		},
		"nnLGTXag8Kpfb0phozrbp": {
			"uri": "/example-documentation/@webdoc/example/isPhysicalObject.html"
		}
	}
}